{
  "name" : "654.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Deep Semantic Role Labeling: What Works and What’s Next",
    "authors" : [ ],
    "emails" : [ ],
    "sections" : [ {
      "heading" : null,
      "text" : "1 000\n011\n012\n013\n014\n015\n016\n017\n018\n019\n020\n021\n022\n023\n024\n025\n026\n027\n028\n029\n030\n031\n032\n033\n034\n035\n036\n037\n038\n039\n040\n041\n042\n043\n044\n045\n046\n047\n048\n049\n061\n062\n063\n064\n065\n066\n067\n068\n069\n070\n071\n072\n073\n074\n075\n076\n077\n078\n079\n080\n081\n082\n083\n084\n085\n086\n087\n088\n089\n090\n091\n092\n093\n094\n095\n096\n097\n098\n099"
    }, {
      "heading" : "1 Introduction",
      "text" : "Semantic role labeling (SRL) systems aim to recover the predicate-argument structure of a sentence, to determine essentially “who did what to whom”, “when”, and “where.” Recently breakthroughs involving end-to-end deep models for SRL without syntactic input (Zhou and Xu, 2015; Marcheggiani et al., 2017) seem to overturn the long-held belief that syntactic parsing is a prerequisite for this task (Punyakanok et al., 2008). In this paper, we show that this result can be pushed further using deep highway bidirectional LSTMs with constrained decoding, again significantly moving the state of the art (another 2 points on CoNLL 2005). We also present careful empirical analysis to determine what works well and what might be done to progress even further.\nOur model combines a number of best practices in the recent deep learning literature. Following Zhou and Xu (2015), we treat SRL as a BIO tagging problem and use deep bidirectional LSTMs. However, we differ by (1) simplifying the input and output layers, (2) introducing highway connections (Srivastava et al., 2015; Zhang et al., 2016), (3) using recurrent dropout (Gal, 2015), (4) decoding with BIO-constraints, and (5) ensembling with a product of experts. Our model gives a 10% relative error reduction over previous state of the art on the test sets of CoNLL 2005 and 2012. All code and models will be publicly released.\nWe present a set of detailed error analyses to better understand the performance gains, including (1) design choices on architecture, initialization, and regularization that have a surprisingly large impact on model performance, (2) analyses of different types of prediction errors, e.g. showing that deep models excel at predicting long-distance dependencies but still struggles with known challenges such as PP-attachment errors and adjunct-argument distinctions, (3) a careful analysis of the role of syntax, showing that there is significant room for improvement given oracle syntax but errors from existing parsers prevent effective use in SRL.\nIn summary, our main contributions are:\n• A new state-of-the-art deep network for endto-end SRL, supported by code and models that will be publicly available. • An in-depth error analysis indicating where\nthe models work well and where they still struggle, including discussion of structural consistency and long-distance dependencies. • Experiments that point toward directions for\nfuture improvements, including a detailed discussion of how and when syntactic parsers could be used to improve these results.\n2\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199"
    }, {
      "heading" : "2 Model",
      "text" : "Two major factors contribute to the success of our deep SRL model: (1) applying recent advances in training deep recurrent neural networks such as highway connections (Srivastava et al., 2015; Zhang et al., 2016) and RNN-dropouts (Gal, 2015)1; and (2) using an A∗ decoding algorithm, similar to Lewis and Steedman (2014) to enforce structural consistency at prediction time, without adding more complexity to the training process.\nFormally, the goal of our task is to predict a sequence y given a sentence-predicate pair (w, v) as input. Each yi belongs to a discrete set of BIO tags T . Words outside argument spans have the tag O, and words at the beginning and inside of argument with role r have the tags Br and Ir respectively. Let n = |w| = |y| be the length of the sequence.\nPredicting an SRL structure under our model involves finding the highest-scoring tag sequence over the space of all possibilities Y:\nŷ = argmax y∈Y f(w,y) (1)\nWe use a deep bidirectional LSTM (BiLSTM) to learn a locally decomposed scoring function conditioned on the input: ∑n t=1 log p(yt | w).\nTo incorporate additional information (e.g. structural consistency, syntactic input), we augment the scoring function with penalization terms:\nf(w,y) = n∑ t=1 log p(yt | w)− ∑ c∈C c(w, y1:t) (2)\nEach constraint function c applies a non-negative penalty given the input w and a length-t prefix y1:t. These constraints can be hard or soft depending on whether the penalties are finite."
    }, {
      "heading" : "2.1 Deep BiLSTM Model",
      "text" : "Our model computes the distribution over tags using stacked BiLSTMs, which we define as follows:\nil,t = σ(W l i [hl,t+δl ,xl,t] + b l i) (3) ol,t = σ(W l o[hl,t+δl ,xl,t] + b l o) (4) fl,t = σ(W l f[hl,t+δl ,xl,t] + b l f + 1) (5) c̃l,t = tanh(W l c[hl,t+δl ,xl,t] + b l c) (6) cl,t = il,t ◦ c̃l,t + fl,t ◦ ct+δl (7) hl,t = ol,t ◦ tanh(cl,t) (8)\n1We thank Mingxuan Wang for suggesting highway connections with simplified inputs and outputs. Part of our model is extended from his unpublished implementation.\nwhere xl,t is the input to the LSTM at layer l and timestep t. δl is either 1 or −1, indicating the directionality of the LSTM at layer l.\nTo stack the LSTMs in an interleaving pattern, as proposed by Zhou and Xu (2015), the layerspecific inputs xl,t and directionality δl are arranged in the following manner:\nxl,t =\n{ [Wemb(wt),Wmask(t = v)] l = 1\nhl−1,t l > 1 (9)\nδl = { 1 if l is even −1 otherwise\n(10)\nThe input vector x1,t is the concatenation of token wt’s word embedding and an embedding of the binary feature (t = v) indicating whether the current word is the given predicate.\nFinally, the locally normalized distribution over output tags is computed via a softmax layer:\np(yt | x) ∝ exp(WytaghL,t + btag) (11)\nHighway Connections To alleviate the vanishing gradient problem when training deep BiLSTMs, we use gated highway connections described in Zhang et al. (2016); Srivastava et al. (2015). We include transform gates rt to control the weight of linear and non-linear transformations between layers (See Figure 1). The output hl,t is changed to:\nrl,t = σ(W l r[hl,t−1,xt] + b l r) (12) h′l,t = ol,t ◦ tanh(cl,t) (13) hl,t = rl,t ◦ h′l,t + (1− rl,t) ◦Wlhxl,t (14)\n3\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\nRecurrent Dropout To reduce over-fitting, we use dropout as described in Gal (2015). A shared dropout mask zl is applied to the hidden state:\nh̃l,t = rl,t ◦ h′l,t + (1− rl,t) ◦Wlhxl,t (15)\nhl,t = zl ◦ h̃l,t (16)\nzl is shared across timesteps at layer l to avoid amplifying the dropout noise along the sequence."
    }, {
      "heading" : "2.2 Constrained A∗ Decoding",
      "text" : "The approach described so far does not model any dependencies between the output tags. To incorporate constraints on the output structure at decoding time, we use A∗ search over tag prefixes for decoding. Starting with an empty sequence, the tag sequence is built from left to right. The score for a partial sequence with length t is defined as:\nf(w, y1:t) = t∑ i=1 log p(yi | w)− ∑ c∈C c(w, y1:i)\n(17) An admissible A∗ heuristic can be computed efficiently by summing over the best possible tags for all timesteps after t:\ng(w, y1:t) = n∑ i=t+1 max yi∈T log p(yi | w) (18)\nExploration of the prefixes is determined by an agenda A which is sorted by f(w, y1:t) + g(w, y1:t). In the worst case, A∗ explores exponentially many prefixes, but because the distribution p(yt | w) learned by the BiLSTM models is very peaked, the algorithm is efficient in practice. We list some example constraints as follows:\nBIO Constraints These constraints reject any sequence that does not produce valid BIO transitions, such as BARG0 followed by IARG1.\nSRL Constraints Punyakanok et al. (2008); Täckström et al. (2015) described a list of SRLspecific global constraints: • Unique core roles (U): Each core role\n(ARG0-ARG5, ARGA) should appear at most once for each predicate. • Continuation roles (C): A continuation role\nC-X can exist only when its base role X is realized before it. • Reference roles (R): A reference role R-X\ncan exist only when its base role X is realized (not necessarily before R-X).\nWe only enforce U and C constraints, since the R constraints are more commonly violated in gold data, and enforcing them results in worse performance (see discussions in Section 4.3).\nSyntactic Constraints We can enforce consistency with a given parse tree by rejecting or penalizing arguments that are not constituents. In Section 4.4, we will discuss the motivation behind using syntactic constraints and experimental results using both predicted and gold syntax."
    }, {
      "heading" : "3 Experiments",
      "text" : ""
    }, {
      "heading" : "3.1 Datasets",
      "text" : "We measure the performance of our SRL system on two PropBank-style, span-based SRL datasets: CoNLL-2005 (Carreras and Màrquez, 2005) and CoNLL-2012 (Pradhan et al., 2013)2. Both datasets provide gold predicates (their index in the sentence) as part of the input. Therefore, each provided predicate corresponds to one training/test tag sequence. We follow the traindevelopment-test split for both datasets and use the official evaluation script from the CoNLL 2005 shared task for evaluation on both datasets."
    }, {
      "heading" : "3.2 Model Setup",
      "text" : "Our network consists of 8 BiLSTM layers (4 forward LSTMs and 4 reversed LSTMs) with 300- dimensional hidden units, and a softmax layer for predicting the output distribution.\nInitialization All the weight matrices in BiLSTMs are initialized with random orthonormal matrices as described in Saxe et al. (2013).\nAll the tokens are lower-cased and initialized with 100-dimensional GloVe embeddings pretrained on 6B tokens (Pennington et al., 2014) and updated during training. Tokens that are not covered by GloVe are replaced with a randomly initialized UNK embedding.\nTraining We use Adadelta (Zeiler, 2012) with = 1e−6 and ρ = 0.95 and mini-batches of size 80. We set RNN-dropout probability to 0.1 and clip gradients with norm larger than 1. All the models are trained for 500 epochs with early stopping based on development results 3.\n2We used the version of OntoNotes downloaded at: http://cemantix.org/data/ontonotes.html.\n3Training the full model on CoNLL 2005 takes about 5 days on a single Titan X Pascal GPU.\n4\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\nDevelopment WSJ Test Brown Test Combined\nMethod P R F1 Comp. P R F1 Comp. P R F1 Comp. F1\nOurs (PoE) 83.1 82.4 82.7 64.1 85.0 84.3 84.6 66.5 74.9 72.4 73.6 46.5 83.2 Ours 81.6 81.6 81.6 62.3 83.1 83.0 83.1 64.3 72.9 71.4 72.1 44.8 81.6\nZhou - - 79.6 - - - 82.8 - - - 69.4 - 81.1 FitzGerald (Struct.,PoE) 81.2 76.7 79.2 55.2 82.5 78.2 80.3 57.3 74.5 70.0 72.2 41.3 - Täckström (Struct.) 81.2 76.2 78.6 54.4 82.3 77.6 79.9 56.0 74.3 68.6 71.3 39.8 - Toutanova (Ensemble) - - 78.6 58.7 81.9 78.8 80.3 60.1 - - 68.8 40.8 - Punyakanok (Ensemble) 80.1 74.8 77.4 50.7 82.3 76.8 79.4 53.8 73.4 62.9 67.8 32.3 77.9\nTable 1: Experimental results on CoNLL 2005, in terms of precision (P), recall (R), F1 and percentage of completely correct predicates (Comp.). We report results of our best single and ensemble (PoE) model. The comparison models are Zhou and Xu (2015), FitzGerald et al. (2015), Täckström et al. (2015), Toutanova et al. (2008) and Punyakanok et al. (2008).\nDevelopment Test\nP R F1 Comp. P R F1 Comp.\nOurs (PoE) 83.5 83.2 83.4 67.5 83.5 83.3 83.4 68.5 Ours 81.7 81.4 81.5 64.6 81.8 81.6 81.7 66.0\nZhou - - 81.1 - - - 81.3 - FitzGerald (Struct.,PoE) 81.0 78.5 79.7 60.9 81.2 79.0 80.2 62.6 Täckström (Struct.) 80.5 77.8 79.1 60.1 80.6 78.2 79.4 61.8 Pradhan (revised) 78.5 76.6 77.5 55.8 78.5 76.6 77.5 55.8\nTable 2: Experimental results on CoNLL 2012 in the same metrics as above. We compare our best single and ensemble (PoE) models against Zhou and Xu (2015), FitzGerald et al. (2015), Täckström et al. (2015) and Pradhan et al. (2013).\nEnsembling We use a product of experts (Hinton, 2002) to combine predictions of 5 models, each trained on 80% of the training corpus and validated on the remaining 20%. For the CoNLL 2012 corpus, we split the training data from each sub-genre into 5 folds, such that the training data will have similar genre distributions.\nConstrained Decoding We experimented with different types of constraints on the CoNLL 2005 and CoNLL 2012 development sets. Only the BIO hard constraints significantly improve over the ensemble model. Therefore, in our final results, we only use BIO hard constraints during decoding 4."
    }, {
      "heading" : "3.3 Results",
      "text" : "In Table 1 and 2, we compare our best single and ensemble model with previous work. Our ensemble (PoE) has an absolute improvement of 2.1 F1 on CoNLL 2005 and 2.3 on CoNLL 2012 over the previous state of the art. Our single model also achieves more than 0.4 improvement on both datasets. In comparison with the best reported results, our percentage of completely correct predicates improves by 5.9%. While the continuing trend of improving SRL without syntax seems to\n4A∗ search in this setting finds the optimal sequence for all sentences and is therefore equivalent to Viterbi decoding.\n0 100 200 300 400 500 Num. Epochs\n66\n68\n70\n72\n74\n76\n78\n80\n82\nD e v . F1\n%\nOur model No highway connections No RNN-dropout No orthonormal initialization\nFigure 2: Learning curve of various ablations. The combination of highway layers, orthonormal parameter initialization and recurrent dropout is crucial to achieving strong performance. The numbers shown here are without constrained decoding.\nsuggest that neural end-to-end systems no longer needs parsers, our analysis in Section 4.4 will show that accurate syntactic information can improve these deep models."
    }, {
      "heading" : "3.4 Ablations",
      "text" : "Figure 2 shows learning curves of our model ablations on the CoNLL 2005 development set. We ablate our full model by removing highway connections, RNN-dropout and orthonormal initialization independently. Without dropout, the model overfits at around 300 epochs at 78% F1. Or-\n5\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\nthonormal parameter initialization is surprisingly important—without this, the model achieves only 65% F1 within the first 50 epochs. All 8 layer ablations suffer a loss of more than 1.7% in absolute F1 compared to the full model."
    }, {
      "heading" : "4 Analysis",
      "text" : "To better understand our deep SRL model and its relation to previous work, we address the following questions with a suite of empirical analyses: • What is the model good at and what kind of\nmistakes does the model make? • How well do LSTMs model global structural\nconsistency, despite conditionally independent tagging decisions? • Is our model implicitly learning syntax, and\ncould explicitly modeling syntax still help? All the analysis in this section is done on the CoNLL 2005 development set unless otherwise stated. We are also able to compare to previous systems with model predictions available online (Punyakanok et al., 2005; Pradhan et al., 2005)5."
    }, {
      "heading" : "4.1 Error Types Breakdown",
      "text" : "Inspired Kummerfeld et al. (2012), we define a set of oracle transformations that fix various prediction errors and observe the relative improvement after each operation (See Table 3). Figure 3 shows how our work compare to the previous systems in terms of different types of mistakes. The analysis shows that while our model makes a similar number of labeling errors to traditional syntax-based systems, it has far fewer missing arguments (perhaps due to parser errors making some arguments difficult to recover for syntax-based systems).\nLabel Confusion As shown in Table 3, our system most commonly makes labeling errors, where the predicted span is an argument but the role was incorrectly labeled. Table 4 shows a confusion matrix for the most frequent labels. The model often confuses ARG2 with AM-DIR, AM-LOC and AM-MNR. These confusions can arise due to the use of ARG2 in many verb frames to represent semantic relations such as direction or location. For example, ARG2 in the frame move.01 is defined as Arg2-GOL: destination 6. This type of argument-\n5Model predictions of CoNLL 2005 systems: http:// www.cs.upc.edu/˜srlconll/st05/st05.html\n6Source: Unified verb index: http://verbs. colorado.edu.\nOperation Description % Fix Labels Correct the span label its boundarymatches gold. 29.3 Move Arg. Move an unique core argument to itscorrect position. 4.5\nMerge Spans\nCombine two predicted spans into a gold span if they are separated by at most one word. 10.6\nSplit Spans\nSplit a predicted span into two gold spans that are separated by at most one word. 14.7\nFix Boundary Correct the boundary of a span if its label matches an overlapping gold span. 18.0 Drop Arg. Drop a predicted argument that does notoverlap with any gold span. 7.4 Add Arg. Add a gold argument does not overlapwith any predicted span. 11.0\nTable 3: Oracle transformations paired with the relative error reduction after each operation. All the operations are permitted only if they do not cause any overlapping arguments.\nadjunct distinction is known to be difficult (Kingsbury et al., 2002), and it is not surprising that our neural model has many such failure cases.\nAttachment Mistakes A second common source of error is reflected by the Merge Spans transformation (10.6%) and the Split Spans transformation (14.7%). These errors are closely tied to prepositional phrase (PP) attachment errors, which are also known to be some of the biggest challenges for linguistic analysis (Kummerfeld et al., 2012). Figure 4 shows the distribution of syntactic span labels involved in an attachment mistake, where 62% of the syntactic spans are prepositional phrases. For example, in Sumitomo financed the acquisition from Sears our model mistakenly labels the prepositional phrase from\n6\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\npred. \\ gold A0 A1 A2 A3 ADV DIR LOC MNR PNC TMP A0 76 13 6 14 2 0 0 0 0 0 A1 16 74 25 0 0 18 9 11 19 2 A2 2 5 31 52 10 45 26 46 19 0 A3 1 0 1 57 2 0 0 0 19 2\nADV 0 0 0 5 33 0 11 33 19 5 DIR 0 0 3 5 0 27 9 2 0 0 LOC 1 2 7 0 2 0 34 11 0 2 MNR 1 0 7 29 21 0 0 43 0 3 PNC 0 1 3 5 0 9 3 2 44 0 TMP 0 2 3 0 26 9 20 7 0 71\nTable 4: Confusion matrix of span labels, showing the percentage of predicted labels for each gold label. We only count predicted arguments that match gold span boundaries.\nPP VP NP SBAR ADVP Other\n0\n20\n40\n60\n80\n100\n62\n10 10 5 4 9\n% of\nla be\nls\nFigure 4: For cases where our model either splits a gold span into two (Z → XY ) or merges two gold constituents (XY → Z), we show the distribution of syntactic labels for the Y span. Results show the major cause of these errors is inaccurate prepositional phrase attachment.\nSears as the ARG2 of financed, whereas it should instead attach to acquisition."
    }, {
      "heading" : "4.2 Long-range Dependencies",
      "text" : "To analyze the model’s ability to capture longrange dependencies, we compute the F1 of our model on arguments with various distances to the predicate. Figure 5 shows that for all models, performance tends to degrade for arguments further from the predicate. Interestingly, the gap between shallow and deep models becomes much larger for the long-distance predicate-argument structures. The absolute gap between our 2 layer and 8 layer models is 3-4 F1 for arguments that are within 2 words to the predicate, and 5-6 F1 for arguments that are farther away from the predicate. Surprisingly, the neural model performance deteriorates less severely on long-range dependencies than traditional syntax-based models."
    }, {
      "heading" : "4.3 Structural Consistency",
      "text" : "We can quantify two types of structural consistencies: the BIO constraints and the SRL-specific constraints. Via our ablation study, we show that deeper BiLSTMs are better at enforcing these structural consistencies, although not perfectly.\nBIO Violations The BIO format requires argument spans to begin with a B tag. Any I tag directly following an O tag or a tag with different label is considered a violation. Table 5 shows the number of BIO violations per token for BiLSTMs with different depths. The number of BIO violations decreases when we use a deeper model. The gap is biggest between 2-layer and 4-layer models, and diminishes after that.\nIt is surprising that although the deeper models generate impressively accurate token-level predictions, they still make enough BIO errors to significantly hurt performance—when these constraints are simple enough to be enforced by trivial rules. To understand the reason behind it, we compare the average entropy between tokens involved BIO violations with the averaged entropy of all tokens. For the 8-layer model, the average entropy on these tokens is 30 times higher than the averaged entropy on all tokens. This suggests that BIO inconsistencies occur when there is some ambiguity. For example, if the model is unsure whether two consecutive words should belong to an ARG0 or ARG1, it might generate inconsistent BIO sequences such as BARG0, IARG1 when decoding at the token level. Using BIO-constrained decoding can resolve this ambiguity and result in a structurally consistent solution.\nSRL Structure Violations The model predictions can also violate the SRL-specific constraints commonly used in prior work (Punyakanok et al., 2008; Täckström et al., 2015). As shown in Table 6, the model occasionally violates these SRL constraints. With our constrained decoding algorithm, it is straightforward to enforce the unique core roles (U) and continuation roles (C) constraints during decoding. The constrained de-\n7\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n656\n657\n658\n659\n660\n661\n662\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\nHousing starts are expected to quicken a bit from August’s pace\nARG0\nARG1\nARG2ARG2\nARG1\nV ARG2 ARG3\nARG2ARG0\nV\nV\nGold\nPred.\n+SRL\nFigure 6: Example where performance is hurt by enforcing the constraint that core roles may only occur once (+SRL).\ncoding results are shown with the model named L8+PoE+SRL in Table 6.\nAlthough the violations are eliminated, the performance does not significantly improve. This is mainly due to two factors: (1) the model often already satisfies these constraints on its own, so the number of violations to be fixed are relatively small, and (2) the gold SRL structure sometimes violate the constraints and enforcing hard constraints can hurt performance. Figure 6 shows a sentence in the CoNLL 2005 development set. Our original model produces two ARG2s for the predicate quicken, and this violates the SRL constraints. When the A∗ decoder fixes this violation, it changes the first ARG1 into ARG2 because ARG0,ARG1,ARG2 is a more frequent pattern in the training data and has higher overall score."
    }, {
      "heading" : "4.4 Can Syntax Still Help SRL?",
      "text" : "The Propbank-style SRL formalism is closely tied to syntax (Bonial et al., 2010; Weischedel et al., 2011). In Table 6, we show that 98.7% of the gold SRL arguments match an unlabeled constituent in the gold syntax tree. Similar to some recent work (Zhou and Xu, 2015), our model achieved strong performance without directly modeling syntax. A natural question follows: are neural SRL models implicitly learning syntax? Table 6 shows the trend of deeper models making predictions that are more consistent with the gold syntax in terms of span boundaries. With our best model, 94.3% of the predicted arguments spans are part of the gold parse tree. This consistency is on par with previous CoNLL 2005 systems that directly model constituency and use predicted parse trees as features (Punyakanok, 95.3% and Pradhan, 93.0%).\nConstrained Decoding with Syntax The above analysis raises a further question: would improving consistency with syntax provide improvements for SRL? Our constrained decoding algorithm described in Section 2.2 enables us to inject syntax as a decoding constraint without having to re-train\nthe model. In Figure 7, we compare the SRL accuracy with syntactic constraints specified by gold parse or automatic parses. The penalty of disagreeing with the parse tree is a single parameter dictating how much the model should trust the provided syntax. When using gold syntax, the predictions improve up to 2 F1 as the penalty increases. The improvement from using Choe’s parser (Choe and Charniak, 2016) is much smaller, while using the Charniak parser (Charniak, 2000) hurts performance if the model places too much trust in it. These results suggest that high-quality syntax can still make a large impact on SRL.\nA known challenge for syntactic parsers is robustness on out-of-domain data. Therefore we\n8\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n0 1 10 100 1000 10000 ∞\n82\n83\n84\n85\nPenalty\nF1 %\nChoe Charniak Gold\nFigure 7: Performance of syntax-constrained decoding as the non-constituent penalty increases for syntax from two parsers (from Choe and Charniak (2016) and Charniak (2000)) and gold syntax. The best existing parser gives a small improvement, but the improvement from gold syntax shows that there is still potential for syntax to help SRL.\nCoNLL-05 CoNLL-2012 Dev.\nDev. Test BC BN NW MZ PT TC WB\nL8+PoE 82.7 84.6 81.4 82.8 82.8 80.4 93.6 84.8 81.0 +AutoSyntax 83.2 84.8 81.5 82.8 83.2 80.6 93.7 84.9 81.1\nTable 7: F1 on CoNLL 2005, and the development set of CoNLL 2012, broken down by genres. Syntax-constrained decoding (+AutoSyntax) shows bigger improvement on in-domain data (CoNLL 05 and CoNLL 2012 NW).\nprovide experimental results in Table 7 for both CoNLL 2005 and CoNLL 2012, which consists of 8 different genres. The penalties are tuned on the two development sets separately (10000 on CoNLL 2005 and 20 on CoNLL 2012). On the CoNLL 2005 development set, the predicted syntax gives a 0.5 F1 improvement over our best model, while on in-domain test and outof-domain development sets, the improvement is much smaller. As expected, on CoNLL 2012, syntax improves most on the newswire (NW) domain. These improvements suggest that while decoding with hard constraints is beneficial, joint training or multi-task learning could be even more effective by leveraging full, labeled syntactic structures."
    }, {
      "heading" : "5 Related Work",
      "text" : "Traditional approaches to semantic role labeling have used syntactic parsers to identify constituents and model long-range dependencies, and enforced global consistency using integer linear programming (Punyakanok et al., 2008) or dynamic programs (Täckström et al., 2015). More recently, neural methods have been employed on top of syntactic features (FitzGerald et al., 2015; Roth and Lapata, 2016). Our experiments show that off-\nthe-shelf neural methods have a remarkable ability to learn long-range dependencies, syntactic constituency structure, and global constraints without coding task-specific mechanisms for doing so.\nAn alternative line of work has attempted to reduce the dependency on syntactic input for semantic role labeling models. Collobert et al. (2011) first introduced an end-to-end neural-based approach with sequence-level training and uses a convolutional neural network to model the context window. However, their best system fell short of traditional feature-based systems. Neural methods have also been used as classifiers in transition-based SRL systems (Henderson et al., 2013; Swayamdipta et al., 2016). Most recently, several successful LSTM-based architectures have achieved state-of-the-art results in English span-based SRL (Zhou and Xu, 2015), Chinese SRL (Wang et al., 2015) and dependencybased SRL (Marcheggiani et al., 2017), with little to no syntactic input. Our techniques push results to more than 3 F1 over the best syntax-based models. However, we also show that there is potential for syntax to further improve performance."
    }, {
      "heading" : "6 Conclusion and Future Work",
      "text" : "We presented a new deep learning model for spanbased semantic role labeling with a 10% relative error reduction over the previous state of the art. Our ensemble of 8 layer BiLSTMs incorporated some of the recent best practices such as orthonormal initialization, RNN-dropout, and highway connections, and we have shown that they are crucial for getting good results with deep models.\nExtensive error analysis sheds light on the strengths and limitations of our deep SRL model, with detailed comparison against shallower models and two strong non-neural systems. While our deep model is better at recovering longdistance predicate-argument relations, we still observe structural inconsistencies, which can be alleviated by constrained A∗ decoding.\nFinally, we posed the question of whether deep SRL still needs syntactic supervision. Despite recent success without syntactic input, we found that our best neural model can still benefit from accurate syntactic parser output via straightforward constrained decoding. Our oracle experiment, where the SRL system receives a 3 F1 gain from gold syntax showed potential for syntax to further improve deep SRL models.\n9\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899"
    } ],
    "references" : [ {
      "title" : "Propbank annotation guidelines",
      "author" : [ "Claire Bonial", "Olga Babko-Malaya", "Jinho D Choi", "Jena Hwang", "Martha Palmer." ],
      "venue" : "Center for Computational Language and Edu-cation Research Institute of Cognitive Science Uni-versity of Colorad at Boulder .",
      "citeRegEx" : "Bonial et al\\.,? 2010",
      "shortCiteRegEx" : "Bonial et al\\.",
      "year" : 2010
    }, {
      "title" : "Introduction to the conll-2005 shared task: Semantic role labeling",
      "author" : [ "Xavier Carreras", "Lluı́s Màrquez" ],
      "venue" : "In Proceedings of the Ninth Conference on Computational Natural Language Learning. Association for Computational Linguistics,",
      "citeRegEx" : "Carreras and Màrquez.,? \\Q2005\\E",
      "shortCiteRegEx" : "Carreras and Màrquez.",
      "year" : 2005
    }, {
      "title" : "A maximum-entropy-inspired parser",
      "author" : [ "Eugene Charniak." ],
      "venue" : "Proceedings of the 1st North American chapter of the Association for Computational Linguistics conference. Association for Computational Linguistics, pages 132–139.",
      "citeRegEx" : "Charniak.,? 2000",
      "shortCiteRegEx" : "Charniak.",
      "year" : 2000
    }, {
      "title" : "Parsing as language modeling",
      "author" : [ "Do Kook Choe", "Eugene Charniak." ],
      "venue" : "Empirical Methods in Natural Language Processing.",
      "citeRegEx" : "Choe and Charniak.,? 2016",
      "shortCiteRegEx" : "Choe and Charniak.",
      "year" : 2016
    }, {
      "title" : "Natural language processing (almost) from scratch",
      "author" : [ "Ronan Collobert", "Jason Weston", "Léon Bottou", "Michael Karlen", "Koray Kavukcuoglu", "Pavel Kuksa." ],
      "venue" : "Journal of Machine Learning Research 12(Aug):2493–2537.",
      "citeRegEx" : "Collobert et al\\.,? 2011",
      "shortCiteRegEx" : "Collobert et al\\.",
      "year" : 2011
    }, {
      "title" : "Semantic role labeling with neural network factors",
      "author" : [ "Nicholas FitzGerald", "Oscar Täckström", "Kuzman Ganchev", "Dipanjan Das." ],
      "venue" : "Proc. of the 2015 Conference on Empirical Methods in Natural Language Processing (EMNLP). pages 960–970.",
      "citeRegEx" : "FitzGerald et al\\.,? 2015",
      "shortCiteRegEx" : "FitzGerald et al\\.",
      "year" : 2015
    }, {
      "title" : "A theoretically grounded application of dropout in recurrent neural networks",
      "author" : [ "Yarin Gal." ],
      "venue" : "arXiv preprint arXiv:1512.05287 .",
      "citeRegEx" : "Gal.,? 2015",
      "shortCiteRegEx" : "Gal.",
      "year" : 2015
    }, {
      "title" : "Multilingual joint parsing of syntactic and semantic dependencies with a latent variable model",
      "author" : [ "James Henderson", "Paola Merlo", "Ivan Titov", "Gabriele Musillo." ],
      "venue" : "Computational Linguistics 39(4):949–998.",
      "citeRegEx" : "Henderson et al\\.,? 2013",
      "shortCiteRegEx" : "Henderson et al\\.",
      "year" : 2013
    }, {
      "title" : "Training products of experts by minimizing contrastive divergence",
      "author" : [ "Geoffrey E Hinton." ],
      "venue" : "Neural computation 14(8):1771–1800.",
      "citeRegEx" : "Hinton.,? 2002",
      "shortCiteRegEx" : "Hinton.",
      "year" : 2002
    }, {
      "title" : "Adding semantic annotation to the penn treebank",
      "author" : [ "Paul Kingsbury", "Martha Palmer", "Mitch Marcus." ],
      "venue" : "Proceedings of the human language technology conference. Citeseer, pages 252–256.",
      "citeRegEx" : "Kingsbury et al\\.,? 2002",
      "shortCiteRegEx" : "Kingsbury et al\\.",
      "year" : 2002
    }, {
      "title" : "Parser showdown at the wall street corral: An empirical investigation of error types in parser output",
      "author" : [ "Jonathan K. Kummerfeld", "David Hall", "James R. Curran", "Dan Klein." ],
      "venue" : "Proceedings of the 2012 Joint Conference on Empirical Methods in Natural",
      "citeRegEx" : "Kummerfeld et al\\.,? 2012",
      "shortCiteRegEx" : "Kummerfeld et al\\.",
      "year" : 2012
    }, {
      "title" : "A* ccg parsing with a supertag-factored model",
      "author" : [ "Mike Lewis", "Mark Steedman." ],
      "venue" : "EMNLP. pages 990–1000.",
      "citeRegEx" : "Lewis and Steedman.,? 2014",
      "shortCiteRegEx" : "Lewis and Steedman.",
      "year" : 2014
    }, {
      "title" : "A simple and accurate syntaxagnostic neural model for dependency-based semantic role labeling",
      "author" : [ "Diego Marcheggiani", "Anton Frolov", "Ivan Titov." ],
      "venue" : "CoRR abs/1701.02593. http://arxiv.org/abs/1701.02593.",
      "citeRegEx" : "Marcheggiani et al\\.,? 2017",
      "shortCiteRegEx" : "Marcheggiani et al\\.",
      "year" : 2017
    }, {
      "title" : "Glove: Global vectors for word representation",
      "author" : [ "Jeffrey Pennington", "Richard Socher", "Christopher D. Manning." ],
      "venue" : "Empirical Methods in Natural Language Processing (EMNLP). pages 1532– 1543. http://www.aclweb.org/anthology/D14-1162.",
      "citeRegEx" : "Pennington et al\\.,? 2014",
      "shortCiteRegEx" : "Pennington et al\\.",
      "year" : 2014
    }, {
      "title" : "Semantic role chunking combining complementary syntactic views",
      "author" : [ "Sameer Pradhan", "Kadri Hacioglu", "Wayne Ward", "James H Martin", "Daniel Jurafsky." ],
      "venue" : "Proceedings of the Ninth Conference on Computational Natural Language Learning. As-",
      "citeRegEx" : "Pradhan et al\\.,? 2005",
      "shortCiteRegEx" : "Pradhan et al\\.",
      "year" : 2005
    }, {
      "title" : "Towards robust linguistic analysis using ontonotes",
      "author" : [ "Sameer Pradhan", "Alessandro Moschitti", "Nianwen Xue", "Hwee Tou Ng", "Anders Björkelund", "Olga Uryupina", "Yuchen Zhang", "Zhi Zhong." ],
      "venue" : "CoNLL. pages 143–152.",
      "citeRegEx" : "Pradhan et al\\.,? 2013",
      "shortCiteRegEx" : "Pradhan et al\\.",
      "year" : 2013
    }, {
      "title" : "Generalized inference with multiple semantic role labeling systems",
      "author" : [ "Vasin Punyakanok", "Peter Koomen", "Dan Roth", "Wen-tau Yih." ],
      "venue" : "Proceedings of CoNLL.",
      "citeRegEx" : "Punyakanok et al\\.,? 2005",
      "shortCiteRegEx" : "Punyakanok et al\\.",
      "year" : 2005
    }, {
      "title" : "The importance of syntactic parsing and inference in semantic role labeling",
      "author" : [ "Vasin Punyakanok", "Dan Roth", "Wen-tau Yih." ],
      "venue" : "Computational Linguistics 34(2):257–287.",
      "citeRegEx" : "Punyakanok et al\\.,? 2008",
      "shortCiteRegEx" : "Punyakanok et al\\.",
      "year" : 2008
    }, {
      "title" : "Neural semantic role labeling with dependency path embeddings",
      "author" : [ "Michael Roth", "Mirella Lapata." ],
      "venue" : "arXiv preprint arXiv:1605.07515 .",
      "citeRegEx" : "Roth and Lapata.,? 2016",
      "shortCiteRegEx" : "Roth and Lapata.",
      "year" : 2016
    }, {
      "title" : "Exact solutions to the nonlinear dynamics of learning in deep linear neural networks",
      "author" : [ "Andrew M Saxe", "James L McClelland", "Surya Ganguli." ],
      "venue" : "arXiv preprint arXiv:1312.6120 .",
      "citeRegEx" : "Saxe et al\\.,? 2013",
      "shortCiteRegEx" : "Saxe et al\\.",
      "year" : 2013
    }, {
      "title" : "Training very deep networks",
      "author" : [ "Rupesh K Srivastava", "Klaus Greff", "Jürgen Schmidhuber." ],
      "venue" : "Advances in neural information processing systems. pages 2377–2385.",
      "citeRegEx" : "Srivastava et al\\.,? 2015",
      "shortCiteRegEx" : "Srivastava et al\\.",
      "year" : 2015
    }, {
      "title" : "Greedy, joint syntacticsemantic parsing with stack lstms",
      "author" : [ "Swabha Swayamdipta", "Miguel Ballesteros", "Chris Dyer", "Noah A Smith." ],
      "venue" : "arXiv preprint arXiv:1606.08954 .",
      "citeRegEx" : "Swayamdipta et al\\.,? 2016",
      "shortCiteRegEx" : "Swayamdipta et al\\.",
      "year" : 2016
    }, {
      "title" : "Efficient inference and structured learning for semantic role labeling",
      "author" : [ "Oscar Täckström", "Kuzman Ganchev", "Dipanjan Das." ],
      "venue" : "Transactions of the Association for Computational Linguistics 3:29–41.",
      "citeRegEx" : "Täckström et al\\.,? 2015",
      "shortCiteRegEx" : "Täckström et al\\.",
      "year" : 2015
    }, {
      "title" : "A global joint model for semantic role labeling",
      "author" : [ "Kristina Toutanova", "Aria Haghighi", "Christopher D Manning." ],
      "venue" : "Computational Linguistics 34(2):161– 191.",
      "citeRegEx" : "Toutanova et al\\.,? 2008",
      "shortCiteRegEx" : "Toutanova et al\\.",
      "year" : 2008
    }, {
      "title" : "Chinese semantic role labeling with bidirectional recurrent neural networks",
      "author" : [ "Zhen Wang", "Tingsong Jiang", "Baobao Chang", "Zhifang Sui." ],
      "venue" : "EMNLP. pages 1626–1631.",
      "citeRegEx" : "Wang et al\\.,? 2015",
      "shortCiteRegEx" : "Wang et al\\.",
      "year" : 2015
    }, {
      "title" : "Adadelta: an adaptive learning rate method",
      "author" : [ "Matthew D Zeiler." ],
      "venue" : "arXiv preprint arXiv:1212.5701 .",
      "citeRegEx" : "Zeiler.,? 2012",
      "shortCiteRegEx" : "Zeiler.",
      "year" : 2012
    }, {
      "title" : "Highway long short-term memory rnns for distant speech recognition",
      "author" : [ "Yu Zhang", "Guoguo Chen", "Dong Yu", "Kaisheng Yaco", "Sanjeev Khudanpur", "James Glass." ],
      "venue" : "2016 IEEE International Conference on Acoustics, Speech and Signal Processing",
      "citeRegEx" : "Zhang et al\\.,? 2016",
      "shortCiteRegEx" : "Zhang et al\\.",
      "year" : 2016
    }, {
      "title" : "End-to-end learning of semantic role labeling using recurrent neural networks",
      "author" : [ "Jie Zhou", "Wei Xu." ],
      "venue" : "Proceedings of the Annual Meeting of the Association for Computational Linguistics.",
      "citeRegEx" : "Zhou and Xu.,? 2015",
      "shortCiteRegEx" : "Zhou and Xu.",
      "year" : 2015
    } ],
    "referenceMentions" : [ {
      "referenceID" : 27,
      "context" : "” Recently breakthroughs involving end-to-end deep models for SRL without syntactic input (Zhou and Xu, 2015; Marcheggiani et al., 2017) seem to overturn the long-held belief that syntactic parsing is a prerequisite for this task (Punyakanok et al.",
      "startOffset" : 90,
      "endOffset" : 136
    }, {
      "referenceID" : 12,
      "context" : "” Recently breakthroughs involving end-to-end deep models for SRL without syntactic input (Zhou and Xu, 2015; Marcheggiani et al., 2017) seem to overturn the long-held belief that syntactic parsing is a prerequisite for this task (Punyakanok et al.",
      "startOffset" : 90,
      "endOffset" : 136
    }, {
      "referenceID" : 17,
      "context" : ", 2017) seem to overturn the long-held belief that syntactic parsing is a prerequisite for this task (Punyakanok et al., 2008).",
      "startOffset" : 101,
      "endOffset" : 126
    }, {
      "referenceID" : 20,
      "context" : "However, we differ by (1) simplifying the input and output layers, (2) introducing highway connections (Srivastava et al., 2015; Zhang et al., 2016), (3) using recurrent dropout (Gal, 2015), (4) decoding with BIO-constraints, and (5) ensembling with a product of experts.",
      "startOffset" : 103,
      "endOffset" : 148
    }, {
      "referenceID" : 26,
      "context" : "However, we differ by (1) simplifying the input and output layers, (2) introducing highway connections (Srivastava et al., 2015; Zhang et al., 2016), (3) using recurrent dropout (Gal, 2015), (4) decoding with BIO-constraints, and (5) ensembling with a product of experts.",
      "startOffset" : 103,
      "endOffset" : 148
    }, {
      "referenceID" : 6,
      "context" : ", 2016), (3) using recurrent dropout (Gal, 2015), (4) decoding with BIO-constraints, and (5) ensembling with a product of experts.",
      "startOffset" : 37,
      "endOffset" : 48
    }, {
      "referenceID" : 11,
      "context" : "” Recently breakthroughs involving end-to-end deep models for SRL without syntactic input (Zhou and Xu, 2015; Marcheggiani et al., 2017) seem to overturn the long-held belief that syntactic parsing is a prerequisite for this task (Punyakanok et al., 2008). In this paper, we show that this result can be pushed further using deep highway bidirectional LSTMs with constrained decoding, again significantly moving the state of the art (another 2 points on CoNLL 2005). We also present careful empirical analysis to determine what works well and what might be done to progress even further. Our model combines a number of best practices in the recent deep learning literature. Following Zhou and Xu (2015), we treat SRL as a BIO tagging problem and use deep bidirectional LSTMs.",
      "startOffset" : 110,
      "endOffset" : 703
    }, {
      "referenceID" : 20,
      "context" : "Two major factors contribute to the success of our deep SRL model: (1) applying recent advances in training deep recurrent neural networks such as highway connections (Srivastava et al., 2015; Zhang et al., 2016) and RNN-dropouts (Gal, 2015)1; and (2) using an A∗ decoding algorithm, similar to Lewis and Steedman (2014) to enforce structural consistency at prediction time, without adding more complexity to the training process.",
      "startOffset" : 167,
      "endOffset" : 212
    }, {
      "referenceID" : 26,
      "context" : "Two major factors contribute to the success of our deep SRL model: (1) applying recent advances in training deep recurrent neural networks such as highway connections (Srivastava et al., 2015; Zhang et al., 2016) and RNN-dropouts (Gal, 2015)1; and (2) using an A∗ decoding algorithm, similar to Lewis and Steedman (2014) to enforce structural consistency at prediction time, without adding more complexity to the training process.",
      "startOffset" : 167,
      "endOffset" : 212
    }, {
      "referenceID" : 6,
      "context" : ", 2016) and RNN-dropouts (Gal, 2015)1; and (2) using an A∗ decoding algorithm, similar to Lewis and Steedman (2014) to enforce structural consistency at prediction time, without adding more complexity to the training process.",
      "startOffset" : 25,
      "endOffset" : 36
    }, {
      "referenceID" : 6,
      "context" : ", 2016) and RNN-dropouts (Gal, 2015)1; and (2) using an A∗ decoding algorithm, similar to Lewis and Steedman (2014) to enforce structural consistency at prediction time, without adding more complexity to the training process.",
      "startOffset" : 26,
      "endOffset" : 116
    }, {
      "referenceID" : 27,
      "context" : "To stack the LSTMs in an interleaving pattern, as proposed by Zhou and Xu (2015), the layerspecific inputs xl,t and directionality δl are arranged in the following manner:",
      "startOffset" : 62,
      "endOffset" : 81
    }, {
      "referenceID" : 25,
      "context" : "Highway Connections To alleviate the vanishing gradient problem when training deep BiLSTMs, we use gated highway connections described in Zhang et al. (2016); Srivastava et al.",
      "startOffset" : 138,
      "endOffset" : 158
    }, {
      "referenceID" : 20,
      "context" : "(2016); Srivastava et al. (2015). We include transform gates rt to control the weight of linear and non-linear transformations between layers (See Figure 1).",
      "startOffset" : 8,
      "endOffset" : 33
    }, {
      "referenceID" : 6,
      "context" : "Recurrent Dropout To reduce over-fitting, we use dropout as described in Gal (2015). A shared dropout mask zl is applied to the hidden state: h̃l,t = rl,t ◦ hl,t + (1− rl,t) ◦W hxl,t (15) hl,t = zl ◦ h̃l,t (16)",
      "startOffset" : 73,
      "endOffset" : 84
    }, {
      "referenceID" : 16,
      "context" : "SRL Constraints Punyakanok et al. (2008); Täckström et al.",
      "startOffset" : 16,
      "endOffset" : 41
    }, {
      "referenceID" : 16,
      "context" : "SRL Constraints Punyakanok et al. (2008); Täckström et al. (2015) described a list of SRLspecific global constraints: • Unique core roles (U): Each core role (ARG0-ARG5, ARGA) should appear at most once for each predicate.",
      "startOffset" : 16,
      "endOffset" : 66
    }, {
      "referenceID" : 1,
      "context" : "1 Datasets We measure the performance of our SRL system on two PropBank-style, span-based SRL datasets: CoNLL-2005 (Carreras and Màrquez, 2005) and CoNLL-2012 (Pradhan et al.",
      "startOffset" : 115,
      "endOffset" : 143
    }, {
      "referenceID" : 15,
      "context" : "1 Datasets We measure the performance of our SRL system on two PropBank-style, span-based SRL datasets: CoNLL-2005 (Carreras and Màrquez, 2005) and CoNLL-2012 (Pradhan et al., 2013)2.",
      "startOffset" : 159,
      "endOffset" : 181
    }, {
      "referenceID" : 13,
      "context" : "All the tokens are lower-cased and initialized with 100-dimensional GloVe embeddings pretrained on 6B tokens (Pennington et al., 2014) and updated during training.",
      "startOffset" : 109,
      "endOffset" : 134
    }, {
      "referenceID" : 18,
      "context" : "Initialization All the weight matrices in BiLSTMs are initialized with random orthonormal matrices as described in Saxe et al. (2013). All the tokens are lower-cased and initialized with 100-dimensional GloVe embeddings pretrained on 6B tokens (Pennington et al.",
      "startOffset" : 115,
      "endOffset" : 134
    }, {
      "referenceID" : 25,
      "context" : "Training We use Adadelta (Zeiler, 2012) with = 1e−6 and ρ = 0.",
      "startOffset" : 25,
      "endOffset" : 39
    }, {
      "referenceID" : 22,
      "context" : "The comparison models are Zhou and Xu (2015), FitzGerald et al.",
      "startOffset" : 26,
      "endOffset" : 45
    }, {
      "referenceID" : 5,
      "context" : "The comparison models are Zhou and Xu (2015), FitzGerald et al. (2015), Täckström et al.",
      "startOffset" : 46,
      "endOffset" : 71
    }, {
      "referenceID" : 5,
      "context" : "The comparison models are Zhou and Xu (2015), FitzGerald et al. (2015), Täckström et al. (2015), Toutanova et al.",
      "startOffset" : 46,
      "endOffset" : 96
    }, {
      "referenceID" : 5,
      "context" : "The comparison models are Zhou and Xu (2015), FitzGerald et al. (2015), Täckström et al. (2015), Toutanova et al. (2008) and Punyakanok et al.",
      "startOffset" : 46,
      "endOffset" : 121
    }, {
      "referenceID" : 5,
      "context" : "The comparison models are Zhou and Xu (2015), FitzGerald et al. (2015), Täckström et al. (2015), Toutanova et al. (2008) and Punyakanok et al. (2008).",
      "startOffset" : 46,
      "endOffset" : 150
    }, {
      "referenceID" : 23,
      "context" : "We compare our best single and ensemble (PoE) models against Zhou and Xu (2015), FitzGerald et al.",
      "startOffset" : 61,
      "endOffset" : 80
    }, {
      "referenceID" : 5,
      "context" : "We compare our best single and ensemble (PoE) models against Zhou and Xu (2015), FitzGerald et al. (2015), Täckström et al.",
      "startOffset" : 81,
      "endOffset" : 106
    }, {
      "referenceID" : 5,
      "context" : "We compare our best single and ensemble (PoE) models against Zhou and Xu (2015), FitzGerald et al. (2015), Täckström et al. (2015) and Pradhan et al.",
      "startOffset" : 81,
      "endOffset" : 131
    }, {
      "referenceID" : 5,
      "context" : "We compare our best single and ensemble (PoE) models against Zhou and Xu (2015), FitzGerald et al. (2015), Täckström et al. (2015) and Pradhan et al. (2013).",
      "startOffset" : 81,
      "endOffset" : 157
    }, {
      "referenceID" : 8,
      "context" : "Ensembling We use a product of experts (Hinton, 2002) to combine predictions of 5 models, each trained on 80% of the training corpus and validated on the remaining 20%.",
      "startOffset" : 39,
      "endOffset" : 53
    }, {
      "referenceID" : 16,
      "context" : "We are also able to compare to previous systems with model predictions available online (Punyakanok et al., 2005; Pradhan et al., 2005)5.",
      "startOffset" : 88,
      "endOffset" : 135
    }, {
      "referenceID" : 14,
      "context" : "We are also able to compare to previous systems with model predictions available online (Punyakanok et al., 2005; Pradhan et al., 2005)5.",
      "startOffset" : 88,
      "endOffset" : 135
    }, {
      "referenceID" : 10,
      "context" : "1 Error Types Breakdown Inspired Kummerfeld et al. (2012), we define a set of oracle transformations that fix various prediction errors and observe the relative improvement after each operation (See Table 3).",
      "startOffset" : 33,
      "endOffset" : 58
    }, {
      "referenceID" : 9,
      "context" : "adjunct distinction is known to be difficult (Kingsbury et al., 2002), and it is not surprising that our neural model has many such failure cases.",
      "startOffset" : 45,
      "endOffset" : 69
    }, {
      "referenceID" : 10,
      "context" : "These errors are closely tied to prepositional phrase (PP) attachment errors, which are also known to be some of the biggest challenges for linguistic analysis (Kummerfeld et al., 2012).",
      "startOffset" : 160,
      "endOffset" : 185
    }, {
      "referenceID" : 17,
      "context" : "SRL Structure Violations The model predictions can also violate the SRL-specific constraints commonly used in prior work (Punyakanok et al., 2008; Täckström et al., 2015).",
      "startOffset" : 121,
      "endOffset" : 170
    }, {
      "referenceID" : 22,
      "context" : "SRL Structure Violations The model predictions can also violate the SRL-specific constraints commonly used in prior work (Punyakanok et al., 2008; Täckström et al., 2015).",
      "startOffset" : 121,
      "endOffset" : 170
    }, {
      "referenceID" : 0,
      "context" : "4 Can Syntax Still Help SRL? The Propbank-style SRL formalism is closely tied to syntax (Bonial et al., 2010; Weischedel et al., 2011).",
      "startOffset" : 88,
      "endOffset" : 134
    }, {
      "referenceID" : 27,
      "context" : "Similar to some recent work (Zhou and Xu, 2015), our model achieved strong performance without directly modeling syntax.",
      "startOffset" : 28,
      "endOffset" : 47
    }, {
      "referenceID" : 3,
      "context" : "The improvement from using Choe’s parser (Choe and Charniak, 2016) is much smaller, while using the Charniak parser (Charniak, 2000) hurts performance if the model places too much trust in it.",
      "startOffset" : 41,
      "endOffset" : 66
    }, {
      "referenceID" : 2,
      "context" : "The improvement from using Choe’s parser (Choe and Charniak, 2016) is much smaller, while using the Charniak parser (Charniak, 2000) hurts performance if the model places too much trust in it.",
      "startOffset" : 116,
      "endOffset" : 132
    }, {
      "referenceID" : 2,
      "context" : "Figure 7: Performance of syntax-constrained decoding as the non-constituent penalty increases for syntax from two parsers (from Choe and Charniak (2016) and Charniak (2000)) and gold syntax.",
      "startOffset" : 137,
      "endOffset" : 153
    }, {
      "referenceID" : 2,
      "context" : "Figure 7: Performance of syntax-constrained decoding as the non-constituent penalty increases for syntax from two parsers (from Choe and Charniak (2016) and Charniak (2000)) and gold syntax.",
      "startOffset" : 137,
      "endOffset" : 173
    }, {
      "referenceID" : 17,
      "context" : "Traditional approaches to semantic role labeling have used syntactic parsers to identify constituents and model long-range dependencies, and enforced global consistency using integer linear programming (Punyakanok et al., 2008) or dynamic programs (Täckström et al.",
      "startOffset" : 202,
      "endOffset" : 227
    }, {
      "referenceID" : 22,
      "context" : ", 2008) or dynamic programs (Täckström et al., 2015).",
      "startOffset" : 28,
      "endOffset" : 52
    }, {
      "referenceID" : 5,
      "context" : "More recently, neural methods have been employed on top of syntactic features (FitzGerald et al., 2015; Roth and Lapata, 2016).",
      "startOffset" : 78,
      "endOffset" : 126
    }, {
      "referenceID" : 18,
      "context" : "More recently, neural methods have been employed on top of syntactic features (FitzGerald et al., 2015; Roth and Lapata, 2016).",
      "startOffset" : 78,
      "endOffset" : 126
    }, {
      "referenceID" : 7,
      "context" : "Neural methods have also been used as classifiers in transition-based SRL systems (Henderson et al., 2013; Swayamdipta et al., 2016).",
      "startOffset" : 82,
      "endOffset" : 132
    }, {
      "referenceID" : 21,
      "context" : "Neural methods have also been used as classifiers in transition-based SRL systems (Henderson et al., 2013; Swayamdipta et al., 2016).",
      "startOffset" : 82,
      "endOffset" : 132
    }, {
      "referenceID" : 27,
      "context" : "Most recently, several successful LSTM-based architectures have achieved state-of-the-art results in English span-based SRL (Zhou and Xu, 2015), Chinese SRL (Wang et al.",
      "startOffset" : 124,
      "endOffset" : 143
    }, {
      "referenceID" : 24,
      "context" : "Most recently, several successful LSTM-based architectures have achieved state-of-the-art results in English span-based SRL (Zhou and Xu, 2015), Chinese SRL (Wang et al., 2015) and dependencybased SRL (Marcheggiani et al.",
      "startOffset" : 157,
      "endOffset" : 176
    }, {
      "referenceID" : 12,
      "context" : ", 2015) and dependencybased SRL (Marcheggiani et al., 2017), with little to no syntactic input.",
      "startOffset" : 32,
      "endOffset" : 59
    }, {
      "referenceID" : 4,
      "context" : "Collobert et al. (2011) first introduced an end-to-end neural-based approach with sequence-level training and uses a convolutional neural network to model the context window.",
      "startOffset" : 0,
      "endOffset" : 24
    } ],
    "year" : 2017,
    "abstractText" : "We introduce a new deep learning model for semantic role labeling (SRL) that significantly improves the state of the art, along with detailed analyses to reveal its strengths and limitations. We use a deep highway BiLSTM architecture with constrained decoding, while observing a number of recent best practices for initialization and regularization. Our 8-layer ensemble model achieves 83.2 F1 on the CoNLL 2005 test set and 83.4 F1 on CoNLL 2012, roughly a 10% relative error reduction over the previous state of the art. Extensive empirical analysis of these gains show that (1) deep models excel at recovering long-distance dependencies but can still make surprisingly obvious errors, and (2) that there is still room for syntactic parsers to improve these results. All code and models will be publicly released.",
    "creator" : "LaTeX with hyperref package"
  }
}