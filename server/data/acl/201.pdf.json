{
  "name" : "201.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Investigating Different Context Types and Representations for Learning Word Embeddings",
    "authors" : [ ],
    "emails" : [ ],
    "sections" : [ {
      "heading" : null,
      "text" : "1 000\n011\n012\n013\n014\n015\n016\n017\n018\n019\n020\n021\n022\n023\n024\n025\n026\n027\n028\n029\n030\n031\n032\n033\n034\n035\n036\n037\n038\n039\n040\n041\n042\n043\n044\n045\n046\n047\n048\n049\n061\n062\n063\n064\n065\n066\n067\n068\n069\n070\n071\n072\n073\n074\n075\n076\n077\n078\n079\n080\n081\n082\n083\n084\n085\n086\n087\n088\n089\n090\n091\n092\n093\n094\n095\n096\n097\n098\n099"
    }, {
      "heading" : "1 Introduction",
      "text" : "Recently, there is a growing research interest on word embedding models, where words are embedded into low-dimensional real vectors. Words that share similar meanings tend to have short distances in the vector space. The trained word embeddings are not only useful by themselves (e.g. used for calculating word similarities) but also effective when used as the input of the downstream models, such as part-of-speech tagging, chunking, named entity recognition (Collobert and Weston, 2008; Collobert et al., 2011) and text classification (Socher et al., 2013; Kim, 2014).\nFor almost all word embedding models, the training objectives are based on the Distributed Hypothesis (Harris, 1954), which can be stated as: “words that occur in the same contexts tend to have similar meanings”. The “context” is usually defined as the words which precede and follow the target word within some fixed distance in most word embedding models with various architec-\ntures (Bengio et al., 2003; Mnih and Hinton, 2007; Mikolov et al., 2013b; Pennington et al., 2014). Among them, Global Vectors (GloVe) proposed by Pennington et al. (2014), Continuous Skip-Gram (CSG) 1 and Continuous Bag-Of-Words (CBOW) proposed by Mikolov et al. (2013a) achieve stateof-the-art results on a wide range of linguistic tasks, and scales well to corpus with billion words.\nRecently, Levy and Goldberg (2014b); Ling et al. (2015) 2 improve CSG and CBOW by introducing position-aware context representation, where each contextual word is associated with their relative position to the target word. Levy and Goldberg (2014a) propose DEPS, which takes the words that are connected to target word in dependency parse tree as context.\nDespite all these efforts, there is still no clear answer to the following questions due to the lack of systematical comparison: 1) Is dependencybased context more reasonable than traditional linear one? 2) Do the relative position or the dependency relation between contextual word and target word contributes to the learning process? 3) Do different word embedding models have preferences for different contexts? 4) How different contexts affect models’ performances on different tasks?\nTo answer these questions, we first classify word embedding models based on different context types (linear or dependency-based) and different context representations (word or bound word) in Table 1. We implement the models that previously not proposed and give systematical comparisons on a wide range of word similarity, word analogy, part-of-speech tagging, chunking, named entity recognition, and text classification dataset-\n1Many researches refer Continuous Skip-Gram as SG. However, in order to distinguish linear (continuous) context and dependency-based context, we refer it as CSG.\n2In these two papers, the description of position-aware context are quite different. However, their ideas is actually identical.\n2\n100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\nBasic Model Context Representation\nContext Type Linear Dependency-based\ngeneralized (unbound) word CSG (Mikolov et al., 2013a) this work Skip-Gram bound word Structured SG (Ling et al., 2015)POSIT (Levy and Goldberg, 2014b) Deps\n(Levy and Goldberg, 2014a) generalized (unbound) word CBOW (Mikolov et al., 2013a) this work\nBag-Of-Words bound word CWINDOW (Ling et al., 2015) this work generalized (unbound) word GloVe (Pennington et al., 2014) this work\nGloVe bound word this work this work\nTable 1: Research summarization of Generalized Skip-Gram, Bag-Of-Words and GloVe with different context types and context representations. For linear context, bound word indicates word associated with positional information. For dependency-based context, bound word indicates word associated with dependency relation.\ns. Experimental results suggest that although it’s hard to find any universal insight (i.e. one context works consistently better than the other), the characteristics of different contexts on different models are concluded according to specific tasks. We expect this paper to be a useful complement in the word embedding literature."
    }, {
      "heading" : "2 Methodology",
      "text" : "In this section, we first introduce different contexts in detail and discuss their strength and weakness. We then show how CSG, CBOW and GloVe can be generalized to use these contexts."
    }, {
      "heading" : "2.1 Context Types",
      "text" : "It is necessary to discover more effective ways of defining “context”. In the current literature, there are mainly two types of contexts: linear (most word embedding models) and dependency-based (DEPS (Levy and Goldberg, 2014a)). Linear context is defined as the positional neighbours of the target word in texts. Dependency-based context is defined as the syntactic neighbours of the target word based on dependency parse tree, as shown in Figure 1 .\nCompared to linear context, dependency-based context is more focused and can capture more long-range contexts. For example in Figure 1, linear context does not consider the word-context pair “discovers telescope”, while dependency-based context contains this information. Dependency-based context can also exclude some uninformative word-context pairs like “with star” and “telescope with”.\nin the text. The context vocabulary C is thus identical to the word vocabulary W . However, this restriction is not r quired by the model; contexts need not corr spond to words, and the number of context-types can be substantially larger than the number of word-types. W generalize SKIPGRAM by replacing the bag-of-words contexts with arbitrary contexts.\nIn this paper we experiment with dependencybased syntactic contexts. Syntactic contexts capture different information than bag-of-word contexts, as we demon trate u ing the sentence “Au - tralian scientist discovers star with telesc p ”.\nLinear Bag-of-Words Contexts This is the context used by word2vec and many other neural embeddings. Using a window of size k around the targ t word w, 2k contexts are produced: the k words before and the k words after w. For k = 2, the contexts f the target word w are −2, w−1, w+1, w+2. In our example, the contexts of discovers are Australian, scientist, star, with.2\nNote that a context window of size 2 may miss some important contexts (telescope is n t a cont xt of discovers), wh le including s me accidental ones (Australian is a ontext discover ). Moreover, the contexts are unmarked, resulting in discovers being a context of both stars and scientist, which may result in stars and scientists ending up as neighbours in the embedded space. A window size of 5 is commonly used to capture broad topical content, whereas smaller windows contain more focused information about the target word.\nDependency-Based Contexts An alternative to the bag-of-words approach is to derive contexts based on the syntactic relations the word participates in. This is facilitated by recent advances in parsing technology (Goldberg and Nivre, 2012; Goldberg and Nivre, 2013) that allow parsing to syntactic dependencies with very high speed and near state-of-the-art accuracy.\nAfter parsing each sentence, we derive word contexts as follows: for a target word w with modifiers m1, . . . ,mk and a head h, we consider the contexts (m1, lbl1), . . . , (mk, lblk), (h, lbl−1h ),\n2word2vec’s implementation is slightly more complicated. The software defaults to prune rare words based on their frequency, and has an option for sub-sampling the frequent words. These pruning and sub-sampling happen before the context extraction, leading to a dynamic window size. In addition, the window size is not fixed to k but is sampled uniformly in the range [1, k] for each word.\nAustralian scientist discovers star with telescope\namod nsubj dobj\nprep\npobj\nAustralian scientist discovers star telescope\namod nsubj dobj\nprep with\nWORD CONTEXTS\naustralian scientist/amod−1\nscientist australian/amod, discovers/nsubj−1\ndiscovers scientist/nsubj, star/dobj, telescope/prep with star discovers/dobj−1 telescope discovers/prep with−1\nFigure 1: Dependency-based context extraction example. Top: preposition relations are collapsed into single arcs, making telescope a direct modifier of discovers. Bottom: the contexts extracted for each word in the sentence.\nwhere lbl is the type of the dependency relation between the head and the modifier (e.g. nsubj, dobj, prep with, amod) and lbl−1 is used to mark the inverse-relation. Relations that include a preposition are “collapsed” prior to context extraction, by directly connecting the head and the object of the preposition, and subsuming the preposition itself into the dependency label. An example of the dependency context extraction is given in Figure 1.\nNotice that syntactic dependencies are both more inclusive and more focused than bag-ofwords. They capture relations to words that are far apart and thus “out-of-reach” with small window bag-of-words (e.g. the instrument of discover is telescope/prep with), and also filter out “coincidental” contexts which are within the window but not directly related to the target word (e.g. Australian is not used as the context for discovers). In addition, the contexts are typed, indicating, for example, that stars are objects of discovery and scientists are subjects. We thus expect the syntactic contexts to yield more focused embeddings, capturing more functional and less topical similarity.\n4 Experiments and Evaluation\nWe experiment with 3 training conditions: BOW5 (bag-of-words contexts with k = 5), BOW2 (same, with k = 2) and DEPS (dependency-based syntactic contexts). We modified word2vec to support arbitrary contexts, and to output the context embeddings in addition to the word embeddings. For bag-of-words contexts we used the original word2vec implementation, and for syntactic contexts, we used our modified version. The negative-sampling parameter (how many negative contexts to sample for every correct one) was 15.\nFigure 1: Illustration of dependency parse tree for sentence “Australian scientist discovers star with telescope”. Note that preposition relation is collapsed in the bottom sub-figure, where telescope is con idered as a direct modifier of discovers. We use the collapsed version of dependency in all of our experiments the same as Levy and Goldberg (2014b)"
    }, {
      "heading" : "2.2 Context Representations",
      "text" : "In CSG and CBOW, contexts are represented by words without any additional information. Levy and Goldberg (2014b); Ling et al. (2015) improve them by introducing position-bound words, where each contextual word is associated with their relative position to the target word. This allows CSG and CBOW to distinguish different sequential positions and capture context’s structural information. We name the method that bind additional information with the contextual word as bound (context) representation, as opposited to unbound (context) representation where word is used alone.\nFor dependency-based context, the original DEPS uses bound representation by default: words are associated with their dependency relation to the target word. Similar to bound representation in linear context type, this allows word embedding models to capture more dependency information. An example is shown in Table 2. In this paper, we\n3\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\nContext Representation\nContext Type Linear Dependency-based\nunbound australian, scientist, star, with\nscientist, star, telescope\nbound australian/-2, scientist/-1, star/+1, with/+2 scientist/nsubj, star/dobj, telescope/prep with\nTable 2: Illustration of bound and unbound representations under linear and dependency-based context types. This example is based on Figure 1 and the target word is “discovers”.\nalso investigate the simpler context representation where no dependency relation is considered. This also makes a fair comparison with linear context models like CSG, CBOW and GloVe, since they do not use bound representation either.\nIntuitively, bound representation should work better than unbound representation, since it is more sophisticated by considering position or dependency relation. However, this is not always the case in practice. The biggest drawback of word embeddings learned with bound context type is the ignorance of syntax. The bound representation already contains a certain degree of syntactic information, thus word embedding models can not learn it from the input word-context pairs. Another drawback is that bound context representation is sparse, especially for dependency-based context. There are 47 dependency relations in dependency parse tree. Although not every combination of dependency relations and words appear in the wordcontext pair collection, it still enlarges the context vocabulary about 5 times in practice.\nCompared to context types (linear and dependency-based), the choice of context representations (bound and unbound) have more effects to the quality of the learned word embeddings. Bound representation transfers each contextual word into a new one, and the word-context pairs are changed completely. As for context types, a lot of word-context pairs in linear context type also appear in dependency-based context type. For example, in Table 2, “scientist” and “star” are considered as the contexts of “discovers” in both context types."
    }, {
      "heading" : "2.3 Generalization",
      "text" : "For convenience, we first define the collection of word-context pairs as P . P can be merged based on the words to form a collection M with size of\nLinear (window size 1) Dependency-based\nP (australian, scientist) (scientist, australian) (scientist, discovers) (discovers, scientist) (discovers, star) . . .\n(australian, scientist) (scientist, australian) (scientist, discovers) (discovers, scientist) (discovers, star) (discovers, telescope) . . .\nM (australian, scientist) (scientist, australian, discovers) (discovers, scientist, star) . . .\n(australian, scientist) (scientist, australian, discovers) (discovers, scientist, star, telescope) . . .\nM (australian, scientist, 1) (scientist, australian, 1) (scientist, discovers, 1) (discovers, scientist, 1) (discovers, star, 1) . . . (australian, scientist, 1) (scientist, australian, 1) (scientist, discovers, 1) (discovers, scientist, 1) (discovers, star, 1) (discovers, telescope, 1) . . .\nTable 3: Illustration of collection P , M andM for sentence “australian scientist discovers star with telescope”. Unbound representation is used in this example. Words in the collections are Bold. Contexts and numbers in the collections are Normal.\n|C|. Each element (w, c1, c2, .., cnw) ∈ M is the word w and its contexts, where nw is the number of word w’s contexts. P can also be merged based on both words and contexts to form a collection M . Each element (w, c,#(w, c)) ∈ M is the word w, context c, and the times they appear in collection P . An example of these collections is shown in Table 3."
    }, {
      "heading" : "2.3.1 Generalized Bag-Of-Words",
      "text" : "The objective function of Generalized Bag-OfWords (GBOW) is defined as:\n∑ (w,c1,..,cnw )∈M log p\n( w ∣∣∣∣∣ nw∑ i=1 ~ci ) (1)\nWith negative sampling technique, the log probability is calculated by:\nlog σ ( ~w ·\nnw∑ i=1 ~ci\n) −\nK∑ k=1 log σ\n( ~wN ·\nnw∑ 1=i ~ci ) (2)\nwhere σ is the sigmoid function, K is the negative sampling size, ~w and ~c is the vector for word w and c respectively. The negatively sampled word wN is randomly selected based on its unigram distribution ( #(w)∑\nw #(w) )ds, where #(w) is the number\nof times that word w appears in the corpus, ds is the distribution smoothing hyper-parameter which is usually defined as 0.75.\n4\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\nNote that in the original CBOW (Mikolov et al., 2013a) with negative sampling technique, the probability is actually p (c| ∑ ~wi) instead of\np (w| ∑ ~ci). In another word, the original CBOW uses the sum of word vectors to predict context. This works well for linear context. But for dependency-based context with bound representation, there is only one word available for predicting its context. For example in Figure 1, the context “scientist/nsubj” can only be predicted by word “discovers”. However, a word can be predicted by the sum of several contexts. Due to this reason, we exchange the role of word and context in GBOW. The negative sampling objective is also changed from context cN to word wN ."
    }, {
      "heading" : "2.3.2 Generalized Skip-Gram",
      "text" : "For generalized Skip-Gram (GSG), the definition is straightforward and the objective function actually needs no modification (Levy and Goldberg, 2014b). However, in order to make it consistent with our GBOW, we also exchange the role of word and context. The objective function of GSG is defined as:∑\n(w,c)∈P log p (w|~c)\n= ∑\n(w,c)∈P\n[ log σ (~w · ~c)−\nK∑ k=1 log σ ( ~wN · ~c) ] (3)"
    }, {
      "heading" : "2.3.3 GloVe",
      "text" : "Unlike GSG and GBOW, GloVe explicitly optimizes a log-bilinear regression model based on word co-occurrence matrix. Since GloVe is already a very generalized model, with the previous defined collection M , the final objective function is written as:∑ (w,c)∈M f(#(w, c))(~w ·~c+ ~bw+ ~bc− log#(w, c)) (4) where ~bw and ~bc are biases for word and context. f is a non-decreasing weighting function and ensures that large #(w, c) is not over-weighted.\nNote that the inputs of GSG, GBOW and Glove are the collections P , M and M respectively. Once the corpus and hyper-parameters are fixed, these collections (and thus the learned word embeddings) are determined only by the choice of context types and representations."
    }, {
      "heading" : "3 Experiments",
      "text" : "We evaluate the effectiveness of different context types and representations on word similarity, word analogy, part-of-speech tagging, chunking, named entity recognition, and text classification tasks. In this section, we first describe the training details of word embedding models. We then report and discuss the experimental results on each task. Detailed numerical results can be found in Supplemental Material."
    }, {
      "heading" : "3.1 Training Details",
      "text" : "Previously, the word2vecf toolkit 3 (Levy et al., 2015) extends the word2vec toolkit 4 (Mikolov et al., 2013b) to accept the input of collection P rather than raw corpus. This makes CSG model accept arbitrary contexts (e.g. dependencybased context). However, CBOW and GloVe are not considered in that toolkit. We implement word2vecPM toolkit, a further extension of word2vecf, which supports generalized SG, CBOW and GloVe with the input of collection P , M and M respectively.\nWe use English Wikipedia (August 2013 dump) as the training corpus in all of our experiments. The Stanford CoreNLP (Manning et al., 2014) is used for dependency parsing. All words and contexts are converted to lower case after parsing. Words and contexts that appear less than 100 times in the collection P are directly ignored. Note that this is slightly different from ignoring rare words that appear less than 100 times in the vocabulary based on the corpus, since each word may appear more times in the collection than that in the vocabulary.\nMost hyper-parameters are the same as Levy et al. (2015)’s best configuration. For example, negative sampling size K is set to 5 for GSG and 2 for GBOW. Distribution smoothing cds is set to 0.75. No dynamic context or “dirty” sub-sampling is used. The window size wn is fixed to 2 for constructing linear context, which ensures the number of the (merged) word-context pair collection for both linear context and dependency-based context is comparable. The number of iteration is set to 2, 5 and 30 for GSG, GBOW and GloVe respectively. Unless otherwise noted, the number of word embedding dimension is set to 500. Since the aim\n3https://bitbucket.org/yoavgo/ word2vecf\n4http://code.google.com/p/word2vec/\n5\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n0 100 200 300 400 500 dimension\n0.65\n0.70\n0.75 0.80 co rr e la ti o n\nGSG on WordSim353 similarity\nlinear ctx w/ unbound rep linear ctx w/ bound rep dep ctx w/ unbound rep dep ctx w/ bound rep\n0 100 200 300 400 500 dimension\n0.45\n0.50\n0.55\n0.60\n0.65\n0.70\n0.75\n0.80\nco rr\ne la\nti o n\nGBOW on WordSim353 similarity\nlinear ctx w/ unbound rep linear ctx w/ bound rep dep ctx w/ unbound rep dep ctx w/ bound rep\n0 100 200 300 400 500 dimension\n0.55\n0.60\n0.65\n0.70\n0.75\nco rr\ne la\nti o n\nGloVe on WordSim353 similarity\nlinear ctx w/ unbound rep linear ctx w/ bound rep dep ctx w/ unbound rep dep ctx w/ bound rep\n0 100 200 300 400 500 dimension\n0.30\n0.35\n0.40\n0.45\n0.50\n0.55\n0.60\nco rr\ne la\nti o n\nGSG on WordSim353 relatedness\nlinear ctx w/ unbound rep linear ctx w/ bound rep dep ctx w/ unbound rep dep ctx w/ bound rep\n0 100 200 300 400 500 dimension\n0.20\n0.25\n0.30\n0.35\n0.40\n0.45\n0.50\n0.55\nco rr\ne la\nti o n\nGBOW on WordSim353 relatedness\nlinear ctx w/ unbound rep linear ctx w/ bound rep dep ctx w/ unbound rep dep ctx w/ bound rep\n0 100 200 300 400 500 dimension\n0.30\n0.35\n0.40\n0.45\n0.50\n0.55\nco rr\ne la\nti o n\nGloVe on WordSim353 relatedness\nlinear ctx w/ unbound rep linear ctx w/ bound rep dep ctx w/ unbound rep dep ctx w/ bound rep\nFigure 2: Results on WordSim353 (similarity and relatedness) dataset.\nof this paper is not comparing the performance of different word embedding models, the results of GSG, GBOW and GloVe are reported respectively."
    }, {
      "heading" : "3.2 Word Similarity Task",
      "text" : "Word similarity task aims at producing semantic similarity scores of word pairs, which are compared with the human scores using Spearman’s correlation. The cosine distance is used for generating similarity scores between two word vectors. WordSim353 (Finkelstein et al., 2001) dataset with similarity and relatedness partition (Zesch et al., 2008; Agirre et al., 2009) is used for this task.\nPrevious researches (Levy and Goldberg, 2014a; Melamud et al., 2016) conclude that compared to linear context, dependency-based context can capture more functional similarity (e.g. tiger/cat) rather than topical similarity (relatedness) (e.g., tiger/jungle). However, their experiments do not distinguish the effect of differen-\nt context representations: unbound representation is used for linear context (Mikolov et al., 2013b) while bound representation is used for dependency-based context (Levy and Goldberg, 2014a). Moreover, only CSG model is compared.\nWe revisit those claims based on more systematical experiments. As shown in Figure 2’s top-left sub-figure, compared to linear context (solid and dotted blue line), the better results of dependencybased context for GSG and GloVe (solid and dotted red line) on ws353’s similarity partition confirms its ability of capturing functional similarity. However, the good performances of dependencybased context do not fully transfer to GBOW. Although dependency-based context with bound representation (dotted red line) for GBOW is still the best performer, dependency-based context with unbound representation (solid red line) for GBOW performs worst on ws353’s similarity partition. Distinguishing bound representation from unbound representation is important.\nNote that the results are also reversed on ws353’s relatedness partition (Figure 2’s right subfigures), which shows the use of linear context is more suitable for capturing topical similarity.\nOverall, dependency-based context type does not get all the credit for capturing functional similarity. Context representations play an important role for word similarity task. It’s only safe to say that dependency-based context captures functional similarity with the “help” of bound representation. In contrast, linear context type captures topical similarity with the “help” of unbound representation."
    }, {
      "heading" : "3.3 Word Analogy Task",
      "text" : "Word analogy task aims at answering the questions like “a is to b as c is to ?”. For example, “London is to Britain as Tokyo is to Japan”. We follow the evaluation protocol in Levy and Goldberg (2014b), answering the questions using both 3CosAdd (additive) and 3CosMul (multiplicative) functions. Our experiments show that 3CosMul works consistently better than 3CosAdd, thus only the results of 3CosMul are reported. We follow previous researches and use Google’s analogy dataset (Mikolov et al., 2013a) (with semantic and syntactic partition) in our experiments.\nAs shown in Figure 3, we observe that context representation plays an important role in word analogy task. The choice of context representa-\n6\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n0 100 200 300 400 500 dimension\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7 0.8 a cc u ra cy ( % )\nGSG on Google Sem (3CosMul)\nlinear ctx w/ unbound rep linear ctx w/ bound rep dep ctx w/ unbound rep dep ctx w/ bound rep\n0 100 200 300 400 500 dimension\n0.0\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\na cc\nu ra\ncy (\n% )\nGBOW on Google Sem (3CosMul)\nlinear ctx w/ unbound rep linear ctx w/ bound rep dep ctx w/ unbound rep dep ctx w/ bound rep\n0 100 200 300 400 500 dimension\n0.0\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\na cc\nu ra\ncy (\n% )\nGloVe on Google Sem (3CosMul)\nlinear ctx w/ unbound rep linear ctx w/ bound rep dep ctx w/ unbound rep dep ctx w/ bound rep\n0 100 200 300 400 500 dimension\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\na cc\nu ra\ncy (\n% )\nGSG on Google Syn (3CosMul)\nlinear ctx w/ unbound rep linear ctx w/ bound rep dep ctx w/ unbound rep dep ctx w/ bound rep\n0 100 200 300 400 500 dimension\n0.0\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\na cc\nu ra\ncy (\n% )\nGBOW on Google Syn (3CosMul)\nlinear ctx w/ unbound rep linear ctx w/ bound rep dep ctx w/ unbound rep dep ctx w/ bound rep\n0 100 200 300 400 500 dimension\n0.0\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\n0.8\na cc\nu ra\ncy (\n% )\nGloVe on Google Syn (3CosMul)\nFigure 3: Results on Google (Sem and Syn) dataset.\ntion (word or bound word) actually has much larger impact than the choice of context type (linear or dependency). The results on Google Syn dataset (Figure 3’s sub-figures in the second column) is perhaps the most evident. The performance of linear context and dependency-based context with unbound representation is similar. However, when bound representation is used, the performance of GSG and GBOW drops more than 30 percent for dependency-based context and around 20 percent for linear context. The main reason for this phenomenon is that the bound representation already contains syntactic information, thus word embedding models can not learn it from the input wordcontext pairs. It can also be observed that GloVe is more sensitive to different context representations than Skip-Gram and CBOW, which is probably due to its explicitly defined/optimized objective function."
    }, {
      "heading" : "3.4 POS, Chunking and NER Tasks",
      "text" : "Although intrinsic evaluations like word similarity and word analogy tasks could provide direct\ninsights of different context types and representations, the experimental results above cannot be directly translated to the typical uses of word embeddings. For example, these tasks aren’t necessarily correlated with downstream tasks’ performances, as shown in (Schnabel et al., 2015; Linzen, 2016; Chiu et al., 2016). More extrinsic tasks should be considered.\nIn this subsection, we evaluate the effectiveness of different word embedding models with different contexts on Part-of-Speech Tagging (POS), Chunking and Named Entity Recognition (NER) tasks. These tasks can be categorized as sequence labeling. It aims at automatically assigning words in texts with labels. CoNLL 2000 shared task 5 is used as benchmark for POS and Chunking. CoNLL 2003 shared task 6 is used as benchmark for NER.\nInspired by the evaluation protocol used in Kiros et al. (2015), we restrict the predicting model to simple linear classifier. The classifier’s input for predicting the label of word wi is simply the concatenation of vectors ~wi−2, ~wi−1, ~wi, ~wi+1, ~wi+2. This ensures the quality of embedding models is directly evaluated, and their strengths and weaknesses are easily observed.\nAs shown in Figure 4, the overall trends of GSG, GBOW and GloVe are similar. When the same context type is used, bound representation (dotted line) outperforms unbound representation (solid line) on all datasets. Sequence labeling tasks tend to classify words with the same syntax to the same category. The ignorance of syntax for word embeddings which are learned by bound representation becomes beneficial. Moreover, dependencybased context type works better than linear context type in most cases. These results suggest that linear context type with unbound representations (as in traditional CSG and CBOW) may not be the best choice of input word vectors for sequence labeling. Bound representations should always be used and dependency-based context type is also worth considering. Again, similar to that on word analogy task, GloVe is more sensitive to different context representations than Skip-Gram and CBOW on sequence labeling tasks.\n5http://www.cnts.ua.ac.be/conll2000/ chunking\n6http://www.cnts.ua.ac.be/conll2003/ ner\n7\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n0 100 200 300 400 500 dimension\n84\n86\n88\n90\n92\n94\n96\n98\na cc\nu ra\ncy (\n% )\nGSG on Part-of-Speech Tagging\nlinear ctx w/ unbound rep linear ctx w/ bound rep dep ctx w/ unbound rep dep ctx w/ bound rep\n0 100 200 300 400 500 dimension\n86\n88\n90\n92\n94\n96\n98\na cc\nu ra\ncy (\n% )\nGBOW on Part-of-Speech Tagging\nlinear ctx w/ unbound rep linear ctx w/ bound rep dep ctx w/ unbound rep dep ctx w/ bound rep\n0 100 200 300 400 500 dimension\n80\n82\n84\n86\n88\n90\n92\n94\n96\na cc\nu ra\ncy (\n% )\nGloVe on Part-of-Speech Tagging\nlinear ctx w/ unbound rep linear ctx w/ bound rep dep ctx w/ unbound rep dep ctx w/ bound rep\n0 100 200 300 400 500 dimension\n65\n70\n75\n80\n85\n90\nF1 -s\nco re\n( %\n)\nGSG on Chunking\nlinear ctx w/ unbound rep linear ctx w/ bound rep dep ctx w/ unbound rep dep ctx w/ bound rep\n0 100 200 300 400 500 dimension\n65\n70\n75\n80\n85\n90\nF1 -s\nco re\n( %\n)\nGBOW on Chunking\nlinear ctx w/ unbound rep linear ctx w/ bound rep dep ctx w/ unbound rep dep ctx w/ bound rep\n0 100 200 300 400 500 dimension\n60\n65\n70\n75\n80\n85\n90\nF1 -s\nco re\n( %\n)\nGloVe on Chunking\nlinear ctx w/ unbound rep linear ctx w/ bound rep dep ctx w/ unbound rep dep ctx w/ bound rep\n0 100 200 300 400 500 dimension\n66\n68\n70\n72\n74\n76\n78\nF1 -s\nco re\n( %\n)\nGSG on Named Entity Recognition\nlinear ctx w/ unbound rep linear ctx w/ bound rep dep ctx w/ unbound rep dep ctx w/ bound rep\n0 100 200 300 400 500 dimension\n66\n68\n70\n72\n74\n76\nF1 -s\nco re\n( %\n)\nGBOW on Named Entity Recognition\nlinear ctx w/ unbound rep linear ctx w/ bound rep dep ctx w/ unbound rep dep ctx w/ bound rep\n0 100 200 300 400 500 dimension\n60\n62\n64\n66\n68\n70\n72\n74\n76\nF1 -s\nco re\n( %\n)\nGloVe on Named Entity Recognition\nlinear ctx w/ unbound rep linear ctx w/ bound rep dep ctx w/ unbound rep dep ctx w/ bound rep\nFigure 4: Results on POS, Chunking and NER tasks."
    }, {
      "heading" : "3.5 Text Classification Task",
      "text" : "Finally, we evaluate the effectiveness of different word embedding models with different contexts on text classification task. Text classification is one of the most popular and well-studied tasks in natural language processing. Recently, deep neural networks are dominant on this task (Socher et al., 2013; Kim, 2014; Dai and Le, 2015). They often need pre-trained word embeddings as inputs to improve their performances. Similar to the previous evaluation of sequence labeling tasks, instead of building complex deep neural networks, we use a simpler classification method called Neural Bag-of-Words to directly evaluate the word embeddings: texts are first represented by the sum of their belonging words’ vectors, then a Logistic Regression Classifier is built upon them for classification.\nDifferent word embedding models are evaluated on 5 text classification datasets. The first 3 datasets are sentence-level: short movie review sentiment (MR) (Pang and Lee, 2005), customer product re-\nModel Context Context Sentence-level Document-levelType Rep. MR CR Subj RT-2k IMDB\nGSG linear word 76.1 78.3 90.9 83.5 85.2bound 75.3 79.0 90.4 82.2 85.2\ndep word 76.0 77.7 90.7 84.8 85.1bound 75.0 77.5 90.0 84.7 84.5\nGBOW linear word 74.9 77.9 90.4 82.0 85.0bound 74.1 77.8 90.3 80.7 84.1\ndep word 75.0 77.6 90.1 82.4 84.9bound 73.5 78.2 89.9 80.7 83.4\nGloVe linear word 73.4 76.7 89.6 79.2 83.5bound 73.2 77.5 90.0 79.8 83.4\ndep word 74.0 77.7 89.5 81.3 83.5bound 72.5 76.7 88.8 79.2 83.5 Random word embeddings 63.9 72.8 79.9 72.2 77.2\nTable 4: Results on 5 text classification datasets.\nviews (CR) (Nakagawa et al., 2010), and subjectivity/objectivity classification (SUBJ) (Pang and Lee, 2004). The other 2 datasets are documentlevel with multiple sentences: full-length movie review (RT-2k) (Pang and Lee, 2004), and IMDB movie review (IMDB) (Maas et al., 2011).\nAs shown in Table 4, pre-trained word embeddings outperform random word embeddings by a large margin. This further strengthens previous\n8\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\nresearches that pre-trained word embeddings are crucial for text classification. Unlike that on previous tasks, different models’ results are actually very similar on text classification task. Text classification has less focus on syntax and function similarity. This leads to the phenomenon that models which use bound representation perform worse than those which use unbound representation on all datasets except CR. Models that use dependency-based context type and linear context type are comparable. These observations suggest that simple linear context type with unbound representations (as in traditional CSG and CBOW) is still the best choice of pre-training word embeddings for text classification, which is already used in most researches."
    }, {
      "heading" : "4 Related Work",
      "text" : "Previously, there are researches which directly compare different word embedding models. Lai et al. (2016) compare 6 word embedding models using different corpora and hyper-parameters. Levy and Goldberg (2014c) show the theoretical equivalence of CSG and PPMI matrix factorization. Levy et al. (2015) further discuss the connections between 4 word embedding models (PPMI, PPMI+SVD, CSG, GloVe) and re-evaluate them with the same hyper-parameters. Suzuki and Nagata (2015) investigate different configurations of CSG and Glove, then merge them into a unified form. Yin and Schutze (2016) propose 4 ensemble methods and show their effectiveness over individual word embeddings.\nThere are also researches which focus on evaluating different context types in learning word embeddings. Vulic and Korhonen (2016) compare CSG and dependency-based models on various languages. The results suggest that dependencybased models are able to detect functional similarity in English. However, the advantages of dependency-based context over linear context on other languages are not as promising as that on English. Bansal et al. (2014) investigate different embedding models for parsing task and show that dependency-based context is more suitable than linear context on this task. Melamud et al. (2016) investigate the performance of CSG, Deps and a substitute-based word embedding models (Yatbaz et al., 2012) 7, which shows that different types of\n7We do not consider this type of context, since it performs consistently worse than the other two context types. The\nintrinsic tasks have clear preference to particular types of contexts. On the other hand, for extrinsic tasks, the optimal context types need to be carefully tuned on specific dataset. However, context representations (bound and unbound) are not evaluated in these models. Moreover, they focus only on the more popular and intuitive CSG model, but not on CBOW and GloVe."
    }, {
      "heading" : "5 Conclusion",
      "text" : "To the best of our knowledge, this paper provides the first systematical investigation of different context types and representations for learning word embeddings. We evaluate different models on intrinsic property analysis (word similarity and word analogy), sequence labeling tasks (POS, Chunking and NER) and text classification task.\nOverall, the tendency of different models on different tasks is similar. However, most tasks have clear preference for different context types and representations. Context representations play a more important role than context types for learning word embeddings. More precisely: 1) Unbound representation is more suitable for syntactic word analogy than bound representation. Bound representation already contains syntactic information, which makes it difficult to learn syntactic aware word embeddings based on the input wordcontext pairs. 2) No matter which type of context to be used, bound representation is essential for sequence labeling tasks, which benefits from its ability of capturing functional similarity. In contrast, unbound representation, which is suitable for capturing topical similarity, doesn’t contribute to sequence labeling tasks. 3) Linear context with unbound representation (Skip-Gram) is still the best choice for text classification task. Linear context is enough for capturing topical similarity compared to dependency-based context. Words’ position information is generally useless for text classification, which makes bound representation contribute less to this task.\nIn the spirit of transparent and reproducible experiments, the word2vecPM toolkit in Supplemental Material will be published online. We hope researchers will take advantage of the code for further improvements and applications to other tasks.\nsame observation is made by Melamud et al. (2016); Vulic and Korhonen (2016)\n9\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899"
    }, {
      "heading" : "A Supplemental Material",
      "text" : "A.1 Numerical Results\nFor simplicity and clarity, most experimental results are shown in the form of line chart. However, numerical results are more accurate and can be directly used by other researches. We list them in Table 5, 6 and 7. Upon acceptance, they will be added to the final version.\nModel Context Context WS353\nType Rep. Sim Related\nGSG linear\nword .757 .563 bound .762 .543\ndep word .776 .531 bound .792 .483\nGBOW linear\nword .747 .503 bound .689 .427\ndep word .669 .395 bound .799 .502\nGloVe linear\nword .645 .545 bound .670 .481\ndep word .696 .539 bound .734 .468\nTable 5: Numerical results on word similarity task. Best results in group are marked Bold.\nModel Context Context Google\nType Rep. Sem Syn\nGSG linear\nword .708 .639 bound .702 .454\ndep word .716 .661 bound .600 .307\nGBOW linear\nword .628 .566 bound .602 .376\ndep word .573 .553 bound .495 .248\nGloVe linear\nword .471 .719 bound .502 .218\ndep word .513 .700 bound .402 .121\nTable 6: Numerical results on word analogy task. Best results in group are marked Bold.\nModel Context Context\nPOS Chunking NER Type Rep.\nGSG linear\nword 95.3 87.2 76.6 bound 96.0 88.5 77.4\ndep word 95.6 87.5 75.5 bound 96.3 88.5 76.2\nGBOW linear\nword 95.2 87.7 74.7 bound 95.7 88.3 75.2\ndep word 95.4 87.3 74.3 bound 96.0 88.6 75.5\nGloVe linear\nword 91.6 79.6 70.8 bound 95.5 88.2 74.8\ndep word 92.8 82.0 70.7 bound 95.5 87.5 72.0"
    } ],
    "references" : [ {
      "title" : "A study on similarity and relatedness using distributional and wordnet-based approaches",
      "author" : [ "Eneko Agirre", "Enrique Alfonseca", "Keith Hall", "Jana Kravalova", "Marius Paşca", "Aitor Soroa." ],
      "venue" : "NAACL. Association for Computational Linguistics, pages",
      "citeRegEx" : "Agirre et al\\.,? 2009",
      "shortCiteRegEx" : "Agirre et al\\.",
      "year" : 2009
    }, {
      "title" : "Tailoring continuous word representations for dependency parsing",
      "author" : [ "Mohit Bansal", "Kevin Gimpel", "Karen Livescu." ],
      "venue" : "ACL. pages 809–815.",
      "citeRegEx" : "Bansal et al\\.,? 2014",
      "shortCiteRegEx" : "Bansal et al\\.",
      "year" : 2014
    }, {
      "title" : "A neural probabilistic language model",
      "author" : [ "Yoshua Bengio", "Réjean Ducharme", "Pascal Vincent", "Christian Janvin." ],
      "venue" : "The Journal of Machine Learning Research 3:1137–1155.",
      "citeRegEx" : "Bengio et al\\.,? 2003",
      "shortCiteRegEx" : "Bengio et al\\.",
      "year" : 2003
    }, {
      "title" : "Intrinsic evaluation of word vectors fails to predict extrinsic performance",
      "author" : [ "Billy Chiu", "Anna Korhonen", "Sampo Pyysalo." ],
      "venue" : "ACL. pages 406–414.",
      "citeRegEx" : "Chiu et al\\.,? 2016",
      "shortCiteRegEx" : "Chiu et al\\.",
      "year" : 2016
    }, {
      "title" : "A unified architecture for natural language processing: Deep neural networks with multitask learning",
      "author" : [ "Ronan Collobert", "Jason Weston." ],
      "venue" : "ICML. ACM, pages 160–167.",
      "citeRegEx" : "Collobert and Weston.,? 2008",
      "shortCiteRegEx" : "Collobert and Weston.",
      "year" : 2008
    }, {
      "title" : "Natural language processing (almost) from scratch",
      "author" : [ "Ronan Collobert", "Jason Weston", "Léon Bottou", "Michael Karlen", "Koray Kavukcuoglu", "Pavel Kuksa." ],
      "venue" : "The Journal of Machine Learning Research 12:2493–2537.",
      "citeRegEx" : "Collobert et al\\.,? 2011",
      "shortCiteRegEx" : "Collobert et al\\.",
      "year" : 2011
    }, {
      "title" : "Semisupervised sequence learning",
      "author" : [ "Andrew M. Dai", "Quoc V. Le." ],
      "venue" : "NIPS. pages 3079– 3087.",
      "citeRegEx" : "Dai and Le.,? 2015",
      "shortCiteRegEx" : "Dai and Le.",
      "year" : 2015
    }, {
      "title" : "Placing search in context: The concept revisited",
      "author" : [ "Lev Finkelstein", "Evgeniy Gabrilovich", "Yossi Matias", "Ehud Rivlin", "Zach Solan", "Gadi Wolfman", "Eytan Ruppin." ],
      "venue" : "WWW. ACM, pages 406–414.",
      "citeRegEx" : "Finkelstein et al\\.,? 2001",
      "shortCiteRegEx" : "Finkelstein et al\\.",
      "year" : 2001
    }, {
      "title" : "Distributional structure",
      "author" : [ "Zellig Harris." ],
      "venue" : "Word 10(23):146–162.",
      "citeRegEx" : "Harris.,? 1954",
      "shortCiteRegEx" : "Harris.",
      "year" : 1954
    }, {
      "title" : "Convolutional neural networks for sentence classification",
      "author" : [ "Yoon Kim." ],
      "venue" : "EMNLP. pages 1746– 1751.",
      "citeRegEx" : "Kim.,? 2014",
      "shortCiteRegEx" : "Kim.",
      "year" : 2014
    }, {
      "title" : "Skip-thought vectors",
      "author" : [ "Ryan Kiros", "Yukun Zhu", "Ruslan Salakhutdinov", "Richard S Zemel", "Antonio Torralba", "Raquel Urtasun", "Sanja Fidler." ],
      "venue" : "NIPS. pages 3294–3302.",
      "citeRegEx" : "Kiros et al\\.,? 2015",
      "shortCiteRegEx" : "Kiros et al\\.",
      "year" : 2015
    }, {
      "title" : "How to generate a good word embedding",
      "author" : [ "Siwei Lai", "Kang Liu", "Shizhu He", "Jun Zhao." ],
      "venue" : "IEEE Intelligent Systems 31:5–14.",
      "citeRegEx" : "Lai et al\\.,? 2016",
      "shortCiteRegEx" : "Lai et al\\.",
      "year" : 2016
    }, {
      "title" : "Dependencybased word embeddings",
      "author" : [ "Omer Levy", "Yoav Goldberg." ],
      "venue" : "ACL. pages 302–308.",
      "citeRegEx" : "Levy and Goldberg.,? 2014a",
      "shortCiteRegEx" : "Levy and Goldberg.",
      "year" : 2014
    }, {
      "title" : "Linguistic regularities in sparse and explicit word representations",
      "author" : [ "Omer Levy", "Yoav Goldberg." ],
      "venue" : "CoNLL. pages 171–180.",
      "citeRegEx" : "Levy and Goldberg.,? 2014b",
      "shortCiteRegEx" : "Levy and Goldberg.",
      "year" : 2014
    }, {
      "title" : "Neural word embedding as implicit matrix factorization",
      "author" : [ "Omer Levy", "Yoav Goldberg." ],
      "venue" : "NIPS. pages 2177–2185.",
      "citeRegEx" : "Levy and Goldberg.,? 2014c",
      "shortCiteRegEx" : "Levy and Goldberg.",
      "year" : 2014
    }, {
      "title" : "Improving distributional similarity with lessons learned from word embeddings",
      "author" : [ "Omer Levy", "Yoav Goldberg", "Ido Dagan." ],
      "venue" : "TACL 3:211–225.",
      "citeRegEx" : "Levy et al\\.,? 2015",
      "shortCiteRegEx" : "Levy et al\\.",
      "year" : 2015
    }, {
      "title" : "Two/too simple adaptations of word2vec for syntax problems",
      "author" : [ "Wang Ling", "Chris Dyer", "Alan W. Black", "Isabel Trancoso." ],
      "venue" : "HLT-NAACL. pages 1299–1304.",
      "citeRegEx" : "Ling et al\\.,? 2015",
      "shortCiteRegEx" : "Ling et al\\.",
      "year" : 2015
    }, {
      "title" : "Issues in evaluating semantic spaces using word analogies",
      "author" : [ "Tal Linzen." ],
      "venue" : "CoRR abs/1606.07736.",
      "citeRegEx" : "Linzen.,? 2016",
      "shortCiteRegEx" : "Linzen.",
      "year" : 2016
    }, {
      "title" : "Learning word vectors for sentiment analysis",
      "author" : [ "Andrew L. Maas", "Raymond E. Daly", "Peter T. Pham", "Dan Huang", "Andrew Y. Ng", "Christopher Potts." ],
      "venue" : "ACL. pages 142–150.",
      "citeRegEx" : "Maas et al\\.,? 2011",
      "shortCiteRegEx" : "Maas et al\\.",
      "year" : 2011
    }, {
      "title" : "The Stanford CoreNLP natural language processing toolkit",
      "author" : [ "Christopher D. Manning", "Mihai Surdeanu", "John Bauer", "Jenny Finkel", "Steven J. Bethard", "David McClosky." ],
      "venue" : "ACL System Demonstrations. pages 55–60.",
      "citeRegEx" : "Manning et al\\.,? 2014",
      "shortCiteRegEx" : "Manning et al\\.",
      "year" : 2014
    }, {
      "title" : "The role of context types and dimensionality in learning word embeddings",
      "author" : [ "Oren Melamud", "David McClosky", "Siddharth Patwardhan", "Mohit Bansal." ],
      "venue" : "HLT-NAACL. pages 1030–1040.",
      "citeRegEx" : "Melamud et al\\.,? 2016",
      "shortCiteRegEx" : "Melamud et al\\.",
      "year" : 2016
    }, {
      "title" : "Efficient estimation of word representations in vector space",
      "author" : [ "Tomas Mikolov", "Kai Chen", "Gregory S. Corrado", "Jeffrey Dean." ],
      "venue" : "CoRR abs/1301.3781.",
      "citeRegEx" : "Mikolov et al\\.,? 2013a",
      "shortCiteRegEx" : "Mikolov et al\\.",
      "year" : 2013
    }, {
      "title" : "Distributed representations of words and phrases and their compositionality",
      "author" : [ "Tomas Mikolov", "Ilya Sutskever", "Kai Chen", "Gregory S. Corrado", "Jeffrey Dean." ],
      "venue" : "NIPS. pages 3111–3119.",
      "citeRegEx" : "Mikolov et al\\.,? 2013b",
      "shortCiteRegEx" : "Mikolov et al\\.",
      "year" : 2013
    }, {
      "title" : "Three new graphical models for statistical language modelling",
      "author" : [ "Andriy Mnih", "Geoffrey E. Hinton." ],
      "venue" : "ICML. pages 641–648.",
      "citeRegEx" : "Mnih and Hinton.,? 2007",
      "shortCiteRegEx" : "Mnih and Hinton.",
      "year" : 2007
    }, {
      "title" : "Dependency tree-based sentiment classification using crfs with hidden variables",
      "author" : [ "Tetsuji Nakagawa", "Kentaro Inui", "Sadao Kurohashi." ],
      "venue" : "NAACL. Association for Computational Linguistics, pages 786–794.",
      "citeRegEx" : "Nakagawa et al\\.,? 2010",
      "shortCiteRegEx" : "Nakagawa et al\\.",
      "year" : 2010
    }, {
      "title" : "A sentimental education: Sentiment analysis using subjectivity summarization based on minimum cuts",
      "author" : [ "Bo Pang", "Lillian Lee." ],
      "venue" : "ACL. Association for Computational Linguistics, pages 271–278.",
      "citeRegEx" : "Pang and Lee.,? 2004",
      "shortCiteRegEx" : "Pang and Lee.",
      "year" : 2004
    }, {
      "title" : "Seeing stars: Exploiting class relationships for sentiment categorization with respect to rating scales",
      "author" : [ "Bo Pang", "Lillian Lee." ],
      "venue" : "ACL. Association for Computational Linguistics, pages 115–124.",
      "citeRegEx" : "Pang and Lee.,? 2005",
      "shortCiteRegEx" : "Pang and Lee.",
      "year" : 2005
    }, {
      "title" : "Glove: Global vectors for word representation",
      "author" : [ "Jeffrey Pennington", "Richard Socher", "Christopher D. Manning." ],
      "venue" : "EMNLP. pages 1532–1543.",
      "citeRegEx" : "Pennington et al\\.,? 2014",
      "shortCiteRegEx" : "Pennington et al\\.",
      "year" : 2014
    }, {
      "title" : "Evaluation methods for unsupervised word embeddings",
      "author" : [ "Tobias Schnabel", "Igor Labutov", "David M. Mimno", "Thorsten Joachims." ],
      "venue" : "EMNLP. pages 649–657.",
      "citeRegEx" : "Schnabel et al\\.,? 2015",
      "shortCiteRegEx" : "Schnabel et al\\.",
      "year" : 2015
    }, {
      "title" : "Recursive deep models for semantic compositionality over a sentiment treebank",
      "author" : [ "Richard Socher", "Alex Perelygin", "Jean Y Wu", "Jason Chuang", "Christopher D Manning", "Andrew Y Ng", "Christopher Potts." ],
      "venue" : "EMNLP. Citeseer, volume 1631, page",
      "citeRegEx" : "Socher et al\\.,? 2013",
      "shortCiteRegEx" : "Socher et al\\.",
      "year" : 2013
    }, {
      "title" : "A unified learning framework of skip-grams and global vectors",
      "author" : [ "Jun Suzuki", "Masaaki Nagata." ],
      "venue" : "ACL. page 186.",
      "citeRegEx" : "Suzuki and Nagata.,? 2015",
      "shortCiteRegEx" : "Suzuki and Nagata.",
      "year" : 2015
    }, {
      "title" : "Is ”universal syntax” universally useful for learning distributed word representations? In ACL",
      "author" : [ "Ivan Vulic", "Anna Korhonen." ],
      "venue" : "page 518.",
      "citeRegEx" : "Vulic and Korhonen.,? 2016",
      "shortCiteRegEx" : "Vulic and Korhonen.",
      "year" : 2016
    }, {
      "title" : "Learning syntactic categories using paradigmatic representations of word context",
      "author" : [ "Mehmet Ali Yatbaz", "Enis Sert", "Deniz Yuret." ],
      "venue" : "EMNLPCoNLL. pages 940–951.",
      "citeRegEx" : "Yatbaz et al\\.,? 2012",
      "shortCiteRegEx" : "Yatbaz et al\\.",
      "year" : 2012
    }, {
      "title" : "Learning word meta-embeddings",
      "author" : [ "Wenpeng Yin", "Hinrich Schutze." ],
      "venue" : "ACL. pages 327–332.",
      "citeRegEx" : "Yin and Schutze.,? 2016",
      "shortCiteRegEx" : "Yin and Schutze.",
      "year" : 2016
    }, {
      "title" : "Using wiktionary for computing semantic relatedness",
      "author" : [ "Torsten Zesch", "Christof Müller", "Iryna Gurevych." ],
      "venue" : "AAAI. volume 8, pages 861–866.",
      "citeRegEx" : "Zesch et al\\.,? 2008",
      "shortCiteRegEx" : "Zesch et al\\.",
      "year" : 2008
    } ],
    "referenceMentions" : [ {
      "referenceID" : 4,
      "context" : "used for calculating word similarities) but also effective when used as the input of the downstream models, such as part-of-speech tagging, chunking, named entity recognition (Collobert and Weston, 2008; Collobert et al., 2011) and text classification (Socher et al.",
      "startOffset" : 175,
      "endOffset" : 227
    }, {
      "referenceID" : 5,
      "context" : "used for calculating word similarities) but also effective when used as the input of the downstream models, such as part-of-speech tagging, chunking, named entity recognition (Collobert and Weston, 2008; Collobert et al., 2011) and text classification (Socher et al.",
      "startOffset" : 175,
      "endOffset" : 227
    }, {
      "referenceID" : 29,
      "context" : ", 2011) and text classification (Socher et al., 2013; Kim, 2014).",
      "startOffset" : 32,
      "endOffset" : 64
    }, {
      "referenceID" : 9,
      "context" : ", 2011) and text classification (Socher et al., 2013; Kim, 2014).",
      "startOffset" : 32,
      "endOffset" : 64
    }, {
      "referenceID" : 8,
      "context" : "For almost all word embedding models, the training objectives are based on the Distributed Hypothesis (Harris, 1954), which can be stated as: “words that occur in the same contexts tend to have similar meanings”.",
      "startOffset" : 102,
      "endOffset" : 116
    }, {
      "referenceID" : 2,
      "context" : "The “context” is usually defined as the words which precede and follow the target word within some fixed distance in most word embedding models with various architectures (Bengio et al., 2003; Mnih and Hinton, 2007; Mikolov et al., 2013b; Pennington et al., 2014).",
      "startOffset" : 171,
      "endOffset" : 263
    }, {
      "referenceID" : 23,
      "context" : "The “context” is usually defined as the words which precede and follow the target word within some fixed distance in most word embedding models with various architectures (Bengio et al., 2003; Mnih and Hinton, 2007; Mikolov et al., 2013b; Pennington et al., 2014).",
      "startOffset" : 171,
      "endOffset" : 263
    }, {
      "referenceID" : 22,
      "context" : "The “context” is usually defined as the words which precede and follow the target word within some fixed distance in most word embedding models with various architectures (Bengio et al., 2003; Mnih and Hinton, 2007; Mikolov et al., 2013b; Pennington et al., 2014).",
      "startOffset" : 171,
      "endOffset" : 263
    }, {
      "referenceID" : 27,
      "context" : "The “context” is usually defined as the words which precede and follow the target word within some fixed distance in most word embedding models with various architectures (Bengio et al., 2003; Mnih and Hinton, 2007; Mikolov et al., 2013b; Pennington et al., 2014).",
      "startOffset" : 171,
      "endOffset" : 263
    }, {
      "referenceID" : 2,
      "context" : "The “context” is usually defined as the words which precede and follow the target word within some fixed distance in most word embedding models with various architectures (Bengio et al., 2003; Mnih and Hinton, 2007; Mikolov et al., 2013b; Pennington et al., 2014). Among them, Global Vectors (GloVe) proposed by Pennington et al. (2014), Continuous Skip-Gram (CSG) 1 and Continuous Bag-Of-Words (CBOW) proposed by Mikolov et al.",
      "startOffset" : 172,
      "endOffset" : 337
    }, {
      "referenceID" : 2,
      "context" : "The “context” is usually defined as the words which precede and follow the target word within some fixed distance in most word embedding models with various architectures (Bengio et al., 2003; Mnih and Hinton, 2007; Mikolov et al., 2013b; Pennington et al., 2014). Among them, Global Vectors (GloVe) proposed by Pennington et al. (2014), Continuous Skip-Gram (CSG) 1 and Continuous Bag-Of-Words (CBOW) proposed by Mikolov et al. (2013a) achieve stateof-the-art results on a wide range of linguistic tasks, and scales well to corpus with billion words.",
      "startOffset" : 172,
      "endOffset" : 437
    }, {
      "referenceID" : 2,
      "context" : "The “context” is usually defined as the words which precede and follow the target word within some fixed distance in most word embedding models with various architectures (Bengio et al., 2003; Mnih and Hinton, 2007; Mikolov et al., 2013b; Pennington et al., 2014). Among them, Global Vectors (GloVe) proposed by Pennington et al. (2014), Continuous Skip-Gram (CSG) 1 and Continuous Bag-Of-Words (CBOW) proposed by Mikolov et al. (2013a) achieve stateof-the-art results on a wide range of linguistic tasks, and scales well to corpus with billion words. Recently, Levy and Goldberg (2014b); Ling et al.",
      "startOffset" : 172,
      "endOffset" : 588
    }, {
      "referenceID" : 2,
      "context" : "The “context” is usually defined as the words which precede and follow the target word within some fixed distance in most word embedding models with various architectures (Bengio et al., 2003; Mnih and Hinton, 2007; Mikolov et al., 2013b; Pennington et al., 2014). Among them, Global Vectors (GloVe) proposed by Pennington et al. (2014), Continuous Skip-Gram (CSG) 1 and Continuous Bag-Of-Words (CBOW) proposed by Mikolov et al. (2013a) achieve stateof-the-art results on a wide range of linguistic tasks, and scales well to corpus with billion words. Recently, Levy and Goldberg (2014b); Ling et al. (2015) 2 improve CSG and CBOW by introducing position-aware context representation, where each contextual word is associated with their relative position to the target word.",
      "startOffset" : 172,
      "endOffset" : 608
    }, {
      "referenceID" : 2,
      "context" : "The “context” is usually defined as the words which precede and follow the target word within some fixed distance in most word embedding models with various architectures (Bengio et al., 2003; Mnih and Hinton, 2007; Mikolov et al., 2013b; Pennington et al., 2014). Among them, Global Vectors (GloVe) proposed by Pennington et al. (2014), Continuous Skip-Gram (CSG) 1 and Continuous Bag-Of-Words (CBOW) proposed by Mikolov et al. (2013a) achieve stateof-the-art results on a wide range of linguistic tasks, and scales well to corpus with billion words. Recently, Levy and Goldberg (2014b); Ling et al. (2015) 2 improve CSG and CBOW by introducing position-aware context representation, where each contextual word is associated with their relative position to the target word. Levy and Goldberg (2014a) propose DEPS, which takes the words that are connected to target word in dependency parse tree as context.",
      "startOffset" : 172,
      "endOffset" : 801
    }, {
      "referenceID" : 21,
      "context" : "generalized (unbound) word CSG (Mikolov et al., 2013a) this work Skip-Gram bound word Structured SG (Ling et al.",
      "startOffset" : 31,
      "endOffset" : 54
    }, {
      "referenceID" : 16,
      "context" : ", 2013a) this work Skip-Gram bound word Structured SG (Ling et al., 2015) POSIT (Levy and Goldberg, 2014b) Deps (Levy and Goldberg, 2014a) generalized (unbound) word CBOW (Mikolov et al.",
      "startOffset" : 54,
      "endOffset" : 73
    }, {
      "referenceID" : 13,
      "context" : ", 2015) POSIT (Levy and Goldberg, 2014b) Deps (Levy and Goldberg, 2014a) generalized (unbound) word CBOW (Mikolov et al.",
      "startOffset" : 14,
      "endOffset" : 40
    }, {
      "referenceID" : 12,
      "context" : ", 2015) POSIT (Levy and Goldberg, 2014b) Deps (Levy and Goldberg, 2014a) generalized (unbound) word CBOW (Mikolov et al.",
      "startOffset" : 46,
      "endOffset" : 72
    }, {
      "referenceID" : 21,
      "context" : ", 2015) POSIT (Levy and Goldberg, 2014b) Deps (Levy and Goldberg, 2014a) generalized (unbound) word CBOW (Mikolov et al., 2013a) this work Bag-Of-Words bound word CWINDOW (Ling et al.",
      "startOffset" : 105,
      "endOffset" : 128
    }, {
      "referenceID" : 16,
      "context" : ", 2013a) this work Bag-Of-Words bound word CWINDOW (Ling et al., 2015) this work generalized (unbound) word GloVe (Pennington et al.",
      "startOffset" : 51,
      "endOffset" : 70
    }, {
      "referenceID" : 27,
      "context" : ", 2015) this work generalized (unbound) word GloVe (Pennington et al., 2014) this work GloVe bound word this work this work",
      "startOffset" : 51,
      "endOffset" : 76
    }, {
      "referenceID" : 12,
      "context" : "In the current literature, there are mainly two types of contexts: linear (most word embedding models) and dependency-based (DEPS (Levy and Goldberg, 2014a)).",
      "startOffset" : 130,
      "endOffset" : 156
    }, {
      "referenceID" : 12,
      "context" : "We use the collapsed version of dependency in all of our experiments the same as Levy and Goldberg (2014b)",
      "startOffset" : 81,
      "endOffset" : 107
    }, {
      "referenceID" : 12,
      "context" : "Levy and Goldberg (2014b); Ling et al.",
      "startOffset" : 0,
      "endOffset" : 26
    }, {
      "referenceID" : 12,
      "context" : "Levy and Goldberg (2014b); Ling et al. (2015) improve them by introducing position-bound words, where each contextual word is associated with their relative position to the target word.",
      "startOffset" : 0,
      "endOffset" : 46
    }, {
      "referenceID" : 21,
      "context" : "Note that in the original CBOW (Mikolov et al., 2013a) with negative sampling technique, the probability is actually p (c| ∑ ~ wi) instead of p (w| ∑ ~ ci).",
      "startOffset" : 31,
      "endOffset" : 54
    }, {
      "referenceID" : 13,
      "context" : "2 Generalized Skip-Gram For generalized Skip-Gram (GSG), the definition is straightforward and the objective function actually needs no modification (Levy and Goldberg, 2014b).",
      "startOffset" : 149,
      "endOffset" : 175
    }, {
      "referenceID" : 15,
      "context" : "1 Training Details Previously, the word2vecf toolkit 3 (Levy et al., 2015) extends the word2vec toolkit 4 (Mikolov et al.",
      "startOffset" : 55,
      "endOffset" : 74
    }, {
      "referenceID" : 22,
      "context" : ", 2015) extends the word2vec toolkit 4 (Mikolov et al., 2013b) to accept the input of collection P rather than raw corpus.",
      "startOffset" : 39,
      "endOffset" : 62
    }, {
      "referenceID" : 19,
      "context" : "The Stanford CoreNLP (Manning et al., 2014) is used for dependency parsing.",
      "startOffset" : 21,
      "endOffset" : 43
    }, {
      "referenceID" : 15,
      "context" : "1 Training Details Previously, the word2vecf toolkit 3 (Levy et al., 2015) extends the word2vec toolkit 4 (Mikolov et al., 2013b) to accept the input of collection P rather than raw corpus. This makes CSG model accept arbitrary contexts (e.g. dependencybased context). However, CBOW and GloVe are not considered in that toolkit. We implement word2vecPM toolkit, a further extension of word2vecf, which supports generalized SG, CBOW and GloVe with the input of collection P , M and M respectively. We use English Wikipedia (August 2013 dump) as the training corpus in all of our experiments. The Stanford CoreNLP (Manning et al., 2014) is used for dependency parsing. All words and contexts are converted to lower case after parsing. Words and contexts that appear less than 100 times in the collection P are directly ignored. Note that this is slightly different from ignoring rare words that appear less than 100 times in the vocabulary based on the corpus, since each word may appear more times in the collection than that in the vocabulary. Most hyper-parameters are the same as Levy et al. (2015)’s best configuration.",
      "startOffset" : 56,
      "endOffset" : 1101
    }, {
      "referenceID" : 7,
      "context" : "WordSim353 (Finkelstein et al., 2001) dataset with similarity and relatedness partition (Zesch et al.",
      "startOffset" : 11,
      "endOffset" : 37
    }, {
      "referenceID" : 34,
      "context" : ", 2001) dataset with similarity and relatedness partition (Zesch et al., 2008; Agirre et al., 2009) is used for this task.",
      "startOffset" : 58,
      "endOffset" : 99
    }, {
      "referenceID" : 0,
      "context" : ", 2001) dataset with similarity and relatedness partition (Zesch et al., 2008; Agirre et al., 2009) is used for this task.",
      "startOffset" : 58,
      "endOffset" : 99
    }, {
      "referenceID" : 12,
      "context" : "Previous researches (Levy and Goldberg, 2014a; Melamud et al., 2016) conclude that compared to linear context, dependency-based context can capture more functional similarity (e.",
      "startOffset" : 20,
      "endOffset" : 68
    }, {
      "referenceID" : 20,
      "context" : "Previous researches (Levy and Goldberg, 2014a; Melamud et al., 2016) conclude that compared to linear context, dependency-based context can capture more functional similarity (e.",
      "startOffset" : 20,
      "endOffset" : 68
    }, {
      "referenceID" : 22,
      "context" : "However, their experiments do not distinguish the effect of different context representations: unbound representation is used for linear context (Mikolov et al., 2013b) while bound representation is used for dependency-based context (Levy and Goldberg, 2014a).",
      "startOffset" : 145,
      "endOffset" : 168
    }, {
      "referenceID" : 12,
      "context" : ", 2013b) while bound representation is used for dependency-based context (Levy and Goldberg, 2014a).",
      "startOffset" : 73,
      "endOffset" : 99
    }, {
      "referenceID" : 21,
      "context" : "We follow previous researches and use Google’s analogy dataset (Mikolov et al., 2013a) (with semantic and syntactic partition) in our experiments.",
      "startOffset" : 63,
      "endOffset" : 86
    }, {
      "referenceID" : 12,
      "context" : "We follow the evaluation protocol in Levy and Goldberg (2014b), answering the questions using both 3CosAdd (additive) and 3CosMul (multiplicative) functions.",
      "startOffset" : 37,
      "endOffset" : 63
    }, {
      "referenceID" : 28,
      "context" : "For example, these tasks aren’t necessarily correlated with downstream tasks’ performances, as shown in (Schnabel et al., 2015; Linzen, 2016; Chiu et al., 2016).",
      "startOffset" : 104,
      "endOffset" : 160
    }, {
      "referenceID" : 17,
      "context" : "For example, these tasks aren’t necessarily correlated with downstream tasks’ performances, as shown in (Schnabel et al., 2015; Linzen, 2016; Chiu et al., 2016).",
      "startOffset" : 104,
      "endOffset" : 160
    }, {
      "referenceID" : 3,
      "context" : "For example, these tasks aren’t necessarily correlated with downstream tasks’ performances, as shown in (Schnabel et al., 2015; Linzen, 2016; Chiu et al., 2016).",
      "startOffset" : 104,
      "endOffset" : 160
    }, {
      "referenceID" : 3,
      "context" : ", 2015; Linzen, 2016; Chiu et al., 2016). More extrinsic tasks should be considered. In this subsection, we evaluate the effectiveness of different word embedding models with different contexts on Part-of-Speech Tagging (POS), Chunking and Named Entity Recognition (NER) tasks. These tasks can be categorized as sequence labeling. It aims at automatically assigning words in texts with labels. CoNLL 2000 shared task 5 is used as benchmark for POS and Chunking. CoNLL 2003 shared task 6 is used as benchmark for NER. Inspired by the evaluation protocol used in Kiros et al. (2015), we restrict the predicting model to simple linear classifier.",
      "startOffset" : 22,
      "endOffset" : 581
    }, {
      "referenceID" : 29,
      "context" : "Recently, deep neural networks are dominant on this task (Socher et al., 2013; Kim, 2014; Dai and Le, 2015).",
      "startOffset" : 57,
      "endOffset" : 107
    }, {
      "referenceID" : 9,
      "context" : "Recently, deep neural networks are dominant on this task (Socher et al., 2013; Kim, 2014; Dai and Le, 2015).",
      "startOffset" : 57,
      "endOffset" : 107
    }, {
      "referenceID" : 6,
      "context" : "Recently, deep neural networks are dominant on this task (Socher et al., 2013; Kim, 2014; Dai and Le, 2015).",
      "startOffset" : 57,
      "endOffset" : 107
    }, {
      "referenceID" : 26,
      "context" : "The first 3 datasets are sentence-level: short movie review sentiment (MR) (Pang and Lee, 2005), customer product reModel Context Context Sentence-level Document-level Type Rep.",
      "startOffset" : 75,
      "endOffset" : 95
    }, {
      "referenceID" : 24,
      "context" : "views (CR) (Nakagawa et al., 2010), and subjectivity/objectivity classification (SUBJ) (Pang and Lee, 2004).",
      "startOffset" : 11,
      "endOffset" : 34
    }, {
      "referenceID" : 25,
      "context" : ", 2010), and subjectivity/objectivity classification (SUBJ) (Pang and Lee, 2004).",
      "startOffset" : 60,
      "endOffset" : 80
    }, {
      "referenceID" : 25,
      "context" : "The other 2 datasets are documentlevel with multiple sentences: full-length movie review (RT-2k) (Pang and Lee, 2004), and IMDB movie review (IMDB) (Maas et al.",
      "startOffset" : 97,
      "endOffset" : 117
    }, {
      "referenceID" : 18,
      "context" : "The other 2 datasets are documentlevel with multiple sentences: full-length movie review (RT-2k) (Pang and Lee, 2004), and IMDB movie review (IMDB) (Maas et al., 2011).",
      "startOffset" : 148,
      "endOffset" : 167
    }, {
      "referenceID" : 32,
      "context" : "(2016) investigate the performance of CSG, Deps and a substitute-based word embedding models (Yatbaz et al., 2012) 7, which shows that different types of",
      "startOffset" : 93,
      "endOffset" : 114
    }, {
      "referenceID" : 10,
      "context" : "Lai et al. (2016) compare 6 word embedding models using different corpora and hyper-parameters.",
      "startOffset" : 0,
      "endOffset" : 18
    }, {
      "referenceID" : 10,
      "context" : "Lai et al. (2016) compare 6 word embedding models using different corpora and hyper-parameters. Levy and Goldberg (2014c) show the theoretical equivalence of CSG and PPMI matrix factorization.",
      "startOffset" : 0,
      "endOffset" : 122
    }, {
      "referenceID" : 10,
      "context" : "Lai et al. (2016) compare 6 word embedding models using different corpora and hyper-parameters. Levy and Goldberg (2014c) show the theoretical equivalence of CSG and PPMI matrix factorization. Levy et al. (2015) further discuss the connections between 4 word embedding models (PPMI, PPMI+SVD, CSG, GloVe) and re-evaluate them with the same hyper-parameters.",
      "startOffset" : 0,
      "endOffset" : 212
    }, {
      "referenceID" : 10,
      "context" : "Lai et al. (2016) compare 6 word embedding models using different corpora and hyper-parameters. Levy and Goldberg (2014c) show the theoretical equivalence of CSG and PPMI matrix factorization. Levy et al. (2015) further discuss the connections between 4 word embedding models (PPMI, PPMI+SVD, CSG, GloVe) and re-evaluate them with the same hyper-parameters. Suzuki and Nagata (2015) investigate different configurations of CSG and Glove, then merge them into a unified form.",
      "startOffset" : 0,
      "endOffset" : 383
    }, {
      "referenceID" : 10,
      "context" : "Lai et al. (2016) compare 6 word embedding models using different corpora and hyper-parameters. Levy and Goldberg (2014c) show the theoretical equivalence of CSG and PPMI matrix factorization. Levy et al. (2015) further discuss the connections between 4 word embedding models (PPMI, PPMI+SVD, CSG, GloVe) and re-evaluate them with the same hyper-parameters. Suzuki and Nagata (2015) investigate different configurations of CSG and Glove, then merge them into a unified form. Yin and Schutze (2016) propose 4 ensemble methods and show their effectiveness over individual word embeddings.",
      "startOffset" : 0,
      "endOffset" : 498
    }, {
      "referenceID" : 10,
      "context" : "Lai et al. (2016) compare 6 word embedding models using different corpora and hyper-parameters. Levy and Goldberg (2014c) show the theoretical equivalence of CSG and PPMI matrix factorization. Levy et al. (2015) further discuss the connections between 4 word embedding models (PPMI, PPMI+SVD, CSG, GloVe) and re-evaluate them with the same hyper-parameters. Suzuki and Nagata (2015) investigate different configurations of CSG and Glove, then merge them into a unified form. Yin and Schutze (2016) propose 4 ensemble methods and show their effectiveness over individual word embeddings. There are also researches which focus on evaluating different context types in learning word embeddings. Vulic and Korhonen (2016) compare CSG and dependency-based models on various languages.",
      "startOffset" : 0,
      "endOffset" : 718
    }, {
      "referenceID" : 1,
      "context" : "Bansal et al. (2014) investigate different embedding models for parsing task and show that dependency-based context is more suitable than linear context on this task.",
      "startOffset" : 0,
      "endOffset" : 21
    }, {
      "referenceID" : 1,
      "context" : "Bansal et al. (2014) investigate different embedding models for parsing task and show that dependency-based context is more suitable than linear context on this task. Melamud et al. (2016) investigate the performance of CSG, Deps and a substitute-based word embedding models (Yatbaz et al.",
      "startOffset" : 0,
      "endOffset" : 189
    }, {
      "referenceID" : 20,
      "context" : "same observation is made by Melamud et al. (2016); Vulic and Korhonen (2016)",
      "startOffset" : 28,
      "endOffset" : 50
    }, {
      "referenceID" : 20,
      "context" : "same observation is made by Melamud et al. (2016); Vulic and Korhonen (2016)",
      "startOffset" : 28,
      "endOffset" : 77
    } ],
    "year" : 2017,
    "abstractText" : "The number of word embedding models is growing every year. Most of them learn word embeddings based on the cooccurrence information of words and their contexts. However, it’s still an open question what is the best definition of context. We provide the first systematical investigation of different context types and context representations for learning word embeddings. Comprehensive experiments are conducted to evaluate their effectiveness under 6 tasks, which give us some insights about context selection. We hope that this paper, along with the published code, can serve as a guideline of choosing context for our community.",
    "creator" : "LaTeX with hyperref package"
  }
}