{
  "name" : "33.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Linguistically Regularized LSTM for Sentiment Classification",
    "authors" : [ ],
    "emails" : [ ],
    "sections" : [ {
      "heading" : null,
      "text" : "1 000\n011\n012\n013\n014\n015\n016\n017\n018\n019\n020\n021\n022\n023\n024\n025\n026\n027\n028\n029\n030\n031\n032\n033\n034\n035\n036\n037\n038\n039\n040\n041\n042\n043\n044\n045\n046\n047\n048\n049\n061\n062\n063\n064\n065\n066\n067\n068\n069\n070\n071\n072\n073\n074\n075\n076\n077\n078\n079\n080\n081\n082\n083\n084\n085\n086\n087\n088\n089\n090\n091\n092\n093\n094\n095\n096\n097\n098\n099"
    }, {
      "heading" : "1 Introduction",
      "text" : "Sentiment classification aims to classify text to sentiment classes such as positive or negative, or more fine-grained classes such as very positive, positive, neutral, etc. There has been a variety of approaches for this purpose such as lexicon-based classification (Turney, 2002; Taboada et al., 2011), and early machine learning based methods (Pang et al., 2002; Pang and Lee, 2005), and recently neural network models such as convolutional neural network (CNN) (Kim, 2014; Kalchbrenner et al., 2014; Lei et al., 2015), recursive autoencoders (Socher et al., 2011, 2013), Long ShortTerm Memory (LSTM) (Mikolov, 2012; Chung et al., 2014; Tai et al., 2015; Zhu et al., 2015), and many more.\nIn spite of the great success of these neural models, there are some defects in previous studies.\nFirst, tree-structured models such as recursive autoencoders and Tree-LSTM (Tai et al., 2015; Zhu et al., 2015), depend on parsing tree structures and expensive phrase-level annotation, whose performance drops substantially when only trained with sentence-level annotation. Second, linguistic knowledge such as sentiment lexicon, negation words or negators (e.g., not, never), and intensity words or intensifiers (e.g., very, absolutely), has not been fully employed in neural models. The goal of this research is to developing simple sequence models but also attempts to fully employing linguistic resources to benefit sentiment classification. Firstly, we attempts to develop simple models that do not depend on parsing trees and do not require phrase-level annotation which is too expensive in real-world applications. Secondly, in order to obtain competitive performance, simple models can benefit from linguistic resources. Three types of resources will be addressed in this paper: sentiment lexicon, negation words, and intensity words. Sentiment lexicon offers the prior polarity of a word which can be useful in determining the sentiment polarity of longer texts such as phrases and sentences. Negators are typical sentiment shifters (Zhu et al., 2014), which constantly change the polarity of sentiment expression. Intensifiers change the valence degree of the modified text, which is important for fine-grained sentiment classification. In order to model the linguistic role of sentiment, negation, and intensity words, our central idea is to regularize the difference between the predicted sentiment distribution of the current position 1, and that of the previous or next positions, in a sequence model. For instance, if the current position is a negator not, the negator should change the sentiment distribution of the next posi-\n1Note that in sequence models, the hidden state of the current position also encodes forward or backward contexts.\n2\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\ntion accordingly. To summarize, our contributions lie in two folds:\n• We discover that modeling the linguistic role of sentiment, negation, and intensity words can enhance sentence-level sentiment classification. We address the issue by imposing linguistic-inspired regularizers on sequence LSTM models.\n• Unlike previous models that depend on parsing structures and expensive phrase-level annotation, our models are simple and efficient, but the performance is on a par with the stateof-the-art.\nThe rest of the paper is organized as follows: In the following section, we survey related work. In Section 3, we briefly introduce the background of LSTM and bidirectional LSTM, and then describe in detail the lingistic regularizers for sentiment/negation/intensity words in Section 4. Experiments are presented in Section 5, and Conclusion follows in Section 6."
    }, {
      "heading" : "2 Related Work",
      "text" : ""
    }, {
      "heading" : "2.1 Neural Networks for Sentiment Classification",
      "text" : "There are many neural networks proposed for sentiment classification. The most noticeable models may be the recursive autoencoder neural network which builds the representation of a sentence from subphrases recursively (Socher et al., 2011, 2013; Dong et al., 2014; Qian et al., 2015). Such recursive models usually depend on a tree structure of input text, and in order to obtain competitive results, usually require annotation of all subphrases. Sequence models, for instance, convolutional neural network (CNN), do not require tree-structured data, which are widely adopted for sentiment classification (Kim, 2014; Kalchbrenner et al., 2014; Lei et al., 2015). Long short-term memory models are also common for learning sentence-level representation due to its capability of modeling the prefix or suffix context (Hochreiter and Schmidhuber, 1997). LSTM can be commonly applied to sequential data but also tree-structured data (Zhu et al., 2015; Tai et al., 2015)."
    }, {
      "heading" : "2.2 Applying Linguistic Knowledge for Sentiment Classification",
      "text" : "Linguistic knowledge and sentiment resources, such as sentiment lexicons, negation words (not,\nnever, neither, etc.) or negators, and intensity words (very, extremely, etc.) or intensifiers, are useful for sentiment analysis in general.\nSentiment lexicon (Hu and Liu, 2004; Wilson et al., 2005) usually defines prior polarity of a lexical entry, and is valuable for lexicon-based models (Turney, 2002; Taboada et al., 2011), and machine learning approaches (Pang and Lee, 2008). There are recent works for automatic construction of sentiment lexicons from social data (Vo and Zhang, 2016) and for multiple languages (Chen and Skiena, 2014). A noticeable work that ultilizes sentiment lexicons can be seen in (Teng et al., 2016) which treats the sentiment score of a sentence as a weighted sum of prior sentiment scores of negation words and sentiment words, where the weights are learned by a neural network.\nNegation words play a critical role in modifying sentiment of textual expressions. Some early negation models adopt the reversing assumption that a negator reverses the sign of the sentiment value of the modified text (Polanyi and Zaenen, 2006; Kennedy and Inkpen, 2006). The shifting hyothesis assumes that negators change the sentiment values by a constant amount (Taboada et al., 2011; Liu and Seneff, 2009). Since each negator can affect the modified text in different ways, the constant amount can be extended to be negatorspecific (Zhu et al., 2014), and further, the effect of negators could also depend on the syntax and semantics of the modified text (Zhu et al., 2014). Other approaches to negation modeling can be seen in (Jia et al., 2009; Wiegand et al., 2010; Benamara et al., 2012; Lapponi et al., 2012).\nSentiment intensity of a phrase indicates the strength of associated sentiment, which is quite important for fine-grained sentiment classification or rating. Intensity words can change the valence degree (i.e., sentiment intensity) of the modified text. In (Wei et al., 2011) the authors propose a linear regression model to predict the valence value for content words. In (Malandrakis et al., 2013), a kernel-based model is proposed to combine semantic information for predicting sentiment score. In the SemEval-2016 task 7 subtask A, a learningto-rank model with a pair-wise strategy is proposed to predict sentiment intensity scores (Wang et al., 2016). Linguistic intensity is not limited to sentiment or intensity words, and there are works that assign low/medium/high intensity scales to adjectives such as okay, good, great (Sharma et al.,\n3\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n2015) or to gradable terms (e.g. large, huge, gigantic) (Shivade et al., 2015).\nIn (Dong et al., 2015), a sentiment parser is proposed, and the authors studied how sentiment changes when a phrase is modified by negators or intensifiers."
    }, {
      "heading" : "3 Long Short-term Memory Network",
      "text" : ""
    }, {
      "heading" : "3.1 Long Short-Term Memory (LSTM)",
      "text" : "Long Short-Term Memory has been widely adopted for text processing. Briefly speaking, in LSTM, the hidden states ht and memory cell ct is a function of their previous ct−1 and ht−1 and input vector xt, or formally as follows:\nct, ht = g (LSTM)(ct−1, ht−1, xt) (1)\nThe hidden state ht ∈ Rd denotes the representation of position t while also encoding the preceding contexts of the position. For more details about LSTM, we refer readers to (Hochreiter and Schmidhuber, 1997)."
    }, {
      "heading" : "3.2 Bidirectional LSTM",
      "text" : "In LSTM, the hidden state of each position (ht) only encodes the prefix context in a forward direction while the backward context is not considered. Bidirectional LSTM (Graves et al., 2013) exploited two parallel passes (forward and backward) and concatenated hidden states of the two LSTMs as the representation of each position. The forward and backward LSTMs are respectively formulated as follows:\n−→c t, −→ h t = g (LSTM)(−→c t−1, −→ h t−1, xt) (2)\n←−c t, ←− h t = g (LSTM)(←−c t+1, ←− h t+1, xt) (3)\nwhere g(LSTM) is the same as that in Eq (1). Particularly, parameters in the two LSTMs are shared. The representation of the entire sentence is [ −→ h n, ←− h 1], where n is the length of the sentence. At each position t, the new representation is ht = [ −→ h t, ←− h t], which is the concatenation of hidden states of the forward LSTM and backward LSTM. In this way, the forward and backward contexts can be considered simultaneously."
    }, {
      "heading" : "4 Linguistically Regularized LSTM",
      "text" : "The central idea of the paper is to model the linguistic role of sentiment, negation, and intensity words in sentence-level sentiment classification by\nregularizing the outputs at adjacent positions of a sentence. For example, in sentence “this movie is interesting”, the predicted sentiment distributions at “this*2”, “this movie*”, and “this movie is*” should be close to each other, while the predicted sentiment distribution at “this movie is very interesting*” should be quite different from the preceeding positions (“this movie is very*”) since a sentiment word (“interesting”) is seen. We propose a generic regularizer and three special regularizers based on the following linguistic observations:\n• Non-Sentiment Regularizer: if the two adjacent positions are all non-opinion words, the sentiment distributions of the two positions should be close to each other. Though this is not always true (e.g., soap movie), this assumption holds at most cases.\n• Sentiment Regularizer: if the word is a sentiment word found in a lexicon, the sentiment distribution of the current position should be significantly different from that of the next or previous positions. We approach this phenomenon with a sentiment class specific shifting distribution.\n• Negation Regularizer: Negation words such as “not” and “never” are critical sentiment shifter or converter: in general they shift sentiment polarity from the positive end to the negative end, but sometimes depend on the negation word and the words they modify. The negation regularizer models this linguistic phenomena with a negator-specific transformation matrix.\n• Intensity Regularizer: Intensity words such as “very” and “extremely” change the valence degree of a sentiment expression: for instance, from positive to very positive. Modeling this effect is quite important for finegrained sentiment classification, and the intensity regularizer is designed to formulate this effect by a word-specific transformation matrix.\nMore formally, the predicted sentiment distribution (pt, based on ht, see Eq. 5) at position t should be linguistically regularized with respect to that of the preceding (t − 1) or following (t + 1)\n2The asterisk denotes the current position.\n4\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\npositions. In order to enforce the model to produce coherent predictions, we plug a new loss term into the original cross entropy loss:\nL(θ) = − ∑ i yi log pi + α ∑ i ∑ t Lt,i + β||θ||2 (4)\nwhere yi is the gold distribution for sentence i, pi is the predicted distribution, Lt,i is one of the above regularizers or combination of these regularizers on sentence i, α is the weight for the regularization term, and t is the word position in a sentence.\nNote that we do not consider the modification span of negation and intensity words to preserve the simplicity of the proposed models. Negation scope resolution is another complex problem which has been extensively studied (Zou et al., 2013; Packard et al., 2014; Fancellu et al., 2016), which is beyond the scope of this work. Instead, we resort to sequence LSTMs for encoding surrounding contexts at a given position."
    }, {
      "heading" : "4.1 Non-Sentiment Regularizer (NSR)",
      "text" : "This regularizer constrains that the sentiment distributions of adjacent positions should not vary much if the additional input word xt is not a sentiment word, formally as follows:\nL (NSR) t = max(0, DKL(pt||pt−1)−M) (5)\nwhereM is a hyperparameter for margin, pt is the predicted distribution at state of position t, (i.e., ht), andDKL(p||q) is a symmetric KL divergence defined as follows:\nDKL(p||q) = 1\n2 C∑ l=1 p(l) log q(l) + q(l) log p(l) (6)\nwhere p, q are distributions over sentiment labels l and C is the number of labels."
    }, {
      "heading" : "4.2 Sentiment Regularizer (SR)",
      "text" : "The sentiment regularizer constrains that the sentiment distributions of adjacent positions should drift accordingly if the input word is a sentiment word. Let’s revisit the example “this movie is interesting” again. At position t = 4 we see a positive word “interesting” so the predicted distribution would be more positive than that at position t = 3. This is the issue of sentiment drift.\nIn order to address the sentiment drift issue, we propose a polarity shifting distribution sc ∈ RC for each sentiment class defined in a lexicon. For\ninstance, a sentiment lexicon may have class labels like strong positive, weakly positive, weakly negative, and strong negative, and for each class, there is a shifting distribution which will be learned by the model. The sentiment regularizer states that if the current word is a sentiment word, the sentiment distribution drift should be observed in comparison to the previous position, in more details:\np (SR) t−1 = pt−1 + sc(xt) (7)\nL (SR) t = max(0, DKL(pt||p (SR) t−1 )−M) (8)\nwhere p(SR)t−1 is the drifted sentiment distribution after considering the shifting sentiment distribution corresponding to the state at position t, c(xt) is the prior sentiment class of word xt, and sc ∈ θ is a parameter to be optimized but could also be set fixed with prior knowledge. Note that in this way all words of the same sentiment class share the same drifting distribution, but in a refined setting, we can learn a shifting distribution for each sentiment word if large-scale datasets are available."
    }, {
      "heading" : "4.3 Negation Regularizer (NR)",
      "text" : "The negation regularizer approaches how negation words shift the sentiment distribution of the modified text. When the input xt is a negation word, the sentiment distribution should be shifted/reversed accordingly. However, the negation role is more complex than that by sentiment words, for example, the word “not” in “not good” and “not bad” have different roles in polarity change. The former changes the polarity to negative, while the latter changes to neutral instead of positive. To respect such complex negation effects, we propose a transformation matrix Tm ∈ RC×C for each negation word m, and the matrix will be learned by the model. The regularizer assumes that if the current position is a negation word, the sentiment distribution of the current position should be close to that of the next or previous position with the transformation.\np (NR) t−1 = softmax(Txj × pt−1) (9)\np (NR) t+1 = softmax(Txj × pt+1) (10)\nL (NR) t = min\n{ max(0, DKL(pt||p(NR)t−1 )−M)\nmax(0, DKL(pt||p(NR)t+1 )−M) (11)\n5\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\nwhere p(NR)t−1 and p (NR) t+1 is the sentiment distuibution after transformation, Txj ∈ θ is the transformation matrix for a negation word xj , a parameter to be learned during training. In total, we train m transformation matrixs for m negation words. Such negator-specific transformation is in accordance with the finding that each negator has its individual negation effect (Zhu et al., 2014)."
    }, {
      "heading" : "4.4 Intensity Regularizer (IR)",
      "text" : "Sentiment intensity of a phrase indicates the strength of associated sentiment, which is quite important for fine-grained sentiment classification or rating. Intensifier can change the valence degree of the content word. The intensity regularizer models how intensity words influence the sentiment valence of a phrase or a sentence.\nThe formulation of the intensity effect is quite the same as that in the negation regularizer, but with different parameters of course. For each intensity word, there is a transform matrix to favor the different roles of various intensifiers on sentiment drift. For brevity, we will not repeat the formulas here."
    }, {
      "heading" : "4.5 Applying Linguistic Regularizers to Bidirectional LSTM",
      "text" : "To preserve the simplicity of our proposals, we do not consider the modification span of negation and intensity words, which is a quite challenging problem in the NLP community (Zou et al., 2013; Packard et al., 2014; Fancellu et al., 2016). However, we can alleviate the problem by leveraging bidirectional LSTM.\nFor a single LSTM, we employ a backward LSTM from the end to the beginning of a sentence. This is because, at most times, the modified words of negation and intensity words are usually at the right side of the modified text. But sometimes, the modified words are at the left side of negation and intensity words. To better address this issue, we employ bidirectional LSTM and let the model determine which side should be chosen.\nMore formally, in Bi-LSTM, we compute a transformed sentiment distribution on−→p t−1 of the forward LSTM and also that on←−p t+1 of the backward LSTM, and compute the minimum distance of the distribution of the current position to the two distributions. This could be formulated as follows:\n−→p (R)t−1 = softmax(Txj × −→p t−1) (12)\n←−p (R)t+1 = softmax(Txj × ←−p t+1) (13)\nL (R) t = min\n{ max(0, DKL( −→p t||−→p (R)t−1)−M)\nmax(0, DKL( ←−p t||←−p (R)t+1)−M)\n(14)\nwhere −→p (R)t−1 and ←−p (R)t+1 are the sentiment distributions transformed from the previous distribution −→p t−1 and next distribution ←−p t+1 respectively. Note that R ∈ {NR, IR} indicating the formulation works for both negation and intensity regularizers. Due to the same consideration, we redefine L (NSR) t and L (SR) t with bidirectional LSTM similarly. The formulation is the same and omitted for brevity."
    }, {
      "heading" : "4.6 Discussion",
      "text" : "Our models address these linguistic factors with mathematical operations, parameterized with shifting distribution vectors or transformation matrices. In the sentiment regularizer, the sentiment shifting effect is parameterized with a classspecific distribution (but could also be wordspecific if with more data). In the negation and intensity regularizers, the effect is parameterized with word-specific transformation matrices. This is to respect the fact that the mechanism of how negation and intensity words shift sentiment expression is quite complex and highly dependent on individual words. Negation/Intensity effect also depends on the syntax and semantics of the modified text, however, for simplicity we resort to sequence LSTM for encoding surrounding contexts in this paper. We partially address the modification scope issue by applying the minimization operator in Eq. 11 and Eq. 14, and the bidirectional LSTM."
    }, {
      "heading" : "5 Experiment",
      "text" : ""
    }, {
      "heading" : "5.1 Dataset and Sentiment Lexicon",
      "text" : "Two datasets are used for evaluating the proposed models: Movie Review (MR) (Pang and Lee, 2005) where each sentence is annotated with two classes as negative, positive and Stanford Sentiment Treebank (SST) (Socher et al., 2013) with five classes { very negative, negative, neutral, positive, very positive}. Note that SST has provided phrase-level annotation on all inner nodes, but we only use the sentence-level annotation since one of our goals is to avoid expensive phrase-level annotation.\n6\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\nThe sentiment lexicon contains two parts. The first part comes fromMPQA (Wilson et al., 2005), which contains 5, 153 sentiment words, each with polarity rating. The second part consists of the leaf nodes of the SST dataset (i.e., all sentiment words) and there are 6, 886 polar words except neural ones. We combine the two parts and ignore those words that have conflicting sentiment labels, and produce a lexicon of 9, 750words with 4 sentiment labels. For negation and intensity words, we collect them manually since the number is small, some of which can be seen in Table 2.\nDue to the length limit, we present the implementation details and a full list of resources in the supplementary file.\nDataset MR SST # sentences in total 10,662 11,885\n#sen containing sentiment word 10,446 11,211 #sen containing negation word 1,644 1,832 #sen containing intensity word 2,687 2,472\nTable 1: The data statistics.\nNegation word no, nothing, never, neither, not, seldom, scarcely, etc. Intensity word terribly, greatly, absolutely, too, very, completely, etc.\nTable 2: Examples of negation and intensity words."
    }, {
      "heading" : "5.2 Overall Comparison",
      "text" : "We include several baselines, as listed below:\nRNN/RNTN: Recursive Neural Network over parsing trees, proposed by (Socher et al., 2011) and Recursive Tensor Neural Network (Socher et al., 2013) employs tensors to model correlations between different dimensions of child nodes’ vectors.\nLSTM/Bi-LSTM: Long Short-Term Memory (Cho et al., 2014) and the bidirectional variant as introduced previously.\nTree-LSTM: Tree-Structured Long Short-Term Memory (Tai et al., 2015) introduces memory cells and gates into tree-structured neural network.\nCNN: Convolutional Neural Network (Kalchbrenner et al., 2014) generates sentence representation by convolution and pooling operations.\nCNN-Tensor: In (Lei et al., 2015), the convolution operation is replaced by tensor product and\na dynamic programming is applied to enumerate all skippable trigrams in a sentence. Very strong results are reported. DAN: Deep Average Network (DAN) (Iyyer et al., 2015) averages all word vectors in a sentence and connects an MLP layer to the output layer. Neural Context-Sensitive Lexicon: NCSL (Teng et al., 2016) treats the sentiment score of a sentence as a weighted sum of prior scores of words in the sentence where the weights are learned by a neural network. Firstly, we evaluate our model on the MR dataset and the results are shown in Table 3. We have the following observations: First, both LR-LSTM and LR-Bi-LSTM outperforms their counterparts (81.5% vs. 77.4% and 82.1% vs. 79.3%, resp.), demonstrating the effectiveness of the linguistic regularizers. Second, LR-LSTM and LR-Bi-LSTM perform slightly better than Tree-LSTM but Tree-LSTM leverages a constituency tree structure while our model is a simple sequence model. As future work, we will apply such regularizers to tree-structured models. Last, on the MR dataset, our model is comparable to or slightly better than CNN. For fine-grained sentiment classification, we evaluate our model on the SST dataset which has five sentiment classes { very negative, negative, neutral, positive, very positive} so that we can evaluate the sentiment shifting effect of intensity words. The results are shown in Table 3. We have the following observations: First, linguistically regularized LSTM and BiLSTM are better than their counterparts. It’s worth noting that LR-Bi-LSTM (trained with just sentence-level annotation) is even comparable to Bi-LSTM trained with phrase-level annotation. That means, LR-Bi-LSTM can avoid the heavy phrase-level annotation but still obtain comparable results. Second, our models are comparable to Tree-LSTM but our models are not dependent on a parsing tree and more simple, and hence more efficient. Further, for Tree-LSTM, the model is heavily dependent on phrase-level annotation, otherwise the performance drops substantially (from 51% to 48.1%). Last, on the SST dataset, our model is better than CNN, DAN, and NCSL. We conjecture that the strong performance of CNNTensor may be due to the tensor product operation, the enumeration of all skippable trigrams, and the\n7\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\nconcatenated representations of all pooling layers for final classification.\nMethod MR SST phrase-level SST\nsentence-level RNN 77.7* 44.8# 43.2* RNTN 75.9# 45.7* 43.4# LSTM 77.4# 46.4* 45.6# Bi-LSTM 79.3# 49.1* 46.5# Tree-LSTM 80.7# 51.0* 48.1# CNN 81.5* 48.0* 46.9# CNN-Tensor - 51.2* 50.6* DAN - - 47.7* NCSL - 51.1* 47.1# LR-Bi-LSTM 82.1 - 48.6 LR-LSTM 81.5 - 48.2\nTable 3: The accuracy on MR and SST. Phraselevel means the models use phrase-level annotation for training. And sentence-level means the models only use sentence-level annotation. Results marked with * are re-printed from the references, while those with # are obtained either by our own implementation or with the same codes shared by the original authors."
    }, {
      "heading" : "5.3 The Effect of Different Regularizers",
      "text" : "In order to reveal the effect of each individual regularizer, we conduct ablation experiments. Each time, we remove a regularizer and observe how the performance varies. First of all, we conduct this experiment on the entire datasets, and then we experiment on sub-datasets that only contain negation words or intensity words.\nThe experiment results are shown in Table 4 where we can see that the non-sentiment regularizer (NSR) and sentiment regularizer (SR) play a key role3, and the negation regularizer and intensity regularizer are effective but less important than NSR and SR. This may be due to the fact that only 14% of sentences contains negation words in the test datasets, and 23% contains intensity words, and thus we further evaluate the models on two subsets, as shown in Table 5.\nThe experiments on the subsets show that: 1) With linguistic regularizers, LR-Bi-LSTM outperforms Bi-LSTM remarkably on these subsets; 2) When the negation regularizer is removed from the model, the performance drops significantly on\n3Kindly note that almost all sentences contain sentiment words, see Tab. 1.\nMethod MR SST LR-Bi-LSTM 82.1 48.6 LR-Bi-LSTM (-NSR) 80.8 46.9 LR-Bi-LSTM (-SR) 80.6 46.9 LR-Bi-LSTM (-NR) 81.2 47.6 LR-Bi-LSTM (-IR) 81.7 47.9 LR-LSTM 81.5 48.2 LR-LSTM (-NSR) 80.2 46.4 LR-LSTM (-SR) 80.2 46.6 LR-LSTM (-NR) 80.8 47.4 LR-LSTM (-IR) 81.2 47.4\nTable 4: The accuracy for LR-Bi-LSTM and LRLSTM with regularizer ablation. NSR, SR, NR and IR denotes Non-sentiment Regularizer, Sentiment Regularizer, Negation Regularizer, and Intensity Regularizer respectively.\nboth MR and SST subsets; 3) Similar observations can be found regarding the intensity regularizer.\nMethod Neg. Sub. Int. Sub. MR SST MR SST BiLSTM 72.0 39.8 83.2 48.8 LR-Bi-LSTM (-NR) 74.2 41.6 - - LR-Bi-LSTM (-IR) - - 85.2 50.0 LR-Bi-LSTM 78.5 44.4 87.1 53.2\nTable 5: The accuracy on the negation sub-dataset (Neg. Sub.) that only contains negators, and intensity sub-dataset (Int. Sub.) that only contains intensifiers."
    }, {
      "heading" : "5.4 The Effect of the Negation Regularizer",
      "text" : "To further reveal the linguistic role of negation words, we compare the predicted sentiment distributions of a phrase pair with and without a negation word. The experimental results performed on MR are shown in Fig. 1. Each dot denotes a phrase pair (for example, <interesting, not interesting>), where the x-axis denotes the positive score4 of a phrase without negators (e.g., interesting), and the y-axis indicates the positive score for the phrase with negators (e.g., not interesting). The curves in the figures show this function: [1 − y, y] = softmax(Tnw ∗ [1 − x, x]) where [1 − x, x] is a sentiment distribution on [negative, positive], x is the positive score of the phrase without negators (x-axis) and y that of the phrase with negators (y-\n4 The score is obtained from the predicted distribution, where 1 means positive and 0 means negative.\n8\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\naxis), and Tnw is the transformation matrix for the negation word nw (see Eq. 9). By looking into the\nFigure 1: The sentiment shifts with negators. Each dot< x, y > indicates that x is the sentiment score of a phrase without negator and y is that of the phrase with a negator.\ndetailed results of our model, we have the following statements:\nFirst, there is no dot at the up-right and bottomleft blocks, indicating that negators generally shift/convert very positive or very negative phrases to other polarities. Typical phrases include not very good, not too bad.\nSecond, the dots at the up-left and bottom-right respectively indicates the negation effects: changing negative to positive and positive to negative. Typical phrases include never seems hopelessly (up-left), no good scenes (bottom-right), not interesting (bottom-right), etc. There are also some positive/negative phrases shifting to neutral sentiment such as not so good, and not too bad.\nLast, the dots located at the center indicate that neutral phrases maintain neutral sentiment with negators. Typical phrases include not at home, not here, where negators typically modify nonsentiment words."
    }, {
      "heading" : "5.5 The Effect of the Intensity Regularizer",
      "text" : "To further reveal the linguistic role of intensity words, we perform experiments on the SST dataset, as illustrated in Figure 2. We show the matrix that indicates how the sentiment shifts after being modified by intensifiers. Each number in a cell (mij) indicates how many phrases are predicted with a sentiment label i but the prediction of the phrases with intensifiers changes to label j. For instance, the number 20 (m21) in the second matrix , means that there are 20 phrases predicted with a class of negative (-) but the prediction changes to very negative (- -) after being modified by intensifier “very”. Results in the first matrix show that, for intensifier “most”, there are 21/21/13/12 phrases whose sentiment is shifted after being modified by intensifiers, from negative\nFigure 2: The sentiment shifting with intensifiers. The number in cell(mij) indicates howmany phrases are predicted with sentiment label i but the prediction of phrases with intensifiers changes to label j.\nto very negative (eg. most irresponsible picture), positive to very positive (eg. most famous author), neutral to negative (eg. most plain), and neutral to positive (eg. most closely), respectively. There are also many phrases retaining the sentiment after being modified with intensifiers. Not surprisingly, for very positive/negative phrases, phrases modified by intensifiers still maintain the strong sentiment. For the left phrases, they fall into three categories: first, words modified by intensifiers are non-sentiment words, such as most of us, most part; second, intensifiers are not strong enough to shift sentiment, such as most complex (from neg. to neg.), most traditional (from pos. to pos.); third, our models fail to shift sentiment with intensifiers such as most vital, most resonant film."
    }, {
      "heading" : "6 Conclusion and Future Work",
      "text" : "We present linguistically regularized LSTMs for sentence-level sentiment classification. The proposed models address the sentient shifting effect of sentiment, negation, and intensity words. Furthermore, our models are sequence LSTMs which do not depend on a parsing tree-structure and do not require expensive phrase-level annotation. Results show that our models are able to address the linguistic role of sentiment, negation, and intensity words. To preserve the simplicity of the proposed models, we do not consider the modification scope of negation and intensity words, though we partially address this issue by applying a minimization operartor (see Eq. 11, Eq. 14) and bi-directional LSTM. As future work, we plan to apply the linguistic regularizers to tree-LSTM to address the scope issue since the parsing tree is easier to indicate the modification scope explicitly.\n9\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821\n822\n823\n824\n825\n826\n827\n828\n829\n830\n831\n832\n833\n834\n835\n836\n837\n838\n839\n840\n841\n842\n843\n844\n845\n846\n847\n848\n849\n850\n851\n852\n853\n854\n855\n856\n857\n858\n859\n860\n861\n862\n863\n864\n865\n866\n867\n868\n869\n870\n871\n872\n873\n874\n875\n876\n877\n878\n879\n880\n881\n882\n883\n884\n885\n886\n887\n888\n889\n890\n891\n892\n893\n894\n895\n896\n897\n898\n899"
    } ],
    "references" : [ {
      "title" : "How do negation and modality impact on opinions",
      "author" : [ "Farah Benamara", "Baptiste Chardon", "Yannick Mathieu", "Vladimir Popescu", "Nicholas Asher" ],
      "venue" : "In Proceedings of the Workshop on ExtraPropositional Aspects of Meaning in Computational",
      "citeRegEx" : "Benamara et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Benamara et al\\.",
      "year" : 2012
    }, {
      "title" : "Building sentiment lexicons for all major languages",
      "author" : [ "Yanqing Chen", "Steven Skiena." ],
      "venue" : "ACL (2). pages 383–389.",
      "citeRegEx" : "Chen and Skiena.,? 2014",
      "shortCiteRegEx" : "Chen and Skiena.",
      "year" : 2014
    }, {
      "title" : "Learning phrase representations using rnn encoder-decoder for statistical machine translation",
      "author" : [ "Kyunghyun Cho", "Bart Van Merriënboer", "Caglar Gulcehre", "Dzmitry Bahdanau", "Fethi Bougares", "Holger Schwenk", "Yoshua Bengio." ],
      "venue" : "arXiv preprint",
      "citeRegEx" : "Cho et al\\.,? 2014",
      "shortCiteRegEx" : "Cho et al\\.",
      "year" : 2014
    }, {
      "title" : "Empirical evaluation of gated recurrent neural networks on sequence modeling",
      "author" : [ "Junyoung Chung", "Caglar Gulcehre", "KyungHyun Cho", "Yoshua Bengio." ],
      "venue" : "arXiv preprint arXiv:1412.3555 .",
      "citeRegEx" : "Chung et al\\.,? 2014",
      "shortCiteRegEx" : "Chung et al\\.",
      "year" : 2014
    }, {
      "title" : "A statistical parsing framework for sentiment classification",
      "author" : [ "Li Dong", "FuruWei", "Shujie Liu", "Ming Zhou", "Ke Xu." ],
      "venue" : "Computational Linguistics .",
      "citeRegEx" : "Dong et al\\.,? 2015",
      "shortCiteRegEx" : "Dong et al\\.",
      "year" : 2015
    }, {
      "title" : "Adaptive multi-compositionality for recursive neural models with applications to sentiment analysis",
      "author" : [ "Li Dong", "Furu Wei", "Ming Zhou", "Ke Xu." ],
      "venue" : "AAAI. AAAI.",
      "citeRegEx" : "Dong et al\\.,? 2014",
      "shortCiteRegEx" : "Dong et al\\.",
      "year" : 2014
    }, {
      "title" : "Neural networks for negation scope detection",
      "author" : [ "Federico Fancellu", "Adam Lopez", "Bonnie Webber." ],
      "venue" : "Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers). Association",
      "citeRegEx" : "Fancellu et al\\.,? 2016",
      "shortCiteRegEx" : "Fancellu et al\\.",
      "year" : 2016
    }, {
      "title" : "Hybrid speech recognition with deep bidirectional lstm",
      "author" : [ "Alex Graves", "Navdeep Jaitly", "Abdel-rahman Mohamed." ],
      "venue" : "Automatic Speech Recognition and Understanding (ASRU), 2013 IEEE Workshop on. IEEE, pages 273–278.",
      "citeRegEx" : "Graves et al\\.,? 2013",
      "shortCiteRegEx" : "Graves et al\\.",
      "year" : 2013
    }, {
      "title" : "Long short-term memory",
      "author" : [ "Sepp Hochreiter", "Jürgen Schmidhuber." ],
      "venue" : "Neural Computation 9(8):1735–1780.",
      "citeRegEx" : "Hochreiter and Schmidhuber.,? 1997",
      "shortCiteRegEx" : "Hochreiter and Schmidhuber.",
      "year" : 1997
    }, {
      "title" : "Mining and summarizing customer reviews",
      "author" : [ "Minqing Hu", "Bing Liu." ],
      "venue" : "Proceedings of the tenth ACM SIGKDD international conference on Knowledge discovery and data mining. ACM, pages 168– 177.",
      "citeRegEx" : "Hu and Liu.,? 2004",
      "shortCiteRegEx" : "Hu and Liu.",
      "year" : 2004
    }, {
      "title" : "Deep unordered composition rivals syntactic methods for text classification",
      "author" : [ "Mohit Iyyer", "Varun Manjunatha", "Jordan Boyd-Graber", "Hal Daumé III." ],
      "venue" : "Proceedings of the Association for Computational Linguistics.",
      "citeRegEx" : "Iyyer et al\\.,? 2015",
      "shortCiteRegEx" : "Iyyer et al\\.",
      "year" : 2015
    }, {
      "title" : "The effect of negation on sentiment analysis and retrieval effectiveness",
      "author" : [ "Lifeng Jia", "Clement Yu", "Weiyi Meng." ],
      "venue" : "Proceedings of the 18th ACM conference on Information and knowledge management. ACM, pages 1827–1830.",
      "citeRegEx" : "Jia et al\\.,? 2009",
      "shortCiteRegEx" : "Jia et al\\.",
      "year" : 2009
    }, {
      "title" : "A convolutional neural network for modelling sentences",
      "author" : [ "Nal Kalchbrenner", "Edward Grefenstette", "Phil Blunsom." ],
      "venue" : "ACL. pages 655–665.",
      "citeRegEx" : "Kalchbrenner et al\\.,? 2014",
      "shortCiteRegEx" : "Kalchbrenner et al\\.",
      "year" : 2014
    }, {
      "title" : "Sentiment classification of movie reviews using contextual valence shifters",
      "author" : [ "Alistair Kennedy", "Diana Inkpen." ],
      "venue" : "Computational intelligence 22(2):110–125.",
      "citeRegEx" : "Kennedy and Inkpen.,? 2006",
      "shortCiteRegEx" : "Kennedy and Inkpen.",
      "year" : 2006
    }, {
      "title" : "Convolutional neural networks for sentence classification",
      "author" : [ "Yoon Kim." ],
      "venue" : "EMNLP. pages 1746– 1751.",
      "citeRegEx" : "Kim.,? 2014",
      "shortCiteRegEx" : "Kim.",
      "year" : 2014
    }, {
      "title" : "Representing and resolving negation for sentiment analysis",
      "author" : [ "Emanuele Lapponi", "Jonathon Read", "Lilja Øvrelid." ],
      "venue" : "2012 IEEE 12th International Conference on Data Mining Workshops. IEEE, pages 687–692.",
      "citeRegEx" : "Lapponi et al\\.,? 2012",
      "shortCiteRegEx" : "Lapponi et al\\.",
      "year" : 2012
    }, {
      "title" : "Molding cnns for text: non-linear, non-consecutive convolutions",
      "author" : [ "Tao Lei", "Regina Barzilay", "Tommi Jaakkola." ],
      "venue" : "ACL .",
      "citeRegEx" : "Lei et al\\.,? 2015",
      "shortCiteRegEx" : "Lei et al\\.",
      "year" : 2015
    }, {
      "title" : "Review sentiment scoring via a parse-and-paraphrase paradigm",
      "author" : [ "Jingjing Liu", "Stephanie Seneff." ],
      "venue" : "Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing: Volume 1-Volume 1. Association for Computational Linguis-",
      "citeRegEx" : "Liu and Seneff.,? 2009",
      "shortCiteRegEx" : "Liu and Seneff.",
      "year" : 2009
    }, {
      "title" : "Distributional semantic models for affective text analysis",
      "author" : [ "Nikolaos Malandrakis", "Alexandros Potamianos", "Elias Iosif", "Shrikanth Narayanan." ],
      "venue" : "IEEE Transactions on Audio, Speech, and Language Processing 21(11):2379–2392.",
      "citeRegEx" : "Malandrakis et al\\.,? 2013",
      "shortCiteRegEx" : "Malandrakis et al\\.",
      "year" : 2013
    }, {
      "title" : "Statistical language models based on neural networks",
      "author" : [ "Tomáš Mikolov." ],
      "venue" : "Presentation at Google, Mountain View, 2nd April .",
      "citeRegEx" : "Mikolov.,? 2012",
      "shortCiteRegEx" : "Mikolov.",
      "year" : 2012
    }, {
      "title" : "Simple negation scope resolution through deep parsing: A semantic solution to a semantic problem",
      "author" : [ "Woodley Packard", "M. Emily Bender", "Jonathon Read", "Stephan Oepen", "Rebecca Dridan." ],
      "venue" : "Proceedings of the 52nd Annual Meeting of the Associa-",
      "citeRegEx" : "Packard et al\\.,? 2014",
      "shortCiteRegEx" : "Packard et al\\.",
      "year" : 2014
    }, {
      "title" : "Seeing stars: Exploiting class relationships for sentiment categorization with respect to rating scales",
      "author" : [ "Bo Pang", "Lillian Lee." ],
      "venue" : "ACL. pages 115– 124.",
      "citeRegEx" : "Pang and Lee.,? 2005",
      "shortCiteRegEx" : "Pang and Lee.",
      "year" : 2005
    }, {
      "title" : "Opinion mining and sentiment analysis",
      "author" : [ "Bo Pang", "Lillian Lee." ],
      "venue" : "Foundations and trends in information retrieval 2(1-2):1–135.",
      "citeRegEx" : "Pang and Lee.,? 2008",
      "shortCiteRegEx" : "Pang and Lee.",
      "year" : 2008
    }, {
      "title" : "Thumbs up?: sentiment classification using machine learning techniques",
      "author" : [ "Bo Pang", "Lillian Lee", "Shivakumar Vaithyanathan." ],
      "venue" : "ACL. pages 79–86.",
      "citeRegEx" : "Pang et al\\.,? 2002",
      "shortCiteRegEx" : "Pang et al\\.",
      "year" : 2002
    }, {
      "title" : "Contextual valence shifters",
      "author" : [ "Livia Polanyi", "Annie Zaenen." ],
      "venue" : "Computing attitude and affect in text: Theory and applications, Springer, pages 1–10.",
      "citeRegEx" : "Polanyi and Zaenen.,? 2006",
      "shortCiteRegEx" : "Polanyi and Zaenen.",
      "year" : 2006
    }, {
      "title" : "Learning tag embeddings and tag-specific composition functions in recursive neural network",
      "author" : [ "Qiao Qian", "Bo Tian", "Minlie Huang", "Yang Liu", "Xuan Zhu", "Xiaoyan Zhu." ],
      "venue" : "ACL. volume 1, pages 1365–1374.",
      "citeRegEx" : "Qian et al\\.,? 2015",
      "shortCiteRegEx" : "Qian et al\\.",
      "year" : 2015
    }, {
      "title" : "Adjective intensity and sentiment analysis",
      "author" : [ "Raksha Sharma", "Mohit Gupta", "Astha Agarwal", "Pushpak Bhattacharyya." ],
      "venue" : "EMNLP2015, Lisbon, Portugal .",
      "citeRegEx" : "Sharma et al\\.,? 2015",
      "shortCiteRegEx" : "Sharma et al\\.",
      "year" : 2015
    }, {
      "title" : "Corpus-based discovery of semantic intensity scales",
      "author" : [ "Chaitanya Shivade", "Marie-Catherine de Marneffe", "Eric Folser-Lussier", "Albert Lai." ],
      "venue" : "Proceedings of NAACL-HTL .",
      "citeRegEx" : "Shivade et al\\.,? 2015",
      "shortCiteRegEx" : "Shivade et al\\.",
      "year" : 2015
    }, {
      "title" : "Semi-supervised recursive autoencoders for predicting sentiment distributions",
      "author" : [ "Richard Socher", "Jeffrey Pennington", "Eric H Huang", "Andrew Y Ng", "Christopher D Manning." ],
      "venue" : "EMNLP. pages 151– 161.",
      "citeRegEx" : "Socher et al\\.,? 2011",
      "shortCiteRegEx" : "Socher et al\\.",
      "year" : 2011
    }, {
      "title" : "Recursive deep models for semantic compositionality over a sentiment treebank",
      "author" : [ "Richard Socher", "Alex Perelygin", "Jean Y Wu", "Jason Chuang", "Christopher D Manning", "Andrew Y Ng", "Christopher Potts." ],
      "venue" : "EMNLP. pages 1631–1642.",
      "citeRegEx" : "Socher et al\\.,? 2013",
      "shortCiteRegEx" : "Socher et al\\.",
      "year" : 2013
    }, {
      "title" : "Lexicon-based methods for sentiment analysis. Computational linguistics 37(2):267–307",
      "author" : [ "Maite Taboada", "Julian Brooke", "Milan Tofiloski", "Kimberly Voll", "andManfred Stede" ],
      "venue" : null,
      "citeRegEx" : "Taboada et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Taboada et al\\.",
      "year" : 2011
    }, {
      "title" : "Improved semantic representations from tree-structured long short-term memory networks",
      "author" : [ "Kai Sheng Tai", "Richard Socher", "Christopher D Manning." ],
      "venue" : "arXiv preprint arXiv:1503.00075 .",
      "citeRegEx" : "Tai et al\\.,? 2015",
      "shortCiteRegEx" : "Tai et al\\.",
      "year" : 2015
    }, {
      "title" : "Context-sensitive lexicon features for neural sentiment analysis",
      "author" : [ "Zhiyang Teng", "Duy-Tin Vo", "Yue Zhang." ],
      "venue" : "Proceedings of the 2016 Conference on Empirical Methods in Natural Language Processing. pages 1629–1638.",
      "citeRegEx" : "Teng et al\\.,? 2016",
      "shortCiteRegEx" : "Teng et al\\.",
      "year" : 2016
    }, {
      "title" : "Thumbs up or thumbs down?: semantic orientation applied to unsupervised classification of reviews",
      "author" : [ "Peter D Turney." ],
      "venue" : "ACL. pages 417–424.",
      "citeRegEx" : "Turney.,? 2002",
      "shortCiteRegEx" : "Turney.",
      "year" : 2002
    }, {
      "title" : "Dont count, predict! an automatic approach to learning sentiment lexicons for short text",
      "author" : [ "Duy Tin Vo", "Yue Zhang." ],
      "venue" : "Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics. volume 2, pages 219–224.",
      "citeRegEx" : "Vo and Zhang.,? 2016",
      "shortCiteRegEx" : "Vo and Zhang.",
      "year" : 2016
    }, {
      "title" : "Ecnu at semeval-2016 task 7: An enhanced supervised learning method for lexicon sentiment intensity ranking",
      "author" : [ "Feixiang Wang", "Zhihua Zhang", "Man Lan." ],
      "venue" : "Proceedings of SemEval pages 491– 496.",
      "citeRegEx" : "Wang et al\\.,? 2016",
      "shortCiteRegEx" : "Wang et al\\.",
      "year" : 2016
    }, {
      "title" : "A regression approach to affective rating of chinese words from anew",
      "author" : [ "Wen-Li Wei", "Chung-Hsien Wu", "Jen-Chun Lin." ],
      "venue" : "Affective Computing and Intelligent Interaction, Springer, pages 121– 131.",
      "citeRegEx" : "Wei et al\\.,? 2011",
      "shortCiteRegEx" : "Wei et al\\.",
      "year" : 2011
    }, {
      "title" : "A survey on the role of negation in sentiment analysis",
      "author" : [ "Michael Wiegand", "Alexandra Balahur", "Benjamin Roth", "Dietrich Klakow", "Andrés Montoyo." ],
      "venue" : "Proceedings of the workshop on negation and speculation in natural language processing. Associ-",
      "citeRegEx" : "Wiegand et al\\.,? 2010",
      "shortCiteRegEx" : "Wiegand et al\\.",
      "year" : 2010
    }, {
      "title" : "Recognizing contextual polarity in phraselevel sentiment analysis",
      "author" : [ "Theresa Wilson", "Janyce Wiebe", "Paul Hoffmann." ],
      "venue" : "EMNLP. pages 347– 354.",
      "citeRegEx" : "Wilson et al\\.,? 2005",
      "shortCiteRegEx" : "Wilson et al\\.",
      "year" : 2005
    }, {
      "title" : "An empirical study on the effect of negation words on sentiment",
      "author" : [ "Xiaodan Zhu", "Hongyu Guo", "Saif Mohammad", "Svetlana Kiritchenko." ],
      "venue" : "ACL. pages 304–313.",
      "citeRegEx" : "Zhu et al\\.,? 2014",
      "shortCiteRegEx" : "Zhu et al\\.",
      "year" : 2014
    }, {
      "title" : "Long short-term memory over recursive structures",
      "author" : [ "Xiaodan Zhu", "Parinaz Sobhani", "Hongyu Guo." ],
      "venue" : "ICML. pages 1604–1612.",
      "citeRegEx" : "Zhu et al\\.,? 2015",
      "shortCiteRegEx" : "Zhu et al\\.",
      "year" : 2015
    }, {
      "title" : "Tree kernel-based negation and speculation scope detection with structured syntactic parse features",
      "author" : [ "Bowei Zou", "Guodong Zhou", "Qiaoming Zhu." ],
      "venue" : "Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing. Associa-",
      "citeRegEx" : "Zou et al\\.,? 2013",
      "shortCiteRegEx" : "Zou et al\\.",
      "year" : 2013
    } ],
    "referenceMentions" : [ {
      "referenceID" : 33,
      "context" : "There has been a variety of approaches for this purpose such as lexicon-based classification (Turney, 2002; Taboada et al., 2011), and early machine learning based methods (Pang et al.",
      "startOffset" : 93,
      "endOffset" : 129
    }, {
      "referenceID" : 30,
      "context" : "There has been a variety of approaches for this purpose such as lexicon-based classification (Turney, 2002; Taboada et al., 2011), and early machine learning based methods (Pang et al.",
      "startOffset" : 93,
      "endOffset" : 129
    }, {
      "referenceID" : 23,
      "context" : ", 2011), and early machine learning based methods (Pang et al., 2002; Pang and Lee, 2005), and recently neural network models such as convolutional neural network (CNN) (Kim, 2014; Kalchbrenner et al.",
      "startOffset" : 50,
      "endOffset" : 89
    }, {
      "referenceID" : 21,
      "context" : ", 2011), and early machine learning based methods (Pang et al., 2002; Pang and Lee, 2005), and recently neural network models such as convolutional neural network (CNN) (Kim, 2014; Kalchbrenner et al.",
      "startOffset" : 50,
      "endOffset" : 89
    }, {
      "referenceID" : 14,
      "context" : ", 2002; Pang and Lee, 2005), and recently neural network models such as convolutional neural network (CNN) (Kim, 2014; Kalchbrenner et al., 2014; Lei et al., 2015), recursive autoencoders (Socher et al.",
      "startOffset" : 107,
      "endOffset" : 163
    }, {
      "referenceID" : 12,
      "context" : ", 2002; Pang and Lee, 2005), and recently neural network models such as convolutional neural network (CNN) (Kim, 2014; Kalchbrenner et al., 2014; Lei et al., 2015), recursive autoencoders (Socher et al.",
      "startOffset" : 107,
      "endOffset" : 163
    }, {
      "referenceID" : 16,
      "context" : ", 2002; Pang and Lee, 2005), and recently neural network models such as convolutional neural network (CNN) (Kim, 2014; Kalchbrenner et al., 2014; Lei et al., 2015), recursive autoencoders (Socher et al.",
      "startOffset" : 107,
      "endOffset" : 163
    }, {
      "referenceID" : 19,
      "context" : ", 2011, 2013), Long ShortTerm Memory (LSTM) (Mikolov, 2012; Chung et al., 2014; Tai et al., 2015; Zhu et al., 2015), and many more.",
      "startOffset" : 44,
      "endOffset" : 115
    }, {
      "referenceID" : 3,
      "context" : ", 2011, 2013), Long ShortTerm Memory (LSTM) (Mikolov, 2012; Chung et al., 2014; Tai et al., 2015; Zhu et al., 2015), and many more.",
      "startOffset" : 44,
      "endOffset" : 115
    }, {
      "referenceID" : 31,
      "context" : ", 2011, 2013), Long ShortTerm Memory (LSTM) (Mikolov, 2012; Chung et al., 2014; Tai et al., 2015; Zhu et al., 2015), and many more.",
      "startOffset" : 44,
      "endOffset" : 115
    }, {
      "referenceID" : 40,
      "context" : ", 2011, 2013), Long ShortTerm Memory (LSTM) (Mikolov, 2012; Chung et al., 2014; Tai et al., 2015; Zhu et al., 2015), and many more.",
      "startOffset" : 44,
      "endOffset" : 115
    }, {
      "referenceID" : 31,
      "context" : "First, tree-structured models such as recursive autoencoders and Tree-LSTM (Tai et al., 2015; Zhu et al., 2015), depend on parsing tree structures and expensive phrase-level annotation, whose performance drops substantially when only trained with sentence-level annotation.",
      "startOffset" : 75,
      "endOffset" : 111
    }, {
      "referenceID" : 40,
      "context" : "First, tree-structured models such as recursive autoencoders and Tree-LSTM (Tai et al., 2015; Zhu et al., 2015), depend on parsing tree structures and expensive phrase-level annotation, whose performance drops substantially when only trained with sentence-level annotation.",
      "startOffset" : 75,
      "endOffset" : 111
    }, {
      "referenceID" : 39,
      "context" : "Negators are typical sentiment shifters (Zhu et al., 2014), which constantly change the polarity of sentiment expression.",
      "startOffset" : 40,
      "endOffset" : 58
    }, {
      "referenceID" : 5,
      "context" : "The most noticeable models may be the recursive autoencoder neural network which builds the representation of a sentence from subphrases recursively (Socher et al., 2011, 2013; Dong et al., 2014; Qian et al., 2015).",
      "startOffset" : 149,
      "endOffset" : 214
    }, {
      "referenceID" : 25,
      "context" : "The most noticeable models may be the recursive autoencoder neural network which builds the representation of a sentence from subphrases recursively (Socher et al., 2011, 2013; Dong et al., 2014; Qian et al., 2015).",
      "startOffset" : 149,
      "endOffset" : 214
    }, {
      "referenceID" : 14,
      "context" : "Sequence models, for instance, convolutional neural network (CNN), do not require tree-structured data, which are widely adopted for sentiment classification (Kim, 2014; Kalchbrenner et al., 2014; Lei et al., 2015).",
      "startOffset" : 158,
      "endOffset" : 214
    }, {
      "referenceID" : 12,
      "context" : "Sequence models, for instance, convolutional neural network (CNN), do not require tree-structured data, which are widely adopted for sentiment classification (Kim, 2014; Kalchbrenner et al., 2014; Lei et al., 2015).",
      "startOffset" : 158,
      "endOffset" : 214
    }, {
      "referenceID" : 16,
      "context" : "Sequence models, for instance, convolutional neural network (CNN), do not require tree-structured data, which are widely adopted for sentiment classification (Kim, 2014; Kalchbrenner et al., 2014; Lei et al., 2015).",
      "startOffset" : 158,
      "endOffset" : 214
    }, {
      "referenceID" : 8,
      "context" : "Long short-term memory models are also common for learning sentence-level representation due to its capability of modeling the prefix or suffix context (Hochreiter and Schmidhuber, 1997).",
      "startOffset" : 152,
      "endOffset" : 186
    }, {
      "referenceID" : 40,
      "context" : "LSTM can be commonly applied to sequential data but also tree-structured data (Zhu et al., 2015; Tai et al., 2015).",
      "startOffset" : 78,
      "endOffset" : 114
    }, {
      "referenceID" : 31,
      "context" : "LSTM can be commonly applied to sequential data but also tree-structured data (Zhu et al., 2015; Tai et al., 2015).",
      "startOffset" : 78,
      "endOffset" : 114
    }, {
      "referenceID" : 9,
      "context" : "Sentiment lexicon (Hu and Liu, 2004; Wilson et al., 2005) usually defines prior polarity of a lexical entry, and is valuable for lexicon-based models (Turney, 2002; Taboada et al.",
      "startOffset" : 18,
      "endOffset" : 57
    }, {
      "referenceID" : 38,
      "context" : "Sentiment lexicon (Hu and Liu, 2004; Wilson et al., 2005) usually defines prior polarity of a lexical entry, and is valuable for lexicon-based models (Turney, 2002; Taboada et al.",
      "startOffset" : 18,
      "endOffset" : 57
    }, {
      "referenceID" : 33,
      "context" : ", 2005) usually defines prior polarity of a lexical entry, and is valuable for lexicon-based models (Turney, 2002; Taboada et al., 2011), and machine learning approaches (Pang and Lee, 2008).",
      "startOffset" : 100,
      "endOffset" : 136
    }, {
      "referenceID" : 30,
      "context" : ", 2005) usually defines prior polarity of a lexical entry, and is valuable for lexicon-based models (Turney, 2002; Taboada et al., 2011), and machine learning approaches (Pang and Lee, 2008).",
      "startOffset" : 100,
      "endOffset" : 136
    }, {
      "referenceID" : 22,
      "context" : ", 2011), and machine learning approaches (Pang and Lee, 2008).",
      "startOffset" : 41,
      "endOffset" : 61
    }, {
      "referenceID" : 34,
      "context" : "There are recent works for automatic construction of sentiment lexicons from social data (Vo and Zhang, 2016) and for multiple languages (Chen and Skiena, 2014).",
      "startOffset" : 89,
      "endOffset" : 109
    }, {
      "referenceID" : 1,
      "context" : "There are recent works for automatic construction of sentiment lexicons from social data (Vo and Zhang, 2016) and for multiple languages (Chen and Skiena, 2014).",
      "startOffset" : 137,
      "endOffset" : 160
    }, {
      "referenceID" : 32,
      "context" : "A noticeable work that ultilizes sentiment lexicons can be seen in (Teng et al., 2016) which treats the sentiment score of a sentence as a weighted sum of prior sentiment scores of negation words and sentiment words, where the weights are learned by a neural network.",
      "startOffset" : 67,
      "endOffset" : 86
    }, {
      "referenceID" : 24,
      "context" : "Some early negation models adopt the reversing assumption that a negator reverses the sign of the sentiment value of the modified text (Polanyi and Zaenen, 2006; Kennedy and Inkpen, 2006).",
      "startOffset" : 135,
      "endOffset" : 187
    }, {
      "referenceID" : 13,
      "context" : "Some early negation models adopt the reversing assumption that a negator reverses the sign of the sentiment value of the modified text (Polanyi and Zaenen, 2006; Kennedy and Inkpen, 2006).",
      "startOffset" : 135,
      "endOffset" : 187
    }, {
      "referenceID" : 30,
      "context" : "The shifting hyothesis assumes that negators change the sentiment values by a constant amount (Taboada et al., 2011; Liu and Seneff, 2009).",
      "startOffset" : 94,
      "endOffset" : 138
    }, {
      "referenceID" : 17,
      "context" : "The shifting hyothesis assumes that negators change the sentiment values by a constant amount (Taboada et al., 2011; Liu and Seneff, 2009).",
      "startOffset" : 94,
      "endOffset" : 138
    }, {
      "referenceID" : 39,
      "context" : "Since each negator can affect the modified text in different ways, the constant amount can be extended to be negatorspecific (Zhu et al., 2014), and further, the effect of negators could also depend on the syntax and semantics of the modified text (Zhu et al.",
      "startOffset" : 125,
      "endOffset" : 143
    }, {
      "referenceID" : 39,
      "context" : ", 2014), and further, the effect of negators could also depend on the syntax and semantics of the modified text (Zhu et al., 2014).",
      "startOffset" : 112,
      "endOffset" : 130
    }, {
      "referenceID" : 11,
      "context" : "Other approaches to negation modeling can be seen in (Jia et al., 2009; Wiegand et al., 2010; Benamara et al., 2012; Lapponi et al., 2012).",
      "startOffset" : 53,
      "endOffset" : 138
    }, {
      "referenceID" : 37,
      "context" : "Other approaches to negation modeling can be seen in (Jia et al., 2009; Wiegand et al., 2010; Benamara et al., 2012; Lapponi et al., 2012).",
      "startOffset" : 53,
      "endOffset" : 138
    }, {
      "referenceID" : 0,
      "context" : "Other approaches to negation modeling can be seen in (Jia et al., 2009; Wiegand et al., 2010; Benamara et al., 2012; Lapponi et al., 2012).",
      "startOffset" : 53,
      "endOffset" : 138
    }, {
      "referenceID" : 15,
      "context" : "Other approaches to negation modeling can be seen in (Jia et al., 2009; Wiegand et al., 2010; Benamara et al., 2012; Lapponi et al., 2012).",
      "startOffset" : 53,
      "endOffset" : 138
    }, {
      "referenceID" : 36,
      "context" : "In (Wei et al., 2011) the authors propose a linear regression model to predict the valence value for content words.",
      "startOffset" : 3,
      "endOffset" : 21
    }, {
      "referenceID" : 18,
      "context" : "In (Malandrakis et al., 2013), a kernel-based model is proposed to combine semantic information for predicting sentiment score.",
      "startOffset" : 3,
      "endOffset" : 29
    }, {
      "referenceID" : 35,
      "context" : "In the SemEval-2016 task 7 subtask A, a learningto-rank model with a pair-wise strategy is proposed to predict sentiment intensity scores (Wang et al., 2016).",
      "startOffset" : 138,
      "endOffset" : 157
    }, {
      "referenceID" : 27,
      "context" : "large, huge, gigantic) (Shivade et al., 2015).",
      "startOffset" : 23,
      "endOffset" : 45
    }, {
      "referenceID" : 4,
      "context" : "In (Dong et al., 2015), a sentiment parser is proposed, and the authors studied how sentiment changes when a phrase is modified by negators or intensifiers.",
      "startOffset" : 3,
      "endOffset" : 22
    }, {
      "referenceID" : 8,
      "context" : "For more details about LSTM, we refer readers to (Hochreiter and Schmidhuber, 1997).",
      "startOffset" : 49,
      "endOffset" : 83
    }, {
      "referenceID" : 7,
      "context" : "Bidirectional LSTM (Graves et al., 2013) exploited two parallel passes (forward and backward) and concatenated hidden states of the two LSTMs as the representation of each position.",
      "startOffset" : 19,
      "endOffset" : 40
    }, {
      "referenceID" : 41,
      "context" : "Negation scope resolution is another complex problem which has been extensively studied (Zou et al., 2013; Packard et al., 2014; Fancellu et al., 2016), which is beyond the scope of this work.",
      "startOffset" : 88,
      "endOffset" : 151
    }, {
      "referenceID" : 20,
      "context" : "Negation scope resolution is another complex problem which has been extensively studied (Zou et al., 2013; Packard et al., 2014; Fancellu et al., 2016), which is beyond the scope of this work.",
      "startOffset" : 88,
      "endOffset" : 151
    }, {
      "referenceID" : 6,
      "context" : "Negation scope resolution is another complex problem which has been extensively studied (Zou et al., 2013; Packard et al., 2014; Fancellu et al., 2016), which is beyond the scope of this work.",
      "startOffset" : 88,
      "endOffset" : 151
    }, {
      "referenceID" : 39,
      "context" : "Such negator-specific transformation is in accordance with the finding that each negator has its individual negation effect (Zhu et al., 2014).",
      "startOffset" : 124,
      "endOffset" : 142
    }, {
      "referenceID" : 41,
      "context" : "To preserve the simplicity of our proposals, we do not consider the modification span of negation and intensity words, which is a quite challenging problem in the NLP community (Zou et al., 2013; Packard et al., 2014; Fancellu et al., 2016).",
      "startOffset" : 177,
      "endOffset" : 240
    }, {
      "referenceID" : 20,
      "context" : "To preserve the simplicity of our proposals, we do not consider the modification span of negation and intensity words, which is a quite challenging problem in the NLP community (Zou et al., 2013; Packard et al., 2014; Fancellu et al., 2016).",
      "startOffset" : 177,
      "endOffset" : 240
    }, {
      "referenceID" : 6,
      "context" : "To preserve the simplicity of our proposals, we do not consider the modification span of negation and intensity words, which is a quite challenging problem in the NLP community (Zou et al., 2013; Packard et al., 2014; Fancellu et al., 2016).",
      "startOffset" : 177,
      "endOffset" : 240
    }, {
      "referenceID" : 21,
      "context" : "1 Dataset and Sentiment Lexicon Two datasets are used for evaluating the proposed models: Movie Review (MR) (Pang and Lee, 2005) where each sentence is annotated with two classes as negative, positive and Stanford Sentiment Treebank (SST) (Socher et al.",
      "startOffset" : 108,
      "endOffset" : 128
    }, {
      "referenceID" : 29,
      "context" : "1 Dataset and Sentiment Lexicon Two datasets are used for evaluating the proposed models: Movie Review (MR) (Pang and Lee, 2005) where each sentence is annotated with two classes as negative, positive and Stanford Sentiment Treebank (SST) (Socher et al., 2013) with five classes { very negative, negative, neutral, positive, very positive}.",
      "startOffset" : 239,
      "endOffset" : 260
    }, {
      "referenceID" : 38,
      "context" : "The first part comes fromMPQA (Wilson et al., 2005), which contains 5, 153 sentiment words, each with polarity rating.",
      "startOffset" : 30,
      "endOffset" : 51
    }, {
      "referenceID" : 28,
      "context" : "2 Overall Comparison We include several baselines, as listed below: RNN/RNTN: Recursive Neural Network over parsing trees, proposed by (Socher et al., 2011) and Recursive Tensor Neural Network (Socher et al.",
      "startOffset" : 135,
      "endOffset" : 156
    }, {
      "referenceID" : 29,
      "context" : ", 2011) and Recursive Tensor Neural Network (Socher et al., 2013) employs tensors to model correlations between different dimensions of child nodes’ vectors.",
      "startOffset" : 44,
      "endOffset" : 65
    }, {
      "referenceID" : 2,
      "context" : "LSTM/Bi-LSTM: Long Short-Term Memory (Cho et al., 2014) and the bidirectional variant as introduced previously.",
      "startOffset" : 37,
      "endOffset" : 55
    }, {
      "referenceID" : 31,
      "context" : "Tree-LSTM: Tree-Structured Long Short-Term Memory (Tai et al., 2015) introduces memory cells and gates into tree-structured neural network.",
      "startOffset" : 50,
      "endOffset" : 68
    }, {
      "referenceID" : 12,
      "context" : "CNN: Convolutional Neural Network (Kalchbrenner et al., 2014) generates sentence representation by convolution and pooling operations.",
      "startOffset" : 34,
      "endOffset" : 61
    }, {
      "referenceID" : 16,
      "context" : "CNN-Tensor: In (Lei et al., 2015), the convolution operation is replaced by tensor product and a dynamic programming is applied to enumerate all skippable trigrams in a sentence.",
      "startOffset" : 15,
      "endOffset" : 33
    }, {
      "referenceID" : 10,
      "context" : "DAN: Deep Average Network (DAN) (Iyyer et al., 2015) averages all word vectors in a sentence and connects an MLP layer to the output layer.",
      "startOffset" : 32,
      "endOffset" : 52
    }, {
      "referenceID" : 32,
      "context" : "Neural Context-Sensitive Lexicon: NCSL (Teng et al., 2016) treats the sentiment score of a sentence as a weighted sum of prior scores of words in the sentence where the weights are learned by a neural network.",
      "startOffset" : 39,
      "endOffset" : 58
    } ],
    "year" : 2017,
    "abstractText" : "This paper deals with sentence-level sentiment classification. Though a variety of neural network models have been proposed recently, however, previous models either depend on expensive phrase-level annotation, most of which has remarkably degraded performance when trained with only sentence-level annotation; or do not fully employ linguistic resources (e.g., sentiment lexicons, negation words, intensity words). In this paper, we propose simple models trained with sentence-level annotation, but also attempt to model the linguistic role of sentiment lexicons, negation words, and intensity words. Results show that our models are able to capture the linguistic role of sentiment words, negation words, and intensity words in sentiment expression.",
    "creator" : "LaTeX with hyperref package"
  }
}