{
  "name" : "0912.5533.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Oriented Straight Line Segment Algebra: Qualitative Spatial Reasoning about Oriented Objects",
    "authors" : [ "Reinhard Moratz", "Till Mossakowski" ],
    "emails" : [ "moratz@spatial.maine.edu", "luecke@informatik.uni-bremen.de" ],
    "sections" : [ {
      "heading" : null,
      "text" : "In contrast to the points that are normally used, dipoles are extended and have an intrinsic direction. Both features are important properties of natural objects. This allows for a straightforward representation of prototypical reasoning tasks for spatial agents. As an example, we show how to generate survey knowledge from local observations in a street network. The example illustrates the fast constraint-based reasoning capabilities of the dipole calculus. We integrate our results into two reasoning tools which are publicly available.\nKeywords: Qualitative Spatial Reasoning, Relation Algebra, Affine Geometry\nar X\niv :0\n91 2.\n55 33"
    }, {
      "heading" : "1 Introduction",
      "text" : "Qualitative Reasoning about space abstracts from the physical world and enables computers to make predictions about spatial relations, even when precise quantitative information is not available [1]. A qualitative representation provides mechanisms which characterize the essential properties of objects or configurations. In contrast, a quantitative representation establishes a measure in relation to a unit of measurement which must be generally available [2]. The constant and general availability of common measures is now self-evident. However, one needs only recall the history of length measurement technologies to see that the more local relative measures, which are represented qualitatively1, can be managed by biological/epigenetic cognitive systems much more easily than absolute quantitative representations.\nQualitative spatial calculi usually deal with elementary objects (e.g. positions, directions, regions) and qualitative relations between them (e.g. ”adjacent”, ”to the left of”, ”included in”). This is the reason why qualitative descriptions are quite natural for people. The two main trends in Qualitative Spatial Reasoning (QSR) are topological reasoning about regions [3, 4, 5, 6, 7] and positional (e.g. direction and distance) reasoning about point configurations [8, 9, 10, 11, 12, 13, 14]. Positions can refer to a global reference system, e.g. cardinal directions, or just to local reference systems, e.g. egocentric views. Positional calculi can be related to the results of Psycholinguistic research [15] in the field of reference systems. In Psycholinguistics, local reference systems are divided into two modalities: intrinsic reference systems and extrinsic reference systems. Then, the three resulting options for giving a linguistic description of the spatial arrangements of objects are: intrinsic, extrinsic, and absolute (i.e. global) reference systems [16]2. Corresponding QSR calculi can be found in Psycholinguistics for all three types of reference systems. An intrinsic reference system employs an oriented physical object as the origin of a reference system (relatum). The orientation of the physical object then serves as a reference direction for the reference system. For instance, an intrinsic reference system is used in the calculus of oriented line segments (see Fig. 1) which is the main topic of this paper. Another calculus corresponding to intrinsic reference systems is the OPRA calculus [17]. In the OPRA calculus, oriented points are the basic entities (see Fig. 5).\nExtrinsic reference systems are closely related to intrinsic reference systems. Both reference system options share the feature of focusing on the local context. The difference is that the extrinsic reference system superimposes the view direction from an external observer as reference direction to the relatum of the reference system. A typical example for a QSR calculus corresponding to an extrinsic reference system is Freksa’s double cross calculus [18]. In the double cross calculus, two points span a reference system to localize a third point. The first point then projects a view towards the second point which generates the\n1Compare for example the qualitative expression ”one piece of material is longer than another” with the quantitative expression ”this thing is two meters long”\n2In [16], extrinsic references are called relative references.\nreference direction. Since intrinsic and extrinsic references are closely related in the rest of the paper, we sometimes refer to QSR calculi which use either intrinsic or extrinsic reference systems as relative position QSR calculi. Then, the two terms local reference systems and relative reference systems refer to the same concept. An interesting special case refers to the representation of a relative orientation without the concept of distance. These relative orientations can be viewed as decoupled from anchor points. Then there is no means for distinguishing between different point locations. The great advantage is that much more efficient reasoning mechanisms become available. The work by Isli and Cohn [19] consists of a ternary calculus for reasoning about such pure orientations. In contrast to relative position calculi, their algebra has a tractable subset containing the base relations.\nAbsolute (or global) directions can relate directional knowledge from distant places to each other. Cardinal directions as an example can be registered with a compass and compared over a large distance. And for that reason Frank’s cardinal direction calculus corresponds to such an absolute reference system [9], [20]. There is a variant of a cardinal direction calculus, which has a flexible granularity, the Star Calculus [21].\nIn the previous paragraphs, we discussed the representation of spatial knowledge. Another important aspect are the reasoning mechanisms which are employed to make use of the represented initial knowledge to infer indirect knowledge. In Qualitative Spatial Reasoning two main reasoning modes are used: Conceptual neighbourhood-based reasoning, and constraint-based reasoning about (static) spatial configurations. Conceptual neighborhood-based reasoning describes whether two spatial configurations of objects can be transformed into each other by small changes [22]. The conceptual neighborhood of a qualitative spatial relation which holds for a spatial arrangement is the set of relations into which a relation can be changed with minimal transformations, e.g. by continuous deformation. Such a transformation can be a movement of one object in the configuration in a short period of time. At the discrete level of concepts, the neighborhood corresponds to continuity on the geometric or physical level of description: continuous processes map onto identical or neighboring classes of descriptions [23]. Spatial conceptual neighborhoods are very natural perceptual and cognitive entities and other neighborhood structures can be derived from spatial neighborhoods, e.g. temporal neighborhoods. The movement of an agent can then be modeled qualitatively as a sequence of neighboring spatial relations which hold for adjacent time intervals3. Based on this qualitative representation of trajectories, neighborhood-based spatial reasoning can for example be used as a simple, abstract model of the navigation of a spatial agent4.\nIn constraint-based reasoning about spatial configurations, typically a partial initial knowledge of a scene is represented in terms of qualitative constraints be-\n3This was the reasoning used in the first investigation of dipole relations by Schlieder [24] 4for an application of neighbourhood based reasoning of spatial agents, we refer the reader\nto the simulation model SAILAWAY [25]\ntween spatial objects. Implicit knowledge about spatial relations is then derived by constraint propagation5. Previous research has found that the mathematical notion of a relation algebra and related notions are well-suited for this kind of reasoning. In many cases, relation algebra-based reasoning only provides approximate results [26] and the constraint consistency problem for relative position calculi is NP-hard [27]. Hence we use constraint reasoning with polynomial time algorithms as an approximation of an intractable problem. The technical details of constraint reasoning are explained in Section 2.3.\nIn point-based reasoning, all objects are mapped onto the plane. The centers of projected objects can be used as point-like representation of the objects. By contrast, Schlieder’s line segment calculus [24] uses more complex basic entities. Thus, it is based on extended objects which are represented as oriented straight line segments (see Fig. 1). These more complex basic entities capture important features of natural objects:\n• Natural Objects are extended.\n• Natural Objects often have an intrinsic direction.\nOriented straight line segments (which were called dipoles by Moratz et al. [28]) are the simplest geometric objects presenting these features. Dipoles may be specified by their start and end points.\nUsing dipoles as basic blocks, more complex objects can be constructed (e.g. polylines, polygons) in a straightforward manner. Therefore, dipoles can be used as the basic units in numerous applications. To give an example, line segments are central to edge-based image segmentation and grouping in computer vision. In addition, GIS systems often have line segments as basic entities [29]. Polylines are particularly interesting for representing paths in cognitive robotics [30] and can serve as the geometric basis of a mobile robot when autonomously mapping its working environment [31].\nThe next sections of this paper present a detailed and technical description of dipole calculi. In Section 2 we introduce the relations of the dipole calculi\n5For an application of constraint-based reasoning for spatial agents, we refer the reader to the AIBO robot example in [14]\nand revisit the theory of relation algebras and non-associate algebras underlying qualitative spatial reasoning. Furthermore, we investigate quotient of calculi on a general level as well as for the dipole calculi. Section 3 provides a condensed semantics for the dipole calculus. A condensed semantics, as we name it, provides spatial domain knowledge to the calculus in the form of an abstract symbolic model of a specific fragment of the spatial domain. In this model, possible configurations of very few of the basic spatial entities of a calculus are enumerated. In our case, we use orbits in the affine group GA(R2). This provides a useful abstraction for reasoning about qualitatively different configurations in Euclidean space. We use affine geometry at a rather elementary level and appeal to pictures instead of complete analytic arguments, whenever it is easy to fill in the details – however, at key points in the argument, careful analytic treatments are provided. Further, we calculate the composition tables for the dipole calculi using the condensed semantics and we investigate properties of the composition. In Section 4 we answer the question whether the standard constraint resoning method algebraic closure decides consistency for the dipole calculi. After the presentation of the technical details of dipole calculi and some of their properties, a sample application of dipole calculi using a spatial reasoning toolbox is presented in Section 5. The example uses the reasoning capabilities of a dipole calculus based on constraint reasoning. Our paper ends with a summary and conclusion and pointers to future work."
    }, {
      "heading" : "2 Representation of Dipole Relations and Rela-",
      "text" : "tion Algebras\nIn this section, we first present a set of spatial relations between dipoles, then variants of this set of spatial relations. The final subsection shows mathematical structures for constraint reasoning about dipole relations."
    }, {
      "heading" : "2.1 Basic Representation of Dipole Relations",
      "text" : "The basic entities we use are dipoles, i.e. oriented line segments formed by a pair of two points, a start point and an end point. Dipoles are denoted by A,B,C, . . ., start points by sA and end points by eA, respectively (see Fig. 1). These dipoles are used for representing spatial objects with an intrinsic orientation. Given a set of dipoles, it is possible to specify many different relations of different arity, e.g. depending on the length of dipoles, on the angle between different dipoles, or on the dimension and nature of the underlying space. When examining different relations, the goal is to obtain a set of jointly exhaustive and pairwise disjoint atomic or base relations, such that exactly one relation holds between any two dipoles. The elements of the powerset of the base relations are called general relations. These are used to express uncertainty about the relative position of dipoles. If these relations form an algebra which fulfills certain requirements, it is possible to apply standard constraint-based reasoning mechanisms that\nwere originally developed for temporal reasoning [32] and that have also proved valuable for spatial reasoning.\nSo as to enable efficient reasoning, an attempt should be made to keep the number of different base relations relatively small. For this reason, we will restrict ourselves to using two-dimensional continuous space for now, in particular R2, and distinguish the location and orientation of different dipoles only according to a small set of seven different dipole-point relations. We distinguish between whether a point lies to the left, to the right, or at one of five qualitatively different locations on the straight line that passes through the corresponding dipole 6. The corresponding regions are shown on Fig. 2. A corresponding set of relations between three points was proposed by Ligozat [33] under the name flip-flop calculus and later extended to the LR calculus [34]7.\nThen these dipole-point relations describe cases when the point is: to the left of the dipole (l); to the right of the dipole (r); straight behind the dipole (b); at the start point of the dipole (s); inside the dipole (i); at the end of the dipole (e); or straight in front of the dipole (f). For example, in Fig. 1, sB lies to the left of A, expressed as A l sB . Using these seven possible relations between a dipole and a point, the relations between two dipoles may be specified according to the following four relationships:\nA R1 sB ∧A R2 eB ∧B R3 sA ∧B R4 eA,\nwhere Ri ∈ {l, r,b, s, i, e, f} with 1 ≤ i ≤ 4. Theoretically, this gives us 2401 relations, out of which 72 relations are geometrically possible, see Prop. 47 below. They are listed on Fig. 3.\nWe introduce an operator that constructs a relation between two dipoles out of four dipole-point-relations:\n6In his introduction of a set of qualitative spatial relations between oriented line segments, Schlieder [24] mainly focused on configurations in which no more than two end or start points were on the same straight line (e.g. all points were in general position). However, in many domains, we may wish to represent spatial arrangements in which more than two start or end points of dipoles are on a straight line.\n7The LR calculus also features the relations dou and tri for both reference points or all points being equal, respectively. These cases are not possible for dipoles, since the start and end points cannot coincide by definition.\nDefinition 1. The operator % takes the four LR relations between the start and end points of two dipoles and constructs a relation between dipoles. It is defined as the textual concatenation: %(R1,R2,R3,R4) = R1R2R3R4. By τi with 1 ≤ i ≤ 4, we denote the projections to components of the relations between dipoles, where the identities %(τ1R, τ2R, τ3R, τ4R) = R and τi ◦ %(R1,R2,R3,R4) = Ri hold.\nThe relations that have been introduced above in an informal way can also be defined in an algebraic way. Every dipole D on the plane R2 is an ordered pair of two points sD and eD, each of them being represented by its Cartesian coordinates x and y, with x, y ∈ R and sD 6= eD.\nD = (sD, eD) , sD = ((sD)x, (sD)y)\nThe basic relations are then described by equations with the coordinates as variables. The set of solutions for a system of equations describes all the possible coordinates for these points. One first such specification was presented in Moratz et. al. [28]."
    }, {
      "heading" : "2.2 Several Versions of Sets of Dipole Base Relations",
      "text" : "It is an unrealistic goal to provide a single set of qualitative base relations which is suitable for all possible contexts. In general, the desired granularity of a representation framework depends on the specific application [35]. A coarse granularity only needs a small set of base relations. Finer granularity can lead to a large number of base relations. If it is desired to apply a spatial calculus to a problem, it is therefore advantageous when a choice can be made between several versions of sets of base relations. Then a calculus may be selected which only has the necessary number of base relations and thus has less representation complexity but is fine-grained enough to solve the particular spatial reasoning problem. Focussing on the smallest number of base relations also fits better with the principle of a vocabulary of concepts which is compatible with linguistic principles [15, 14]. For this purpose, several versions of sets of dipole base relations can be constructed based on the base relation set of DRAf .\nIn their paper on customizing spatial and temporal calculi, Renz and Schmid [36] investigated different methods for deriving variants of a given calculus that have better-suited granularity for certain tasks. In the first variant, unions of base relations or so-called macro relations were used as base relations. In the second variant, only a subset of base relations was used as a new set of base relations. In his pioneering work on dipole relations, Schlieder [24] introduced a set of base relations in which no more than two start or end points were on the same straight line. As a result, only a subset of the DRAf base relations is used, which corresponds to Renz’ and Schmid’s second variant of methods for deriving new base relation sets for qualitative calculi. We refer to a calculus based on these base relations as DRAlr (where lr stands for left/right). The following base relations are part of DRAlr : rrrr, rrll, llrr, llll, rrrl, rrlr, rlrr, rllr, rlll, lrrr, lrrl, lrll, llrl, lllr.\nMoratz et al. [28] introduced an extension of DRAlr which adds relations for representing polygons and polylines. In this extension, two start or end points can share an identical location. While in this calculus, three points at different locations cannot belong to the same straight line. This subset of DRAf was named DRAc (c refers to coarse, f refers to fine). The set of base relations of DRAc extends the base relations of DRAlr with the following relations: ells, errs, lere, rele, slsr, srsl, lsel, rser, sese, eses.\nAnother method for deriving a new set of base relations from an existing set merges unions of base relations to new base relations. At a symbolic level, sets of base relations are used to form new base relations. In the context of DRAf , this is done as shown in Fig. 4 (the meaning of the names of the new base relations is explained in the following paragraphs). DRAop is the name of the calculus which has the set of base relations listed\nin Fig. 4. In [17], a calculus OPRA1 which is isomorphic8 to DRAop is defined in a complementary geometric way. The transition from oriented line segments with well-defined lengths to line segments with infinitely small lengths is the core idea of this geometric model. In this conceptualization, the length of objects no longer has any significance. Thus, only the direction of the objects is modeled [17]. These objects can then be conceptualized as oriented points. An o-point, our term for an oriented point, is specified as a pair of a point with a direction in the 2D-plane. Then the ”op” in the symbol DRAop stands for oriented points. A single o-point induces the sectors depicted in Fig. 5. “Front” and “Back” are linear sectors. “Left” and “Right” are half-planes. The position of the point itself is denoted as “Same”. A qualitative spatial relative position relation between two o-points is represented by the sector in which the second o-point lies in relation to the first one and by the sector in which the first opoint lies in relation to the second one. For the general case of two points having different positions, we use the concatenated string of both sector names as the relation symbol. Then the configuration shown in Fig. 6 is expressed by the relation A RIGHTleft B. If both points share the same position, the relation symbol starts with the word “Same” and the second substring denotes the direction of the second o-point relative to the first one as shown in Fig. 7.\n8Since we have not introduced operations on QSR calculi yet, we explain the details of the correspondence between DRAop and OPRA1 later in our paper, see Prop. 21.\nAltogether we obtain 20 different atomic relations (four times four general relations plus four with the oriented points at the same positions). The relation SAMEfront is the identity relation. DRAop has fewer base relations and therefore is more compact than DRAf . Focussing on a smaller set of base relations in this case also fits better with the principle of using a vocabulary of concepts which is compatible with linguistic principles [15, 14]. For this reason, many DRAop base relations have simple corresponding linguistic expressions. For example, the qualitative spatial configuration represented as A LEFTfront B can be translated into the natural language expression ”B is left of A and A is in front of B”. A and B in this example would be oriented objects with an intrinsic front like two cars A and B in a parking lot. However, in general, the correspondence between QSR expressions and their linguistic counterparts is only an approximation [15, 14].\nThe two methods for deriving new sets of base relations which we applied above reduce the number of base relations. Conversely, other methods extend the number of base relations. For example, Dylla and Moratz [37] have observed that DRAf may not be sufficient for robot navigation tasks, because the dipole configurations that are pooled in certain base relations are too diverse. Thus, the representation has been extended with additional orientation knowledge and a more fine-grained DRAfp calculus with additional orientation distinctions has been derived. It has slightly more base relations.\nThe large configuration space for the rrrr relation is visualized in Fig. 8. The other analogous relations which are extremely coarse are llrr, rrll and llll. In many applications, this unwanted coarseness of four relations can lead to problems9. Therefore, we introduce an additional qualitative feature by considering the angle spanned by the two dipoles. This gives us an important additional distinguishing feature with four distinctive values. These qualitative distinctions are parallelism (P) or anti-parallelism (A) and mathematically positive and negative angles between A and B, leading to three refining relations for each of the four above-mentioned relations (Fig. 9).\nWe call this algebra DRAfp as it is an extension of the fine-grained relation algebra DRAf with additional distinguishing features due to “parallelism”. For the other relations, a ’+’ or ’−’, ’P’ or ’A’ respectively, is already determined by the original base relation and does not have to be mentioned explicitly. These base relations then have the same relation symbol as in DRAf .\nThe introduction of parallelism into dipole calculi not only has benefits in certain applications. The algebraic features also benefit from this extension\n9An investigation by Dylla and Moratz into the first cognitive robotics applications of dipole relations integrated in situation calculus [37] showed that the coarseness of DRAf compared to DRAfp would indeed lead to rather meandering paths for a spatial agent.\n(see Sect. 3.7). For analogous reasons, a derivation of DRAfp yields an oriented point calculus which explicitly contains the feature of parallelism, which is isomorphic to the OPRA∗1 calculus[38]. This calculus DRAopp (opp stands for oriented points and parallelism) has the same base relations as DRAop with the exception of the relations RIGHTright, RIGHTleft, LEFTleft, and LEFTright. The transformation from DRAfp to DRAopp is shown in Fig. 10.\nAgain, the mathematical properties of the oriented point calculus can be derived from the corresponding dipole calculus, see Corollary 55."
    }, {
      "heading" : "2.3 Relation Algebras for Spatial Reasoning",
      "text" : "Standard methods developed for finite domains generally do not apply to constraint reasoning over infinite domains. The theory of relation algebras [39, 40] allows for a purely symbolic treatment of constraint satisfaction problems involving relations over infinite domains. The corresponding constraint reasoning techniques were originally introduced for temporal reasoning [32] and later proved to be valuable for spatial reasoning [6, 19]. The central data for a calculus is given by:\n• a list of (symbolic names for) base relations, which are interpreted as relations over some domain, having the crucial properties of pairwise disjointness and joint exhaustiveness (a general relation is then simply a set of base relations).\n• a table for the computation of the converses of relations.\n• a table for the computation of the compositions of relations.\nThen, the path consistency algorithm [41] and backtracking techniques [42] are the tools used to tackle the problem of consistency of constraint networks and related problems. These algorithms have been implemented in both generic reasoning tools GQR [43] and SparQ [44]. To integrate a new calculus into these tools, only a list of base relations and tables for compositions and converses really need to be provided. Thereby, the qualitative reasoning facilities of these tools become available for this calculus.10 Since the compositions and converses of general relations can be reduced to compositions and converses of base relations, these tables only need to be given for base relations. Based on these tables, the tools provide a means to approximate the consistency of constraint networks, list all their atomic refinements, and more.\nLet b be the name of a base relation, and let Rb be its set-theoretic extension. The converse (Rb)` = {(x, y)|(y, x) ∈ Rb} is often itself a base relation and is denoted by b`11. In the dipole calculus, it is obvious that the converse of a relation can easily be computed by exchanging the first two and second two\n10With more information about a calculus, both of the tools can provide functionality that goes beyond simple qualitative reasoning for constraint calculi.\n11In Freksa’s double-cross calculus [2] the converses are not necessarily base-relations, but for the calculi that we investigate this property holds.\nletters of the name of a relation, see Table 1. Also for the dipole calculus DRAfp with additional orientation distinctions a simple rule exchanges ’+’ with ’−’, and vice versa.’P’ and ’A’ are invariant with respect to the converse operation. Since base relations generally are not closed under composition, this operation is approximated by a weak composition:\nb1; b2 = {b | (Rb1 ◦Rb2) ∩Rb 6= ∅}\nwhere Rb1 ◦Rb2 is the usual set theoretic composition\nRb1 ◦Rb2 = {(x, z)|∃y . (x, y) ∈ Rb1 , (y, z) ∈ Rb2}\nThe composition is said to be strong if Rb1;b2 = Rb1 ◦ Rb2 . Generally, b1; b2 over-approximates the set-theoretic composition.12 Computing the composition table is much harder and will be the subject of Section 3.\nThe mathematical background of composition in table-based reasoning is given by the theory of relation algebras [40, 45]. For many calculi, including the dipole calculus, a slightly weaker notion is needed, namely that of a nonassociative algebra [46]. These algebras treat spatial relations as abstract entities that can be combined by certain operations and governed by certain equations. This allows algorithms and tools to operate at a symbolic level, in terms of (sets of) base relations instead of their set-theoretic extensions.\nDefinition 2 ([46]). A non-associative algebra A is a tuple A = (A,+,−, ·, 0, 1, ; ,` ,∆) such that:\n1. (A,+,−, ·, 0, 1) is a Boolean algebra.\n2. ∆ is a constant, ` a unary and ; a binary operation such that, for any a, b, c ∈ A:\n(a) (a`)` = a (b) ∆; a = a; ∆ = a (c) a; (b + c) = a; b + a; c (d) (a + b)` = a` + b` (e) (a − b)` = a` − b` (f) (a; b)` = b`; a` (g) (a; b) · c` = 0 if and only if (b; c) · a` = 0\nA non-associative algebra is called a relation algebra, if the composition ; is associative.\nThe elements of such an algebra will be called (abstract) relations. We are mainly interested in finite non-associative algebras that are atomic, which means\n12The R operation naturally extends to sets of (names of) base relations.\nthat there is a set of pairwise disjoint minimal relations, called base relations, and all relations can be obtained as unions of base relations. Then, the following fact is well-known and easy to prove:\nProposition 3. An atomic non-associative algebra is uniquely determined by its set of base relations, together with the converses and compositions of base relations. (Note that the composition of two base relations is in general not a base relation.)\nExample 4. The powerset of the 72 DRAf base relations forms a boolean algebra. The relation sese is the identity relation. The converse and (weak) composition are defined as above. We denote the resulting non-associative algebra by DRAf . The algebraic laws follow from general results about so-called partition schemes, see [46]. Similarly, we obtain a non-associative algebra DRAfp .\nHowever, we do not obtain a non-associative algebra for DRAc, because DRAc does not provide a jointly exhaustive set of base relations over the Euclidean plane. This leads to the lack of an identity relation, and more severely, weak composition does not lead to an over-approximation (nor an under-approximation) of set-theoretic composition, because e.g. ffbb is missing from the composition of llll with itself. In particular, we cannot expect the algebraic laws of a non-associative algebra to be satisfied.\nFor non-associative algebras, we define lax homomorphisms which allow for both the embedding of a calculus into another one, and the embedding of a calculus into its domain.\nDefinition 5 (Lax homomorphism). Given non-associative algebras A and B, a lax homomorphism is a homomorphism h : A −→ B on the underlying Boolean algebras such that:\n• h(∆A) ≥ ∆B\n• h(a^) = h(a)^ for all a ∈ A\n• h(a; b) ≥ h(a); h(b) for all a, b ∈ A\nDually to lax homomorphisms, we can define oplax homomorphisms13, which enable us to define projections from one calculus to another.\nDefinition 6 (Oplax homomorphism). Given non-associative algebras A and B, an oplax homomorphism is a homomorphism h : A −→ B on the underlying Boolean algebras such that:\n• h(∆A) ≤ ∆B\n• h(a^) = h(a)^ for all a ∈ A\n• h(a; b) ≤ h(a); h(b) for all a, b ∈ A 13The terminology is motivated by that for monoidal functors.\nA proper homomorphism (sometimes just called a homomorphism) of nonassociative algebras is a homomorphism that is lax and oplax at the same time; the above inequalities then turn into equations.\nAn important application of homomorphisms is their use in the definition of qualitative calculus. Ligozat and Renz [46] define a qualitative calculus in terms of a so-called weak representation [47]:\nDefinition 7 (Weak representation). A weak representation is an identitypreserving (i.e. h(∆A) = ∆B) lax homomorphism ϕ from a (finite atomic) nonassociative algebra into the relation algebra of a domain U . The latter is given by the canonical relation algebra on the powerset P(U × U), where identity, converse and composition (as well as the Boolean algebra operations) are given by their set-theoretic interpretations.\nExample 8. Let D be the set of all dipoles in R2. Then the weak representation of DRAf is the lax homomorphism ϕf : DRAf → P(D× D) given by\nϕf (R) = {Rb | b ∈ R}.\nWe obtain a similar weak representation ϕfp for DRAfp . The following is straightforward:\nProposition 9. A calculus has a strong composition if and only if its weak representation is a proper homomorphism.\nProof. Since a weak representation is identity-preserving, being proper means that ϕ(R1;R2) = ϕ(R1) ◦ ϕ(R2), which is nothing but RR1;R2 = RR1 ◦ RR2 , which is exactly the strength of the composition.\nThe following is straightforward [47]:\nProposition 10. A weak representation ϕ is injective if and only if ϕ(b) 6= ∅ for each base relation b.\nThe second main use of homomorphisms is relating different calculi. For example, the algebra over Allen’s interval relations [32] can be embedded into DRAf (DRAfp) via a homomorphism.\nProposition 11. A homomorphism from Allen’s interval algebra to DRAf (DRAfp) exists and is given by the following mapping of base relations.\n= 7→ sese b 7→ ffbb bi 7→ bbff m 7→ efbs mi 7→ bsef o 7→ ifbi oi 7→ biif d 7→ bfii di 7→ iibf s 7→ sfsi si 7→ sisf f 7→ beie fi 7→ iebe\nProof. The identity relation = is clearly mapped to the identity relation sese. For the composition and converse properties, we just inspect the composition and converse tables for the two calculi.14 The mapping of the base-relation is then lifted directly to a mapping of all relations, where the map is applied component-wise on the relations. Using the laws of non-associative algebras, the homomorphism property of these relations follows from that of the baserelations.\nIn cases stemming from the embedding of Allen’s Interval Algebra, the dipoles lie on the same straight lines and have the same direction. DRAf and DRAfp also contain 13 additional relations which correspond to the case with dipoles lying on a line but facing opposite directions.\nAs we shall see, it is very useful to extend the notion of homomorphisms to weak representations:\nDefinition 12. Given weak representations ϕ : A → P(U × U) and ψ : B → P(V × V), a lax (oplax, proper) homomorphism of weak representations (h, i) : ϕ→ ψ is given by\n• a proper homomorphism of non-associative algebras h : A→ B, and\n• a map i : U → V, such that the diagram\nA ϕ //\nh\nP(U × U)\nP(i×i)\nB\nψ // P(V × V)\ncommutes laxly (respectively oplaxly, properly). Here, lax commutation means that for all R ∈ A, ψ(h(R)) ⊆ P(i × i)(ϕ(R)), oplax commutation means the same with ⊇, and proper commutation with =. Note that P(i × i) is the obvious extension of i to a function between relation algebras; note that (unless i is bijective) this is not even a homomorphism of Boolean algebras (it may fail to preserve top, intersections and complements), although it satisfies the oplaxness property (and the laxness property if i is surjective).15\nNote that Ligozat [47] defines a more special notion of morphism between weak representations; it corresponds to our oplax homomorphism of weak representations where the component h is the identity.\n14This is a (non-circular) forward reference to Section 3, where we compute the DRAf and DRAfp composition tables.\n15The reader with background in category theory may notice that the categorically more natural formulation would use the contravariant powerset functor, which yields homomorphisms of Boolean algebras. However, the present formulation fits better with the examples.\nExample 13. The homomorphism from Prop. 11 can be extended to a proper homomorphism of weak representations by letting i be the embedding of time intervals to dipoles on the x-axis.\nExample 14. Let h map each DRAfp relation to the corresponding DRAf relation:\nllll+ 7→ llll llll- 7→ llll\nllllA 7→ llll rrrr+ 7→ rrrr rrrr- 7→ rrrr\nrrrrA 7→ rrrr llrr+ 7→ llrr llrr- 7→ llrr\nllrrP 7→ llrr rrll+ 7→ rrll rrll- 7→ rrll\nrrllP 7→ rrll\nThen (h, id) : DRAfp → DRAf is a surjective oplax homomorphism of weak representations.\nAlthough this homomorphism of weak representations is surjective, it is not a quotient in the following sense (and in particular, it does not satisfy Prop. 20, as will be shown in Sections 3.8 and 3.9).\nDefinition 15. A homomorphism of non-associative algebras is said to be a quotient homomorphism16 if it is proper and surjective. A (lax, oplax or proper) homomorphism of weak representations is a quotient homomorphism if it is surjective in both components.\nThe easiest way to form a quotient of a weak representation is via an equivalence relation on the domain:\nDefinition 16. Given a weak representation ϕ : A→ P(U × U) and an equiv16Maddux [40] does not have much to say on this subject; instead, we suggest consulting a textbook on universal algebra, e.g. [48].\nalence relation ∼ on U , we obtain the quotient representation ϕ/∼ as follows:\nA ϕ //\nqA\nP(U × U)\nP(q×q)\nA/∼A\nϕ/∼ // P(U/∼ ×U/∼)\n• Let q : U → U/∼ be the factorization of U by ∼;\n• q extends to relations: P(q × q) : P(U × U)→ P(U/∼ ×U/∼);\n• let ∼A be the congruence relation on A generated by\nP(q × q)(ϕ(b1)) ∩ P(q × q)(ϕ(b2)) 6= ∅ ⇒ b1 ∼A b2\nfor base relations b1, b2 ∈ A. ∼ is called regular w.r.t. ϕ if ∼A is the kernel of P(q × q) ◦ ϕ (i.e. the set of all pairs made equal by P(q × q) ◦ ϕ);\n• let qA : A → A/∼A be the quotient of A by ∼A in the sense of universal algebra [48], which uses proper homomorphisms; hence, qA is a proper homomorphism;\n• finally, the function ϕ/∼ is defined as\nϕ/∼ (R) = P(q × q)(ϕ(q−1A (R))).\nProposition 17. The function ϕ/∼ defined in Def. 16 is an oplax homomorphism of non-associative algebras.\nProof. To show this, notice that an equivalent definition works on the base relations of A/∼A:\nϕ/∼ (R) = ⋃ b∈R P(q × q)(ϕ(q−1A (b))).\nIt is straightforward to show that bottom and joins are preserved; since q is surjective, also top is preserved. Concerning meets, since general relations in A/ ∼A can be considered to be sets of base relations, it suffices to show that b1 ∧ b2 = 0 implies P(q × q)(ϕ(q−1A (b1))) ∩ P(q × q)(ϕ(q −1 A (b2))) = ∅. Assume to the contrary that P(q × q)(ϕ(q−1A (b1))) ∩ P(q × q)(ϕ(q −1 A (b2))) 6= ∅. Then already P(q × q)(ϕ(b′1)) ∩ P(q × q)(ϕ(b′2)) 6= ∅ for base relations b′i ∈ q −1 A (bi), i = 1, 2. But then b′1 ∼A b′2, hence qA(b′1) = qA(b′2) ≤ b1 ∧ b2, contradicting b1 ∧ b2 = 0. Preservation of complement follows from this.\nUsing properness of the quotient, it is then easily shown that the relation algebra part of the lax homomorphism property carries over from ϕ to ϕ/∼: Concerning composition, by surjectivity of qA, we know that any given relations R1, R2 ∈ A/∼A are of the form R1 = qA(S1) and R2 = qA(S2). Hence, ϕ/∼ (R1;R2) = ϕ/∼ (qA(S1); qA(S2)) = ϕ/∼ (qA(S1;S2)) = P(q × q)(ϕ(S1;S2)) ≥ P(q× q)(ϕ(S1);ϕ(S2)) = P(q× q)(ϕ(S1));P(q× q)(ϕ(S2)) = ϕ/∼ (qA(S1));ϕ/∼ (qA(S2)) = ϕ/∼ (R1);ϕ/∼ (R2). The inequality of the identity is shown similarly.\nProposition 18. (qA, q) : ϕ → ϕ/∼ is an oplax quotient homomorphism of weak representations. If ∼ is regular w.r.t. ϕ, then the quotient homomorphism is proper, and satisfies the following universal property: if (qB , i) : ϕ → ψ is another oplax homomorphism of weak representations with ψ injective and ∼⊆ ker(i), then there is a unique oplax homomorphism of weak representations (h, k) : ϕ/∼→ ψ with (qB , i) = (h, k) ◦ (qA, q).\nProof. The oplax homomorphism property for (qA, q) is P(q × q) ◦ ϕ ⊆ ϕ/∼ ◦qA, which by definition of ϕ/∼ amounts to\nP(q × q) ◦ ϕ ⊆ P(q × q) ◦ ϕ ◦ q−1A ◦ qA,\nwhich follows from surjectivity of q. Regularity of ∼ is w.r.t. ϕ means that ∼A is the kernel of P(q× q) ◦ϕ, which turns the above inequation into an equality. Concerning the universal property, let (qB , i) : ϕ → ψ with the mentioned properties be given. Since ∼⊆ ker(i), there is a unique function k : U/∼→ V with i = k◦q. The homomorphism h we are looking for is determined uniquely by h(qA(b)) = qB(b); this also ensures the proper homomorphism property. All that remains to be shown is well-definedness. Suppose that b1 ∼A b2. By regularity, P(q× q)(ϕ(b1)) = P(q× q)(ϕ(b2)). Hence also P(i× i)(ϕ(b1)) = P(i× i)(ϕ(b2)) and ψ(qB(b1)) = ψ(qB(b2)). By injectivity of ψ, we get qB(b1) = qB(b2).\nExample 19. Given dipoles d1, d2 ∈ D, let d1 ∼ d2 denote that d1 and d2 have the same start point and point in the same direction. (This is regular w.r.t. ϕf .) Then D/∼ is the domain OP of oriented points in R2. Let ϕop : DRAop → P(OP × OP) and ϕopp : DRAopp → P(OP × OP) be the weak representations obtained as quotients of ϕf and ϕfp , respectively, see Fig. 11. At the level of non-associative algebras, the quotient is given by the tables in Figs. 4 and 10.\nThis way of constructing DRAop and DRAopp by a quotient gives us their converse and composition tables for no extra effort; we can obtain them by applying the respective congruences to the tables for DRAf and DRAfp , respectively. Moreover, the next result shows that we also can use the quotient to transfer an important property of calculi.\nProposition 20. Quotient homomorphism of weak representations preserve strength of composition.\nProof. Let (h, i) : ϕ→ ψ with ϕ : A→ P(U × U) and ψ : B → P(V × V) be a quotient homomorphism of weak representations. According to Prop. 9, the\nstrength of the composition is equivalent to ϕ (respectively ψ) being a proper homomorphism. We assume that ϕ is a proper homomorphism and need to show that ψ is proper as well. We also know that h and P(i × i) are proper. Let R2, S2 be two abstract relations in B. Because of the surjectivity of h, there are abstract relations R1, S1 ∈ A with h(R1) = R2 and h(S1) = S2. Now ψ(R2;S2) = ψ(h(R1);h(S1)) = ψ(h(R1;S1)) = P(i × i)(ϕ(R1;S1)) = P(i× i)(ϕ(R1));P(i× i)(ϕ(S1)) = ψ(h(R1));ψ(h(S1)) = ψ(R2);ψ(S2), hence ψ is proper.\nThe application of this Proposition must wait until Section 3, where we develop the necessary machinery to investigate the strength of the calculi. The domains of DRAop and OPRA1 obviously coincide. An inspection of the converse and composition tables (that of OPRA1 is given in [49]) shows:\nProposition 21. DRAop is isomorphic to OPRA1.\nWe can also obtain a similar statement for DRAopp . The calculus OPRA∗1 [38] is a refinement of OPRA1 that is obtained along the same features as DRAfp is obtained from DRAf . The method how to compute the composition table for OPRA∗1 is described in [38] and a reference composition table is provided with the tool SparQ [50].\nProposition 22. DRAopp is isomorphic to OPRA∗1.\nIn the course of checking the isomorphism properties between DRAopp and OPRA∗1, we discovered errors in 197 entries of the composition table of OPRA ∗ 1 as it was shipped with the qualitative reasoner SparQ [50]. This emphasizes our point how important it is to develop a sound mathematical theory to compute a composition table and to stay as close as possible with the implementation to the theory. In the composition table for OPRA∗1 it was claimed that\nSAMEright; RIGHTrightA =⇒ {LEFTright+,LEFTrightP,LEFTright-, BACKright,RIGHTright+, RIGHTrightA,RIGHTright-}\nwere we use the DRAopp notation for the OPRA∗1-relations for convenience. So the abstract composition SAMEright; RIGHTrightA contains the base relation LEFTrightP, which however is not supported geometrically. Consider three oriented points oA, oB and oC with oA SAMEright oB and oB RIGHTrightA oC , as depicted in Fig. 12. For the relation oA LEFTrightP oC to hold, the carrier rays of oA and oC need to be parallel, but because of oB RIGHTrightA oC , the carrier rays of oB and oC and hence also those of oA and oB need to be parallel as well. Since the start point of oA and oB coincide, this can only be achieved, if oA and oB are collinear, which is a contradiction to oA SAMEright oB .\nAltogether, we get the following diagram of calculi (weak representations) and homomorphisms among them:\nIA proper // DRAfp\noplax //\noplax quotient\nDRAf\noplax quotient\nIA properoo\nOPRA∗1 ∼= DRAopp oplax // DRAop ∼= OPRA1"
    }, {
      "heading" : "2.4 Constraint Reasoning",
      "text" : "Let us now apply the relation-algebraic method to constraint reasoning. Dipole constraints are written as xRy, where x, y are variables for the dipoles and R is a DRAf or DRAfp relation. Given a set Θ of dipole constraints, an important reasoning problem is to decide whether Θ is consistent, i.e., whether there is an assignment of all variables of Θ with dipoles such that all constraints are satisfied (a solution). We call this problem DSAT. DSAT is a Constraint Satisfaction Problem (CSP) [51]. We rely on relation algebraic methods to check consistency, namely the above mentioned path consistency algorithm. For non-associative algebras, the abstract composition of relations need not coincide with the (associative) set-theoretic composition. Hence, in this case, the standard path-consistency algorithm does not necessarily lead to path consistent networks, but only to algebraic closure [26]:\nDefinition 23 (Algebraic Closure). A CSP over binary relations is called algebraically closed if for all variables X1, X2, X3 and all relations R1, R2, R3 the constraint relations\nR1(X1, X2), R2(X2, X3), R3(X1, X3)\nimply R3 ≤ R1;R2.\nIn general, algebraic closure is therefore only a one-sided approximation of consistency: if algebraic closure detects an inconsistency, then we are sure that the constraint network is inconsistent; however, algebraic closure may fail to detect some inconsistencies: an algebraically closed network is not necessarily consistent. For some calculi, like Allen’s interval algebra, algebraic closure is known to exactly decide consistency, for others it does not, see [26], where it is also shown that this question is completely orthogonal to the question as to whether the composition is strong. We will examine these questions for the dipole calculi in Section 3 below.\nFortunately, it turns out that oplax homomorphisms preserve algebraic closure.\nProposition 24. Given non-associative algebras A and B, an oplax homomorphism h : A −→ B preserves algebraic closure. If h is injective, it also reflects algebraic closure.\nProof. Since an oplax homomorphism is a homomorphism between Boolean algebras, it preserves the order. So for any three relations R1, R2, R3 in the algebraically closed CSP over A, with\nR3 ≤ R1;R2\nthe preservation of the order implies:\nh(R3) ≤ h(R1;R2).\nApplying the oplaxness property yields:\nh(R3) ≤ h(R1); h(R2).\nand hence the image of the CSP under h is also algebraically closed. If h is injective, it reflects equations and inequations, and the converse implication follows.\nDefinition 25. Following [26], a constraint network over a non-associative algebra A can be seen as a function ν : A → P(N × N), where N is the set of nodes (or variables), and ν maps each abstract relation R to the set of pairs (n1, n2) that are decorated with R. (Note that ν is a weak representation only if the constraint network is algebraically closed.)\nConstraint networks can be translated along homomorphisms of nonassociative algebras as follows: Given h : A → B and ν : A → P(N × N), h(ν) : B → P(N ×N) is the network that decorates (n1, n2) with h(R) whenever ν decorates it with R\nA solution for ν in a weak representation ϕ : A → P(U × U) is a function j : N → U such that for all R ∈ A, P(j × j)(ν(R)) ⊆ ϕ(R), or P(j × j) ◦ ν ⊆ ϕ for short.\nProposition 26. Oplax homomorphisms of weak representations preserve solutions for constraint networks.\nProof. Let weak representations ϕ : A→ P(U × U) and ψ : B → P(V × V) and an oplax homomorphism of weak representations (h, i) : ϕ→ ψ be given.\nA given solution j : N → U for ν in ϕ is defined by P(j × j) ◦ ν ⊆ ϕ. From this and the oplax commutation property P(i × i) ◦ ϕ ⊆ ψ ◦ h we infer P(i ◦ j × i ◦ j) ◦ ν ⊆ ψ ◦ h, which implies that i ◦ j is a solution for h(ν).\nAn important question for a calculus (= weak representation) is whether algebraic closure decides consistency. We will now prove that this property is preserved under certain homomorphisms.\nProposition 27. Oplax homomorphisms (h, i) of weak representations with h injective preserve the property that algebraic closure decides consistency to the image of h.\nProof. Let weak representations ϕ : A→ P(U × U) and ψ : B → P(V × V) and an oplax homomorphism of weak representations (h, i) : ϕ → ψ be given. Further assume that for ϕ, algebraic closure decides consistency.\nAny constraint network in the image of h can be written as h(ν) : B → P(N × N). If h(ν) is algebraically closed, by Prop. 24, this carries over to ν. Hence, by the assumption, ν is consistent, i.e. has a solution. By Prop. 26, h(ν) is consistent as well. Note that the converse directly always holds: any consistent network is algebraically closed.\nFor calculi such as RCC8, interval algebra etc., (maximal) tractable subsets have been determined, i.e. sets of relations for which algebraic closure decides consistency. We can apply Prop. 27 to the homomorphism from interval algebra to DRAf (see Example 13). We obtain that algebraic closure in DRAf decides consistency of any constraint network involving (the image of) a maximal tractable subset of the interval algebra only.\nOn the other hand, the consistency problem for the DRAc calculus in the base relations is already NP-hard, see [27], and hence algebraic closure does not decide consistency in this case. We will resume the discussion of consistency versus algebraic closure in Sect. 4."
    }, {
      "heading" : "3 A Condensed Semantics for the Dipole Calcu-",
      "text" : "lus\nThe 72 base relations of DRAf , or the 80 base relations of DRAfp , have so far been derived manually. This is a potentially erroneous procedure17, especially if the calculus has many base-relations like the DRAf and DRAfp calculi. Therefore, it is necessary to use methods which yield more reliable results. To start, we tried verifying the composition table of DRAf directly, using the resulting quadratic inequalities as given in [28]. However, it turned out that it is unfeasible to base the reasoning on these inequalities, even with the aid of interactive theorem provers such as Isabelle/HOL [52] and HOL-light [53] (the latter is dedicated to proving facts about real numbers). This unfeasibility is probably related to the above-mentioned NP-hardness of the consistency problem for DRAf base relations. So, we developed a qualitative abstraction instead. A key insight is that two configurations are qualitatively different if they cannot be transformed into each other by maps that keep that part of the spatial structure invariant that is essential for the calculus. In our case, these maps are (orientation-preserving) affine bijections. A set of configurations that can\n17For this reason, the manually derived sets of base relations for the finer-grained dipole calculi described in [24, 28] contained errors.\nbe transformed into each other by appropriate maps is an orbit of a suitable automorphism group. Here, we use primarily the affine group GA(R2) and detail how this leads to qualitatively different spatial configurations."
    }, {
      "heading" : "3.1 Seven qualitatively different configurations",
      "text" : "Since the domains of most spatial calculi are infinite (e.g. the Euclidean plane), it is impossible just to enumerate all possible configurations relative to the composition operation when deriving a composition table. It is still possible to enumerate a well-chosen subset of all configurations to obtain a composition table, but it is difficult to show that this subset leads to a complete table. We have experimented with the enumeration of all DRAf scenarios with six points (which are the start- and end-points of three dipoles), which are equivalent to the entries of the composition table, in a finite grid over natural numbers. This method led to a usable composition table, but its computation took several weeks and it is unclear if it is complete. The goal remains the efficient and automatic computation of a composition table. To obtain an efficient method for computing the table, we introduce the condensed semantics for DRAf and DRAfp . For these, we observe the Euclidean plane with respect to all possible line configurations that are distinguishable within the DRA calculi. With condensed semantics, there is already a level of abstraction from the metrics of the underlying space. All we can see are lines that are parallel or intersect. For the binary composition operation of DRA calculi, we have to consider all qualitatively different configurations of three lines.\nIn order to formalize “qualitatively different configurations”, we regard the DRA calculus as a first-order structure, with the Euclidean plane as its domain, together with all the base relations.\nProposition 28. All orientation-preserving affine bijections are DRAf and DRAfp automorphisms.\n(In [54], the converse is also shown.)\nProof. It suffices to show that orientation preserving affine bijections preserve the LR relations. Now, any orientation-preserving affine bijection can be composed of translations, rotations, scalings and shears. It is straightforward to see that these mappings preserve the LR relations.\nRecall that an affine map f from Euclidean space to itself is given by f(x, y) = A ( x\ny\n) + (bx, by)\nf is a bijection iff det(A) is non-zero. Automorphisms and their compositions form a group which acts on the set of points (and tuples of points, lines, etc.) by function application. Recall that, if a group G acts on a set, an orbit consists of the set reachable from a fixed\nelement by performing the action of all group elements: O(x) = {f(x)|f ∈ G}. The importance of this notion is the following:\nQualitatively different configurations are orbits of the automorphism group.\nHere, we start with configurations consisting of three lines, i.e. we consider the orbits for all sets {l1, l2, l3} of (at most) three lines18 in Euclidean space with respect to the group of all affine bijections (and not just the orientation preserving ones – orientations will come in at a later stage). This group is usually called the affine group of R2 and denoted by GA(R2).\nA line in Euclidean space is given by the set of all points (x, y) for which y = mx+b. Given three lines y = mix+bi (i = 1, 2, 3), we list their orbits by giving a defining property. In each case, it is fairly obvious that the defining property is preserved by affine bijections. Moreover, in each case, we show a transformation property, namely that given two instances of the defining properties, the first can be transformed into the second by an affine bijection. Together, this means that the defining property exactly specifies an orbit. The transformation property often follows from the following basic facts about affine bijections, see [55]:\n1. An affine bijection is uniquely determined by its action on an affine basis, the result of which is given by another affine basis. Since an affine basis of the Euclidean plane is a point triple in general position, given any two point triples in general position, there is a unique affine bijection mapping the first point triple to the second.\n2. Affine maps transform lines into lines.\n3. Affine maps preserve parallelism of lines.\nThat is, it suffices to show that an instance of the defining property is determined by three points in general position and drawing lines and parallel lines.\nWe will consider the intersection of line i with line j (i 6= j ∈ {1, 2, 3}). This is given by the system of equations:\n{y = mix+ bi, y = mjx+ bj}.\nFor mi 6= mj , this has a unique solution:\nx = − bi − bj mi −mj , y = mibj −mjbi mi −mj .\nFor mi = mj , there is either is no solution (bi 6= bj ; the lines are parallel), or there are infinitely many solutions (bi = bj ; the lines are identical).\nWe can now distinguish seven cases: 18We do not require that l1, l2 and l3 are distinct; hence, the set {l1, l2, l3} may also consist\nof two elements or be a singleton.\n1. All mi are distinct and the three systems of equations {y = mix+ bi, y = mjx+ bj} (i 6= j ∈ {1, 2, 3}) yield three different solutions. Geometrically, this means that all three lines intersect with three different intersection points. The transformation property follows from the fact that the three intersection points determine the configuration.\n2. All mi are distinct and at least two of the three systems of equations {y = mix+bi, y = mjx+bj} (i 6= j ∈ {1, 2, 3}) have a common solution. Then, obviously, the single solution is common to all three equation systems. Geometrically, this means that all three lines intersect at the same point.\nTake this point and a second point on one of the lines. By drawing parallels through this second point, we obtain two more points, one on each of the other two lines, such that the four points form a parallelogram. The transformation property now follows from the fact that any two nondegenerate parallelograms can be transformed into each other by an affine bijection.\n3. mi = mj 6= mk and bi 6= bj for distinct i, j, k ∈ {1, 2, 3}. Geometrically, this means that two lines are parallel, but not coincident, and the third line intersects them. Such a configuration is determined by three points: the points of intersection, plus a further point on one of the parallel lines. Hence, the transformation property follows.\n4. mi = mj 6= mk and bi = bj for distinct i, j, k ∈ {1, 2, 3}. Geometrically, this means that two lines are equal and a third one intersects them. Again, such a configuration is determined by three points: the intersection point plus a further point on each of the (two) different lines. Hence, the transformation property follows.\n5. All mi are equal, but the bi are distinct. Geometrically, this means that all three lines are parallel, but not coincident. We cannot show the transformation property here, which means that this case comprises several orbits. Actually, we get one orbit for each distance ratio\nb1 − b2 b1 − b3 .\nAn affine bijection\nf(x, y) = A ( x\ny\n) + (bx, by)\ntransforms a line y = mx+ b to y = m′x+ b′, with b′ = c1(m)b+ c2(m), where c1 and c2 depend non-linearly on m. However, since m = m1 = m2 = m3, this non-linearity does not matter. This means that\nb′1 − b′2 b′1 − b′3 = c1(m)b1 − c1(m)b2 c1(m)b1 − c1(m)b3 = b1 − b2 b1 − b3 ,\ni.e. the distance ratio is invariant under affine bijections (which is wellknown in affine geometry). Given a fixed distance ratio, we can show the transformation property: three points suffice to determine two parallel lines, and the position of the third parallel line is then determined by the distance ratio. For a distance ratio 1, this configuration looks as follows:\nActually, for the qualitative relations between dipoles placed on parallel lines, their distance ratio does not matter. Hence, we will ignore distance ratios when computing the composition table below. The fact that we get infinitely many orbits for this sub-case will be discussed below.\n6. All mi are equal and two of the bi are equal but different from the third. Geometrically, this means that two lines are coincident, and a third one is parallel but not coincident. Such a configuration is determined by three points: two points on the coincident lines and a third point on the third line. Hence, the transformation property follows.\n7. All mi are equal, and the bi are equal as well. This means that all three lines are equal. The transformation property is obvious.\nSince we have exhaustively distinguished the various possible cases based on relations between the mi and bi parameters, this describes all possible orbits of three lines w.r.t. affine bijections. Although we get infinitely many orbits for case (5), in contexts where the distance ratio introduced in case (5) does\nnot matter, we will speak of seven qualitatively different configurations, and it is understood that the infinitely many orbits for case (5) are conceptually combined into one equivalence class of configurations.\nRecall that we have considered sets of (up to) three lines. If we consider triples of lines instead, cases (3) to (6) split up into three sub-cases, because they feature distinguishable lines. We then get 15 different configurations, which we name 1, 2, 3a, 3b, 3c, 4a, 4b, 4c, 5a, 5b, 5c, 6a, 6b, 6c and 7. While 5a, 5b and 5c correspond to case (5) above and therefore are comprised of infinitely many orbits, the remaining configurations are comprised of a single orbit.\nThe next split appears at the point when we consider qualitatively different configurations of triples of unoriented lines with respect to orientationpreserving affine bijections. An affine map f(x, y) = A ( x y ) + (bx, by) is orientation-preserving if det(A) is positive. In the above arguments, we now have to consider oriented affine bases. Let us call an affine base (p1, p2, p3) positively (+) oriented, if the angle ∠(−−−→p1 p2,−−−→p1 p3) is positive, otherwise, it is negatively (−) oriented. Two given affine bases with the same orientation determine a unique orientation-preserving affine bijection transforming the first one into the second. Thus, the orientation of the affine base matters, and hence cases 1 and 2 above are split into two sub-cases each. For all the other cases, we have the freedom to choose the affine bases such that their orientations coincide. In the end, we get 17 different orbits of triples of oriented lines: 1+, 1-, 2+, 2-, 3a, 3b, 3c, 4a, 4b, 4c, 5a, 5b, 5c, 6a, 6b, 6c and 7. They are shown in Fig. 13\nThe structure of the orbits already gives us some insight into the nature of the dipole calculus. The fact that sub-case (1) corresponds to one orbit means that neither angles nor ratios of angles can be measured in the dipole calculus. By way of contrast, the presence of infinitely many orbits in sub-case (5) means that ratios of distances in a specific direction, not distances, can be measured in the dipole calculus. Indeed, in DRAfp , it is even possible to replicate a given distance arbitrarily many times, as indicated in Fig. 14.\nThat is, DRAfp can be used to generate a one-dimensional coordinate system. Note however that, due to the lack of well-defined angles, a twodimensional coordinate system cannot be constructed.\nNote that Cristani’s 2DSLA calculus [56], which can be used to reason about sets of lines, is too coarse for our purposes: cases (1) and (2) above cannot be distinguished in 2DSLA."
    }, {
      "heading" : "3.2 Computing the composition table with Condensed Semantics",
      "text" : "For the composition of (oriented) dipoles, we use the seventeen different configurations for triples of (unoriented) lines for the automorphism group of orientation-preserving affine bijections that have been identified in the previous section (Fig. 13). A qualitative composition configuration consists of a qualitative configuration for a triple of lines (the lines will serve as carrier lines for dipoles), carrying qualitative location information for the start and end points of three dipoles, as detailed in the sequel. While the notion of qualitative configuration composition is motivated by geometric notions, it is purely abstract and symbolic and does not refer explicitly to geometric objects. This ensures that it can be directly represented in a finite data structure.\nEach of the three (abstract) lines laA, l a B , l a C of a qualitative composition configuration carries two abstract segmentation points SX and EX (X ∈ {A,B,C}). P = {SA, SB , SC , EA, EB , EC} is the set of all abstract segmentation points.\nIn the geometric interpretation of these abstract entities (which will be defined precisely later on), the segmentation points lead to a segmentation of the lines. So, we introduce five abstract segments F , E, I, S, B (the letters are borrowed from the LR calculus). The set of abstract segments is denoted by S. It is ordered in the following sequence:\nF > E > I > S > B.\nThe geometric intuition behind this is shown in Fig. 15.\nFigure 15: Segmentation on the line.\nHaving this segmentation of line configurations, we can introduce qualitative configurations for abstract dipoles by qualitatively locating their start and end points based on the above segmentation. In the case that two or more points fall onto the same segment, information on the relative location of points within that segment is needed; this is provided by an ordering relation denoted by <p.\nBy D, we denote the set S × S \\ {(S, S), (E,E)} (the exclusion of {(S, S), (E,E)} is motivated by the fact that the start and end points of a dipole cannot coincide). By st(dp) and ed(dp), we denote the projections to the first and second components of each tuple, respectively. For convenience, we call the elements of the co-domains of st and ed abstract points.\nFinally, we need information on the points of intersection of lines. Depending on orbit, there may be none, one, two or three points of intersection. Hence, we introduce sets Ŝ(i) with i ∈ {1+, 1−, 2+, 2−, 3a, 3b, 3c, 4a, 4b, 4c, 5a, 5b, 5c, 6a, 6b, 6c, 7} which give names to each abstract point of intersection. These sets are defined as:\nŜ(1+) := {ŝAB , ŝBC , ŝAC} Ŝ(1−) := {ŝAB , ŝBC , ŝAC} Ŝ(2+) := {ŝABC} Ŝ(2−) := {ŝABC} Ŝ(3a) := {ŝAB , ŝAC} Ŝ(3b) := {ŝAC , ŝBC} Ŝ(3c) := {ŝAB , ŝBC} Ŝ(4a) := {ŝABC} Ŝ(4b) := {ŝABC} Ŝ(4c) := {ŝABC} Ŝ(5a) := ∅ Ŝ(5b) := ∅ Ŝ(5c) := ∅\nŜ(6a) := ∅ Ŝ(6b) := ∅ Ŝ(6c) := ∅ Ŝ(7) := ∅\nwhere ŝXY denotes the point of intersection of abstract lines laX and l a Y and ŝXY Z denotes the the point of intersection of the three abstract lines laX , l a Y and laZ . In the geometric interpretation, we require segmentation points that coincide with points of intersection whenever possible. This coincidence is expressed via an assignment mapping, which is a partial mapping a : P ⇀ Ŝ(i) subject to the following properties:\n• if a(SX) = ŝy, then y contains X;\n• if a(EX) = ŝy, then y contains X;\n• if both a(SX) and a(EX) are defined, then a(Sx) 6= a(Ex), for all X ∈ {A,B,C};\n• the domain of a has to be maximal.\nThe first two conditions express that each abstract segmentation point is mapped to the correspondingly named abstract point of intersection. The third condition requires that the abstract segmentation points of a line cannot be mapped to the same abstract point of intersection. The last condition ensures that abstract segmentation points are mapped to abstract points of intersection whenever possible.\nWe now arrive at a formal definition:\nDefinition 29 (Qualitative Composition Configuration). A qualitative composition configuration (qcc) consists of:\n• An identifier i from the set {1+, 1−, 2+, 2−, 3a, 3b, 3b, 4a, 4b, 4c, 5a, 5b, 5c, 6a, 6b, 6c, 7} denoting one of the qualitatively different configurations of line triples as introduced in Section 3.1;\n• An assignment mapping a : P ⇀ Ŝ(i);\n• A triple (dpA, dpB , dpC) of elements from D, where we call each such element an abstract dipole;\n• A relation <p on all points, i.e. the start and end points of the abstract dipoles, which is compatible with <.\nDefinition 30 (Abstract direction). For any abstract dipole dp, we say that dir(dp) = + if and only if ed(dp) >p st(dp), otherwise dir(dp) = −."
    }, {
      "heading" : "3.2.1 Geometric Realization",
      "text" : "In this section, we claim that each qcc has a realization, first of all, we need to define what such a realization is.\nDefinition 31 (Order on ray). Given a ray l, for two points A and B, we say that A <r B, if B lies further in the positive direction than A.\nWe construct a map on each ray that reflects the abstract segments shown in Fig. 15 to provide a link between a qcc and a compatible line scenario.\nDefinition 32 (Segmentation map). Given a ray r and two points S̃ and Ẽ on it, the segmentation map seg : r −→ { F̃ , Ẽ, Ĩ, S̃, B̃ } is defined as:\nr(x) =  if S̃ <r Ẽ  F̃ if Ẽ <r x Ẽ if Ẽ =r x Ĩ if x̃ <r Ẽ ∧ S̃ <r x S̃ if S̃ =r x B̃ if x <r S̃ if Ẽ <r S̃  F̃ if x <r Ẽ Ẽ if x =r Ẽ Ĩ if Ẽ <r x ∧ x <r S̃ S̃ if x =r S̃ B̃ if S̃ <r x\nfor any point on x on r.\nWhen it is clear that we are talking about segments on an actual ray, we often omit the .̃\nDefinition 33 (Geometric Realization). For any qcc Q a geometric realization R(Q) consists of a triple of dipoles (dA, dB , dC) in R2, three carrier rays lA, lB , lC of the dipoles, and two points S̃X and ẼX on lX for each X ∈ {A,B,C}, such that:\n• (lA, lB , lC) (more precisely, the corresponding triple of unoriented lines) belongs to the configuration denoted by the identifier i of Q;\n• the angle between la and the other two rays must lie in the interval (π, 2·π];\n• for any x, y ∈ P̃, if a(p(x)) and a(p(y)) are both defined and equal, then x = y (where p : P̃ = {S̃A, S̃B , S̃C , ẼA, ẼB , ẼC} → P be the obvious bijection);\n• for all X, st(dpX) = seg(st(dX)) and ed(dpX) = seg(ed(dX));\n• for all points x and y on lX , if seg(x) < seg(y), then x <r y;\n• if lX = lY , the order <p must be preserved for points st(dX), ed(dX), st(dY ), ed(dY ), in such a way that: if st(dpX) <p st(dpY ), then st(dY ) <r st(dX) and in the same manner between all other points.\nmust hold.\nProposition 34. Given three dipoles in R2, there is a qcc Q and a geometric realization of R(Q) which uses these three dipoles.\nProof. For this proof, we construct a qcc from a scenario of three dipoles in R2. Given three dipoles dA, dB , dC in R2, we determine their carrier rays lA, lB , lC in such a way that the angles between lA and lB as well as lA and lC lie in the interval (π, 2 · π]. We determine the identifier of the configuration in which the the scenario lies. We determine the points of intersection of the rays and identify them with ŝXY in Ŝ(i). For all points X in P, for which a is undefined, the points X̂ are placed in such a way, that SX <r EX (which is equivalent to SX < EX). We identify st(dpX) and ed(dpX) according to the segmentation map on these rays. If two carrier rays coincide, we define the order <p w.r.t. <r, otherwise it is arbitrary. This clearly gives a qcc.\nAn example of this construction is given in Fig. 16. On the left-hand-side\nof Fig. 16, there is a scenario with three dipoles, lying somewhere in R2. On the right hand side, rays and points of intersection are added. Comparison with orbits and placement of lines determine the identifier 3b for this scenario. The map a can be defined as\na(SA) = ŜAC a(SB) = ŜBC a(EC) = ŜAC a(SB) = ŜBC\nwhere the assignment is only free for EA and EB . EA and EB are lying at the start point of dipole dA and at the end point of dipole dB . In this way, we get:\nst(dpA) = E ed(dpA) = F st(dpB) = E ed(dpB) = I st(dpC) = B ed(dpC) = B\nand\ndir(dpA) = + dir(dpB) = − dir(dpC) = −\nIn this case the assignment of <p is arbitrary. This construction gives us the desired qcc and a realization of it."
    }, {
      "heading" : "3.3 Primitive Classifiers",
      "text" : "The last and most crucial point is the computation of DRA relations between three dipoles. We can decompose this task into subtasks, since each DRAf relation comprises four LR relations between a dipole and point; these are obtained from a qualitative composition configuration using so-called primitive classifiers. The basic classifiers apply the primitive classifiers to the abstract dipoles in each qualitative composition configuration in an adequate manner. For DRAfp relations an extension of the basic classifiers is used in cases where the qualitative angle between several dipoles has to be determined. Finally, the resulting data is collected in a (composition) table.\nDefinition 35 (Primitive Qualitative Composition Configuration). A primitive qualitative composition configuration (pqcc) is a sub-configuration of a qualitative composition configuration (see Def. 29) containing two abstract dipoles (where for the second one, only the start or end point is used for classification). All other data are the same as in Def. 29.\nNotation 36. To simplify the explanation of large classifiers, we shall write: f(x) = { cond1 −→ value1 cond2 −→ value2\ninstead of\nf(x) = { value1 if cond1 value2 if cond2.\nIf it is clear which function we are defining, we even omit the “f(x) =”.\nGiven a primitive qualitative composition configuration Q, primitive classifiers map the qualitative locations of a dipole dp1 and a point pt (which is the start or end point of another dipole dp2) to a letter indicating the LR relation between the dipole and point. We say that the dipole has positive pos orientation if dir(dp) = +, otherwise the orientation is negative neg.\nWe need three different types of primitive classifiers for our algorithm. Given two arbitrary dipoles dp1 and dp2, we construct a primitive classifier for a pqcc with intersecting carrier rays in its realization. The classifier itself only works on dp1 and pt, where pt is either the start or end point of dp2. A\nrealization of this pqcc is given in Fig. 17 for the reader’s convenience, the actual dipoles are omitted from the figure, since they can be placed arbitrarily.\nTo realize the dipole, this classifier takes dipole dp1 and the start or end point of dp2 called pt as well as information on whether dp1 is pointing in the same direction as the ray (pos) or against it (neg) for both dipoles. The classifier returns an LR-relation determining the relation between dp1 and pt.\nIn this case, the classifier clix,y(dp1, pt) is given by:\npos −→  pt > y −→ R pt = y −→  st(dp1) < x ∧ ed(dp1) < x −→ F st(dp1) < x ∧ ed(dp1) = x −→ E st(dp1) < x ∧ ed(dp1) > x −→ I st(dp1) = x ∧ ed(dp1) > x −→ S st(dp1) > x ∧ ed(dp1) > x −→ B\npt < y −→ L\nneg −→  pt < y −→ R pt = y −→  st(dp1) > x ∧ ed(dp1) > x −→ F st(dp1) > x ∧ ed(dp1) = x −→ E st(dp1) > x ∧ ed(dp1) < x −→ I st(dp1) = x ∧ ed(dp1) < x −→ S st(dp1) < x ∧ ed(dp1) < x −→ B\npt > y −→ L\nThe subscripts on the classifier denote the point of intersection of the two lines. For the case shown in Fig. 17, we have x = y = S. We see that the table for neg is exactly the complement of pos. This primitive classifier assumes that, in the geometric realization, the second dipole (containing point pt) points to the right w.r.t. dipole d. If the second dipole points to the left in the realization, it is sufficient to apply an operation that interchanges L with R on this classifier, in order to obtain the correct results. We will call this operation com. This is the only primitive classifier needed for intersecting lines.\nSecondly, we give a primitive classifier cls(dp1, pt) for two lines that coincide, see Fig. 18.\nneg −→ 8>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>: pt = B −→ 8>>>>>><>>>>>>: st(dp1) > B ∧ ed(dp1) > B −→ F st(dp1) > B ∧ ed(dp1) = B −→ 8<: ed(dp1) <p pt −→ I ed(dp1) =p pt −→ E ed(dp1) >p pt −→ F st(dp1) = B ∧ ed(dp1) = B −→ 8>><>>: st(dp1) <p pt ∧ ed(dp1) <p pt −→ B st(dp1) =p pt ∧ ed(dp1) <p pt −→ S st(dp1) >p pt ∧ ed(dp1) <p pt −→ I st(dp1) >p pt ∧ ed(dp1) =p pt −→ E st(dp1) >p pt ∧ ed(dp1) >p pt −→ F pt = S −→ 8>><>>: st(dp1) > S ∧ ed(dp1) > S −→ F st(dp1) > S ∧ ed(dp1) = S −→ E st(dp1) > S ∧ ed(dp1) < S −→ I st(dp1) = S ∧ ed(dp1) < S −→ S st(dp1) < S ∧ ed(dp1) < S −→ B pt = I −→ 8>>>>>>>>>>><>>>>>>>>>>>: st(dp1) > I ∧ ed(dp1) > I −→ F st(dp1) > I ∧ ed(dp1) = I −→ 8<: ed(dp1) >p pt −→ F ed(dp1) =p pt −→ E ed(dp1) <p pt −→ I st(dp1) > I ∧ ed(dp1) < I −→ I st(dp1) = I ∧ ed(dp1) = I −→ 8>><>>: st(dp1) >p pt ∧ ed(dp1) >p pt −→ F st(dp1) >p pt ∧ ed(dp1) =p pt −→ E st(dp1) >p pt ∧ ed(dp1) <p pt −→ I st(dp1) =p pt ∧ ed(dp1) <p pt −→ S st(dp1) <p pt ∧ ed(dp1) <p pt −→ B st(dp1) = I ∧ ed(dp1) < I −→ 8<: st(dp1) >p pt −→ I st(dp1) =p pt −→ S st(dp1) <p pt −→ B st(dp1) < I ∧ ed(dp1) < I −→ B pt = E −→ 8>><>>: st(dp1) > E ∧ ed(dp1) > E −→ F st(dp1) > E ∧ ed(dp1) = E −→ E st(dp1) > E ∧ ed(dp1) < E −→ I st(dp1) = E ∧ ed(dp1) < E −→ S st(dp1) < E ∧ ed(dp1) < E −→ B pt = F −→ 8>>>>>><>>>>>>: st(dp1) = F ∧ ed(dp1) = F −→ 8>><>>: st(dp1) >p pt ∧ ed(dp1) >p pt −→ F st(dp1) >p pt ∧ ed(dp1) =p pt −→ E st(dp1) >p pt ∧ ed(dp1) <p pt −→ I st(dp1) =p pt ∧ ed(dp1) <p pt −→ S st(dp1) <p pt ∧ ed(dp1) <p pt −→ B st(dp1) = F ∧ ed(dp1) < F −→ 8<: st(dp1) >p pt −→ I st(dp1) =p pt −→ S st(dp1) <p pt −→ B\nst(dp1) < F ∧ ed(dp1) < F −→ B\nThis classifier looks a little cumbersome, but we decided to use it in this way, so that all impossible cases w.r.t. the ordering of the line are excluded. This gives better error handling capabilities in an implementation of it, since impossible cases can be detected. A more compressed version is possible, but it cannot detect impossible cases anymore. All cases that are not listed in the above classifier are cases where the ordering >p is not compatible with the segmentation, and so they are impossible. This is the only classifier for coinciding lines.\nThe third classifier is for parallel lines, i.e. a configuration like that in Fig. 19. Let the lower line be the line the dipole lies on. The information about the line on which the dipole lies is handled by a basic classifier which uses this primitive classifier and exchanges L and R appropriately. Fortunately this\nclassifier clpar(dp1, pt) is simple:\npos −→ R\nneg −→ L\nThis is the only classifier for parallel lines. This is a complete list of the basic classifiers that are needed."
    }, {
      "heading" : "3.4 Basic Classifiers",
      "text" : "Based on the primitive classifiers introduced in Sect. 3.3, we construct the basic classifiers to determine the DRA relations in scenarios. For DRAf , we always need exactly four primitive classifiers to determine the relation. For DRAfp , in some cases we need an additional fifth classifier to determine the qualitative angle. We will first focus on the DRAf case. Given a qcc, we apply four basic classifiers three times: namely (1) to the first and second abstract dipole, (2) to the second and third and (3) to the first and third. Thus, we obtain an entry in the composition table. Consider a qcc with i = 1+ and a(SA) = ŝAB , a(SB) = ŝAB and a(sC) = ŜAC . Such a configuration has a realization as in Fig. 20. The dipole dX lies on the ray lX for X ∈ {A,B,C}. We now apply\nprimitive classifiers to this scenario in the way defined in Section 2.1. Hence, we get the basic classifier for such a configuration:\nR(dpA, stB) = clis,s(dpA, stB) R(dpA, edB) = clis,s(dpA, edB) R(dpB , stA) = com ◦ clis,s(dpB , stA) R(dpB , edA) = com ◦ clis,s(dpB , edA)\nR(dpB , stC) = clie,e(dpB , stC) R(dpB , edC) = clie,e(dpB , edC) R(dpC , stB) = com ◦ clie,e(dpC , stB)\nR(dpC , stB) = com ◦ clie,e(dpC , edB)\nR(dpA, stC) = clie,s(dpA, stC) R(dpA, edC) = clie,s(dpA, edC) R(dpC , stA) = com ◦ clis,e(dpC , stA) R(dpC , edA) = com ◦ clis,e(dpC , edA)\nand we obtain the relation between dpA and dpB : %(R(dpA, stB), R(dpA, edB), R(dpB , stA), R(dpB , edA)). The relations between dB and dC as well as between dpA and dpC are derived analogously. The basic classifiers depend on the configuration in which the qcc realization lies and on the angle between the rays in the realization. They are constructed for an angle between the rays in the interval (π, 2 ·π]. If the angle is in the interval (0, π], the LR relation between any line on the first ray and a point on the second just swaps. We capture this by introducing the operation com which is applied in this case. With it, we can limit the number of necessary primitive classifiers. The construction of the other basic classifiers is done analogously.\n3.5 Extended Basic Classifiers for DRAfp For DRAfp , basically the same classifiers as described for DRAf in Section 3.4 are used. We simply extend them for the relations rrrr, rrll, llll and llrr to classify the information about qualitative angles. For this purpose, we have to have a look at the angles between dipoles in the realization of a given qcc. The qualitative angle between two dipoles dA and dB is called positive + (negative −) if the angle from the carrier ray of dA called lA to the carrier ray of dB called lB lies in the interval (0, π) ((π, 2 ·π)). We give an example of this. Consider the configuration of a DRA scenario in Fig. 21 on the left hand side. On the right-\nhand side of Fig. 21, the carrier rays are introduced and we can see that the angle clearly lies in the interval (0, π) and hence the qualitative angle is positive. The definitions of parallel P and anti-parallel A are straightforward. The set a−1(Ŝxy) always contains exactly two elements, if Ŝxy ∈ Ŝ(i). To continue, we need functions projx : P(P) −→ P(P) defined as\nprojx = {a | idxx(a) = x}\nwhich form the set of all elements with index (idx) x. P denotes powerset formation. By the definition of a and the sets Ŝ(i), these sets are always singletons, if projx ◦ a−1 is applied to an intersection point and if a−1 contains an element with index x, otherwise the set is empty. We shall write a−1x for projx ◦ a−1.\nWe observed that the qualitative angles between two dipoles can be classified very easily once the DRAf relations between the dipoles dA and dB are known. All we need to do is to find out if the ray lB intersects lA in front of or behind dA. In the language of qcc and abstract dipoles dpA and dpB , we can say that, if a−1A (ŜAB) > ed(dpA) for dir(dpA) = +, or if a −1 A (ŜAB) < ed(dpA), if dir(dpA) = −, then the abstract point of intersection lies “in front of dpA” and, if st(dpA) > a−1A (ŜAB) for dir(dpA) = + or a −1 A (ŜAB) > st(dpA) for dir(dpA) = −, the abstract point of intersection lies “behind dpA”.\nProposition 37. In a realization R(Q) of a qcc Q, the carrier rays of any two dipoles d1 and d2 intersect in front of d1 if and only if, in Q the property\n(a−11 (Ŝ12) > ed(dp1) ∧ dir(dp1) = +) ∨ (a −1 1 (Ŝ12) < ed(dp1) ∧ dir(dp1) = −)\nis fulfilled.\nProof. This is immediate by inspection of the property and respective scenarios.\nProposition 38. In a realization R(Q) of a qcc Q, the carrier rays of any two dipoles d1 and d2 intersect behind d1 if and only if, in Q the property\n(st(dp1) > a−11 (Ŝ12) ∧ dir(dp1) = +) ∨ (a −1 1 Ŝ12 > st(dp1) ∧ dir(dp1) = −)\nis fulfilled.\nProof. This is immediate by inspection of the property and respective scenarios.\nThe complete extension for the Basic Classifiers is given as:\nrrrr −→  a−1A (ŜAB) > ed(dpA) ∧ dir(dpA) = + −→ − a−1A (ŜAB) < ed(dpA) ∧ dir(dpA) = − −→ − st(dpA) > a−1A (ŜAB) ∧ dir(dpA) = + −→ + a−1A (ŜAB) > st(dpA) ∧ dir(dpA) = − −→ +\nrrll −→  a−1A (ŜAB) > ed(dpA) ∧ dir(dpA) = + −→ + a−1A (ŜAB) < ed(dpA) ∧ dir(dpA) = − −→ + st(dpA) > a−1A (ŜAB) ∧ dir(dpA) = + −→ − a−1A (ŜAB) > st(dpA) ∧ dir(dpA) = − −→ −\nllll −→  a−1A (ŜAB) > ed(dpA) ∧ dir(dpA) = + −→ + a−1A (ŜAB) < ed(dpA) ∧ dir(dpA) = − −→ + st(dpA) > a−1A (ŜAB) ∧ dir(dpA) = + −→ − a−1A (ŜAB) > st(dpA) ∧ dir(dpA) = − −→ −\nllrr −→  a−1A (ŜAB) > ed(dpA) ∧ dir(dpA) = + −→ − a−1A (ŜAB) < ed(dpA) ∧ dir(dpA) = − −→ − st(dpA) > a−1A (ŜAB) ∧ dir(dpA) = + −→ + a−1A (ŜAB) > st(dpA) ∧ dir(dpA) = − −→ +\nConstructing the classifiers for qccs based on configurations with parallel lines is easy, depending on the DRAf -relations, the dipoles can either be parallel or anti-parallel in such cases, but never both at the same time.\nLemma 39. Given two intersecting lines, the LR-relations between a dipole on a first line and a point on the second line are stable under the movement of the point along the line, unless it moves through the point of intersection of the two lines.\nProof. By the definition of LR-relations, the point can be in one of three different relative positions to the carrier ray of the dipole. The point can lie on either side of the point of intersection, yielding the relation L or R, or on the point of intersection itself, yielding exactly one relation on the line.\nLemma 40. Given a dipole and a point lying on its carrier line, the LRrelations between the dipole and point are stable under the movement of the point along the line, unless it is moved over the start or end point of the dipole.\nProof. Inspect the definition of LR-relations on a line.\nLemma 41. For dipoles lying on intersecting rays, the DRA relations are stable under the movement of the start and end points of the dipoles along the rays, as long as the segments for the start and end points and the directions of the dipoles do not change.\nProof. We observe that the segmentation is a stronger property than the one used in Lemma 39. For DRAf relations it suffices to apply Lemma 39 four times. For DRAfp relations, we also need to take the intersection property of Prop. 46 into account.\nLemma 42. For dipoles on the same line, the DRA-relations are stable under the movement of the start and end points of the dipoles along the rays, so long as the relation <r does not change.\nProof. Apply Lemma 40 four times.\nLemma 43. 1. Transforming a given realization of a qcc along an orientation-preserving affine transformation preserves the segmentation map.\n2. If two dipoles are on the same line, affine transformations also preserve <r.\nProof. 1) According to Prop. 28, any orientation-preserving affine transformation preserves the LR relations. 2) This follows from the preservation of length ratios by affine transformations, i.e. the length ratios between the start and end points of the dipoles and points S and E on the ray.\nLemma 44. Given a qcc, any two geometric realizations exhibit the same DRArelations among their dipoles.\nProof. Let two geometric realizations R1, R2 of a qcc Q be given. Since the line triples of R1 and R2 belong to the same orbit, there is an orientationpreserving affine bijection f transforming the line triple of R into that of R′. In case of configurations 5a, 5b and 5c, we assume that all distance ratios are adjusted to 1 in order to reach the same orbit. Note that this adjustment, although not an affine transformation, does not affect the relations between dipoles.\nSince f maps R1’s line triple to R2’s line triple, it also maps the corresponding points of intersection to each other. For orbits 1+ and 1−, all segmentation points are points of intersection. Hence, f does not change the segments given by r(x) in which the start and end points of the dipoles lie. For the rest of the argument, apply Lemma 41.\nFor cases 2+ and 2−, we just have a single point of intersection, but the relative directions of the rays are restricted by the definition of a realization and so is the location of all segmentation points w.r.t. the intersection point, as are the locations of the start and end points of the dipoles w.r.t. the segmentation points. For the rest of the argument, apply Lemma 41.\nIn cases 3a, 3b and 3c, we have two intersection points and two segmentation points that are not points of intersection but, as before, the directions of the rays and the locations of all segmentation points are restricted and hence the locations of the start and end points of the dipoles, and again, we can apply Lemma 41.\nIn cases 4a, 4b and 4c, we have one point of intersection and 3 segmentation points that are not points of intersection. First, we can argue to restrict the location and direction. In the end, we can apply Lemma 42 and Lemma 41.\nIn cases 5a, 5b and 5c, we only have segmentation points that are not points of intersection, but all rays have the same directions and the relative orientations of segmentation points on the line are restricted. Hence, the directions of the dipoles do not change during the mapping and the relative direction between\ndipoles is all that is necessary to determine their DRA-relations in the case of parallel dipoles.\nThe proof of cases 6a, 6b and 6c is similar to cases 4 and 5, with the argument based on Lemma 42 for dipoles on the same line, and the arguments of cases 5 for parallel lines.\nFor case 7, we need to apply Lemma 42. For additional arguments for DRAfp-relations, please refer to the proof of\nProp. 46.\nTheorem 45 (Correctness of the Construction). Given a qcc Q and an arbitrary geometric realization R(Q) of it, the DRAf relation in R(Q) is the same as that computed by the basic classifiers on Q.\nProof. According to Lemma 44, we can focus on one geometric realization per qcc.\nFor this proof, we need to inspect once more the construction of the basic classifiers above the primitive classifiers. The actual values of a, dir and the start and end points of the abstract dipoles as well as the order <p are not directly used by basic classifiers19. They are passed through to primitive classifiers. The only information that is directly used in basic classifiers is the identifier i of the configuration.\nWe divide this proof in two steps. In the first step, we show that the primitive classifiers are correct and, in the second step, we do the same for basic classifiers. We will show a proof for the classifier cliS,S(dp1, pt) and a pqcc with dirdp1 = +, dp1 = (I, I) and pt = I. A realization of this configuration is shown in Fig. 22 and we can easily see that d1Rpt has to be true. By observing cliS,S(dp1, pt),\nwe see that we are in the case pos and that pt > S and so the primitive classifier also yields dp1 R pt as expected. All other proofs for pqccs are done in an analogous way by inspection of the relations yielded by the primitive classifiers and their realizations. With primitive classifiers working correctly, we need to focus on the basic classifiers. Here, we will show this for the case i = 1+, all other cases are handled in an analogous fashion. First we take any realization of i = 1+ and add directions to the lines as described in the section about\n19With the exception of the extended classifiers, but we will discuss these later\ngeometric realizations of qccs. For example, the one depicted in Fig. 23. In the\nnext step, this realization is decomposed according to the definition of DRAf - relations and the basic classifiers shown in Fig. 24. The various parts of the\ndecomposed line configuration need to be matched with the realization of the primitive classifier, here the realization of Fig. 17. In our case, the classifier matches directly with the orientations from lA to lB , lB to lC and lA to lC . In the other cases, the angle between the lines may be inverted. Then, we need to swap R and L which is done by the operation com. Furthermore, we see that the lines lC and lB both intersect in segment E, whereas lA and lB intersect both in S. The intersection for lA and lC is E for lA and S for lC , we need to parameterize the respective primitive classifiers with that information. But in the end, our arguments yield exactly the basic classifier shown in Section 3.4. The arguments for the other 16 basic classifiers are analogous.\nProposition 46. Given any qcc Q and its geometric realization R(Q), the extended basic classifiers determine the same DRAfp relation as in the realization.\nProof. We assume that the DRAf relation is determined correctly. All we need to consider here are the “extended” relations.\nWe will give the proof for rrrr-, the proof for the other cases is analogous. Consider two dipoles dA and dB in an rrrr configuration on the rays lA and\nlB . There are two classes of qualitatively distinguishable configurations for (dA rrrr dB):\nWe can see that lB intersects lA either in front of or behind dA. If the intersection point lies in front of dA, we are in a situation like\nwhere S is the intersection point. We can further see that the angle from lA to lB lies clearly in the interval (π, 2 · π). Furthermore, lB can be rotated in the whole interval (π, 2 · π) without changing the DRAf relation. Using this, we obtain the DRAfp-relation rrrr- between dA and dB if the point of intersection S lies in front of dA. For any qcc belonging to such a scenario, the rest of the proof follows from Prop. 37 and Prop. 38 as well as the inspection of the extended classifiers:\nŜAB > ed(dpA) ∧ dir(dpA) = + −→ − ŜAB < ed(dpA) ∧ dir(dpA) = − −→ −\nBut these also yield (dpA rrrr- dpB). By the same arguments, we show that (dA rrrr+ dB) if the point of intersection of lA and lB lies behind dA. The proof for all other cases is analogous.\nCorollary 47. The 72 relations in Fig. 3 are those out of the 2401 formal combinations of four LR letters that are geometrically possible.\nProof. By an exhaustive inspection of the primitive classifiers which occur in the basic classifiers for all pqccs. For the decomposition, we refer to the proof of Thm. 45.\nTheorem 48. Given a qcc Q and an arbitrary geometric realization R(Q) of it, the DRAfp relation in R(Q) is the same as that computed by the basic classifiers on Q.\nProof. Follows from Thm. 45 and Prop. 46."
    }, {
      "heading" : "3.6 Implementation of the Classification Procedure",
      "text" : "Qualitative composition configurations can be naturally represented as a finite datatype. The classifiers are implemented as simple programs (mainly case distinctions) that operate on qccs in the sense of Def. 29. The classifiers are chosen with respect to the identifier i and the assignment mapping a of the qcc. In our particular implementation, we exploited some symmetries to limit the number of classifiers that we had to implement.\nWith the condensed semantics, we are able to compute the composition tables of the DRA calculi in an efficient way. In fact we have implemented the computation of composition tables for both DRAf and DRAfp as Haskell programs, making use of Haskell’s parallelism extensions. The Haskell implementations of the basic classifiers for DRAf and DRAfp are written in such a way that they share a library of primitive classifiers. In these programs, we further generate all qccs in an optimized way, i.e. we only generate the order <p if it is needed, and classify them with our basic classifiers. In the end, we compose our results into composition tables. For the case where three lines are collinear, we simply decided to enumerate all possible locations of points in a certain interval for reasons of simplicity and this did not increase the overall runtime too much.\nThe computation of the composition table for DRAf takes less than one minute on a Notebook with an Intel Core 2 T7200 with 1.5 Gbyte of RAM, and the computation of the composition table for DRAfp takes less than two minutes on the same computer. This is a great advancement compared to the enumeration of scenarios on a grid, which took several weeks to compute only an approximation to the composition table."
    }, {
      "heading" : "3.7 Properties of the Composition",
      "text" : "We have investigated several properties of the composition tables for DRAf and DRAfp . For both tables the properties\nid^ = id (R^)^ = R id ◦R = R R ◦ id = R\n(R1 ◦R2)^ = R^2 ◦R^1 R^1 ∈ R2 ◦R3 ⇐⇒ R^3 ∈ R1 ◦R2\nhold with R, R1, R2, R3 being any base-relation and id the identical relation. These properties can be automatically tested by the GQR and SparQ qualitative reasoners. The other properties for a non-associative algebra follow trivially. Furthermore, we have tested the associativity of the composition. For DRAf , we have 373248 triples of relations to consider of which 71424 are not associative. So the composition of 19.14% of all possible triples of relations is not\nassociative20, e.g.\n(rrrl; rrrl); llrl 6= rrrl; (rrrl; llrl).\nForDRAfp all 512000 triples of base-relations are associative w.r.t. composition. With this result, we obtain that DRAfp is a relation algebra in a strict sense.\n3.8 DRAf composition is weak The failure of DRAf to be associative may imply that its composition is also weak. We will investigate this in this section. First, recall the definition of strong composition. Furthermore, the composition of OPRA1 is known to be weak [49], but by Ex. 19 and Prop. 20, then DRAf also has a weak composition.\nDefinition 49. A Qualitative Composition is called strong if, for any arbitrary pair of objects A, C in the domain in relation AracC, there is for every entry in the composition table that contains AracC on the right hand side, an object B such that ArabB and BrbcC reconstruct this entry.\nWe will show now that the defining property of strong composition (see Sect. 2.3) is violated for DRAf .\nProposition 50. The composition of DRAf is weak.\nProof. Consider the DRAf composition A BFII B;B LLLB C 7→ A LLLL C. We show that there are dipoles A and B such that there is no dipole B which reflects the composition. Consider dipoles A and B as shown in Fig. 25. We observe that they are in the DRAfp relation LLLL- with the dipole\nC pointing towards the line dipole A lies on. Because of A BFII B, dipole B has to lie on the same line as A. But, since C is a straight line and lines A and B lie in front of C, the endpoint of B cannot lie behind C.\nAs expected, the composition of DRAf turns out to be weak. Let us have a closer look at the composition of DRAfp in the next section.\n20In the master thesis of one of our students, a detailed analysis of a specific non-associative dipole configuration is presented [57]"
    }, {
      "heading" : "3.9 Strong Composition",
      "text" : "We are now going to prove that DRAfp has a strong composition. The following lemma will be crucial; note that it does not hold for DRAf .\nLemma 51. Let R be a DRAfp base relation. For DRAfp base relations R not involving parallelism or anti-parallelism, betweenness and equality among {sA, eA, SA,B}21 for given dipoles ARB are independent of the choice of A and B, hence uniquely determined by R alone.\nProof. Let R = r1r2r3r4r5, where r5 ∈ {+,−} even if r5 this is omitted in the standard notation. Note that the assumption r5 ∈ {+,−} implies that SA,B is defined. If r3 ∈ {b, s, i, e, f}, eA 6= sA = SA,B , hence there is no betweenness. Analogously, sA 6= eA = SA,B if r4 ∈ {b, s, i, e, f}. The remaining possibilities for r3r4r5 are:\n1. ll+, rr-: in these cases, eA is between sA and SA,B ;\n2. ll-, rr+: in these cases, sA is between eA and SA,B ;\n3. rl-, lr+: in these cases, SA,B is between sA and eA.\nNote that cases 1 and 2 cannot be distinguished in DRAf .\nCorollary 52. Let R be a DRAfp base relation not involving parallelism or anti-parallelism. Let ARB and A′RB′. Then, the map {sA 7→ sA′ ; eA 7→ eA′ ;SA,B 7→ SA′,B′} preserves betweenness and equality.\nLemma 53. Let R be a DRAfp base relation not involving parallelism or antiparallelism. Given dipoles ARC and A′RC ′ and points pA, pA′ , pC and pC′\n21Please remember that sA = st(dpA) and eA = ed(dpA).\non the lines carrying A, A′, C and C ′ respectively, if the maps {sA 7→ sA′ , eA 7→ eA′ , SA,C 7→ SA′,C′ , pA 7→ pA′} and {sC 7→ sC′ , eC 7→ eC′ , SA,C 7→ SA′,C′ , pC 7→ pC′} preserve betweenness and equality, then the angles ∠( −−−−−→ SA,C pA, −−−−−→ SA,C pC) and ∠(−−−−−→SA,C pA, −−−−−→ SA,C pC) have the same sign.\nProof. Since ARC and A′RC ′, the angles ∠(−−−→sA eA,−−−→sC eC) and ∠(−−−−→sA′ eA′ ,−−−−→sC′ eC′) have the same sign. By the assumption of the preservation of betweenness and equality, this carries over to angles ∠(−−−−−→SA,C pA, −−−−−→ SA,C pC) and ∠(−−−−−→SA,C pA, −−−−−→ SA,C pC).\nTheorem 54. Composition in DRAfp is strong.\nProof. Let rac ∈ rab ◦ rbc be an entry in the composition table, with rac, rab and rbc base relations. Given dipoles A and C with AracC, we need to show the existence of a dipole B with ArabB and BrbcC.\nSince rac ∈ rab ◦ rbc, we know that there are dipoles A′, B′ and C ′ with A′rabB\n′, B′rbcC ′ and A′racC ′. Given dipoles X and Y , let SX,Y denote the point of intersection of the lines carrying X and Y ; it is only defined if X and Y are not parallel. Consider now the three lines carrying A′, B′ and C ′, respectively. According to the results of Section 3.1, for the configuration of these three lines, there are fifteen qualitatively different cases 1, 2, 3a, 3b, 3c, 4a, 4b, 4c, 5a, 5b, 5c, 6a, 6b, 6c and 7:\n1. The three points of intersection SA′,B′ , SB′,C′ and SA′,C′ exist and are different. Since AracC and A′racC ′, by Corollary 51, the point sets {sA, eA, SA,C} and {sA′ , eA′ , SA′,C′} are ordered in corresponding ways on their lines. Hence, it is possible to choose SA,B in such a way that the point sets {sA, eA, SA,C , SA,B} and {sA′ , eA′ , SA′,C′ , SA′,B′} are ordered in corresponding ways on their lines. In a similar way (interchanging A and C), SB,C can be chosen.\nSince both {SA,B , SA,C , SB,C} and {SA′,B′ , SA′,C′ , SB′,C′} are affine bases, there is a unique affine bijection h: R2 −→ R2 with h(SA′,B′) = SA,B , h(SA′,C′) = SA,C and h(SB′,C′) = SB,C . By Lemma 53, h preserves orientation, and thus by Thm. 28 also the DRAfp relations. Hence, by choosing B = h(B′), we get h(A′)rabB and Brbch(C ′). Since the sets\n{sA, eA, SA,C , SA,B} and {h(sA′), h(eA′), SA,C , SA,B} are on the same line and have corresponding qualitative (betweenness) relations, and the same holds for the sets {sC , eC , SA,C , SB,C} and {h(sC′), h(eC′), SA,C , SB,C}, we also have ArabB and BrbcC (even though h(A′) = A and h(C ′) = C do not necessarily hold).\n2. The three intersection points SA′,B′ , SB′,C′ and SA′,C′ exist and coincide, i.e. SA′,B′ = SB′,C′ = SA′,C′ =: S′. Let S = SA,C . Let xA be sA and xA′ be sA′ if sA 6= S (and therefore sA′ 6= S′), otherwise, let xA be eA and xA′ be eA′ . xC and xC′ are chosen in a similar way. Since both {S, xA, xC} and {S′, xA′ , xC′} are affine bases, there is a unique affine bijection h: R2 −→ R2 with h(S′) = S, h(xA′) = xA and h(xC′) = xC . The rest of the argument is similar to case (1).\n3. (Two lines are parallel and intersect with the third one.) In the sequel, we will just specify how two affine bases are chosen; the rest of the argument (as well as the choice of points on the unprimed side in such a way that qualitative relations are preserved) is then similar to the previous cases. Subcases (3a), (3b): The lines carrying A and C intersect. Choose xA and xA′ as in case (2), and chose an appropriate point SB,C . Then use the affine bases {xA, SA,C , SB,C} and {xA′ , SA′,C′ , SB′,C′}. Subcase (3c): The lines carrying A and C are parallel. Choose appropriate points SA,B and SB,C and use the affine bases {sA, SA,B , SB,C} and {sA′ , SA′,B′ , SB′,C′}.\n4. (Two lines are identical and intersect with the third one.) Subcases (4a) and (4b): The lines carrying A and C intersect. Choose xA, xA′ , xC and xC′ as in case (2) and use the affine bases {SA,C , xA, xC} and {SA′,C′ , xA′ , xC′}. Subcase (4c): The lines carrying A and C are identical. This means that SA′,B′ = SA′,C′ =: S′. Choose an appropriate point S and xA, xA′ as in case (2). Moreover, in a similar way, choose xB′ 6= S′, and then some corresponding xB being in the same LR-relation to A as xB′ has to A′. Then use the affine bases {S, xA, xB} and {S, xA′ , xB′}.\n5. (All three lines are distinct and parallel.) Subcases (5a), (5b) and (5c) can all be treated in the same way: Use the affine bases {sA, eA, sC} and {sA′ , eA′ , sC′}. Note that the distance ratio does not matter here.\n6. (Two lines are identical and are parallel to the third one.) Subcases (6a) and (6b): The lines carrying A and C are parallel. Proceed as in case (5). Subcase (6c): The lines carrying A and C are identical. Choose some sB in the same LR-relation to A as sB′ is to A′. Then use the affine bases {sA, eA, sB} and {sA′ , eA′ , sB′}.\n7. (All three lines are identical.) For this case, the result follows from the fact that Allen’s interval algebra has strong composition (refer to [26]).\nCorollary 55. Composition in DRAopp is strong as well.\nProof. By Example 19 and Prop. 20."
    }, {
      "heading" : "4 Constraint Reasoning with the Dipole Calcu-",
      "text" : "lus"
    }, {
      "heading" : "4.1 Consistency",
      "text" : "We now consider the question of whether algebraic closure decides consistency. We call the set of constraints between all dipoles at hand a constraint network. If no constraint between two dipoles is given, we agree that they are in the universal relation. By scenario, we denote a constraint network in which all constraints are base-relations22. We construct constraint-networks which are geometrically unrealizable but still algebraically closed. We do this by constructing constraint networks that are consistent and algebraically closed, and then we will change a relation in them in such a way that they remain algebraically closed but become inconsistent. We follow the approach of [58] in using a simple geometric shape for which scenarios exist, where algebraic closure fails to decide consistency. In our case, the basic shape is a convex hexagon, similar to a screw head.\nConsider a convex hexagon consisting of the dipoles A, B, C, D, E and F . Such an object is described as\n(A errs B)(B errs C)(C errs D)(D errs E)(E errs F )(F errs A)\nwhere the components r of the relations ensure convexity, since they enforce an angle between 0 and π between the respective first and second dipole, i.e., the endpoint of consecutive dipoles always lies to the right of the preceding dipole. Such an object is given in Fig. 26 To this scenario we add a seventh dipole G with the relations\n(G rrll A)(G lrll F )(G llrr D)(G rlrr C)\nWe have the overall constraint network:\n(A errs B)(B errs C)(C errs D)(D errs E)(E errs F )(F errs A) (G rrll A)(G lrll F )(G llrr D)(G rlrr C)\nBecause of the relations (G lrll F ) and (G rlrr C), line lG intersects line lF as well as line lC . Because of the first two components of the relations, dipoles F and C are oriented into qualitatively antipodal directions. This network is consistent and is of course algebraically closed.\n22In this case, a base-relation between every pair of distinct dipoles has to be provided\nTo construct an inconsistent network, we change the relation (G rlrr C) to (G rlll C) and obtain the constraint network:\n(A errs B)(B errs C)(C errs D)(D errs E)(E errs F )(F errs A) (G rrll A)(G lrll F )(G llrr D)(G rlll C)\nThe relations (G rlll C) and (G lrll F ) enforce that G must lie in between F and C as shown in Fig. 27. In this case, the all convex hexagons A, B, C, D,\nE, F have the endpoints of consecutive dipoles lying to the left of the preceding one, they are of the form:\n(A ells B)(B ells C)(C ells D)(D ells E)(E ells F )(F ells A)\nwhich is a contradiction of the required form of hexagon in the scenario. In fact there is no affine transformation which preserves the relative orientations between dipoles A, B, C, D, E, F , and maps a hexagon of Fig. 26 to any that can be constructed along dipoles C and F in Fig. 27 in such a way that the edges C and F of both hexagons coincide. Still algebraic closure with DRAf\nyields the refinement:\n(F lllr G)(E (flll, llll, rfll, rlll, rrll) G)(D errs E)(D rrll G) (D (rbrr, rllr, rlrr, rrrr) F )(C llrl G)(C (lrrl, rllr) F )(E errs F ) (C (rllr, rrfr, rrlr, rrrr) E)(C errs D)(B (llrr, rrrr) G) (B (blrr, llll, llrf, llrl, llrr, rfll, rlll, rlrr, rrbl, rrll, rrrl, rrrr) E) (B (rbrr, rlrr, rrfr, rrlr, rrrr) D)(B errs C)(A llrr G)(A rser F ) (A (frrr, lrrr, rrrb, rrrl, rrrr) E)(A (rllr, rlrr, rrrr) C) (A (lfrr, llbr, llll, lllr, llrr, lrll, lrrr, rrlf, rrll, rrlr, rrrr) D) (B (frrr, lrrl, lrrr, rrrr) F )(A errs B)\nA scenario,\n(F lllr G)(E flll G)(E errs F )(D rrll G)(D rrrr F )(D errs E) (C llrl G)(C rllr F )(C rrlr E)(C errs D)(B llrr G)(B lrrl F ) (B llrl E)(B rlrr D)(B errs C)(A llrr G)(A rser F )(A rrrr E) (A lrrr D)(A rllr C)(A errs B)\ncan be derived from this algebraically closed network. It is still deemed algebraically closed, even though it is not consistent with the same argument given above. Hence algebraic closure does not decide consistency for DRAf -scenarios. On the other hand, algebraic closure with DRAfp detects all possible extensions of this network to that calculus as being inconsistent. Extending the consistent case with the relation (G rlrr C) yields three possible extensions for DRAfp scenarios, of which all are consistent. In fact, we get the three following consistent refinements.\nDRAf -relation refinement1 refinement2 refinement3 (G rrll A) (G rrll- A) (G rrll- A) (G rrll- A) (G llrr D) (G llrr- D) (G llrr+ D) (G llrrP D)\nWe have found an example that shows that algebraic closure for DRAfp finds inconsistencies in constraint networks where it fails for DRAf . Does algebraic closure for DRAfp decide consistency? We can also give a negative result for this. To construct a counterexample, we begin with a configuration as in Fig. 28 We ensure with the constraints\n(A errs B)(B errs C)(C errs D)(D errs E)(E errs F )(F errs A)\nthat the dipoles A, B, C, D, E and F form a convex hexagon. Furthermore, we ensure that the dipoles I, H and G form a continuous line by\n(I efbs H)(H efbs G).\nThe constraints (F rrrl I)(C rrlr G)\nstate that the line has to lie inside the hexagon, since its start point and end point lie inside. To construct the counterexample, we just claim that the end\npoint of H lies outside the hexagon by (A rllr H), i.e. the lines A and H intersect, this is a contradiction of the convexity of the hexagon. This network can be refined to a scenario\nSCEN := (H efbs G)(I ffbb G)(I efbs H)(F rrrl G)(F rrrl H) (F rrrl I)(E rrrr- G)(E rrrr- H)(E rrrr- I) (E errs F )(D rrrrA G)(D rrrrA H)(D rrrrA I) (D rrrr- F )(D errs E)(C rrlr G)(C rrlr H) (C rrlr I)(C rrlr F )(C rrrr+ E)(C errs D) (B rrrl G)(B rrrl H)(B rrrl I)(B lrrl F ) (B llrr- E)(B rlrr D)(B errs C)(A lllr G) (A rllr H)(A rrlr I)(F errs A)(A rrrrA E) (A lrrr D)(A rlrr C)(A errs B).\nwhich is still algebraically closed w.r.t. DRAfp , even though it is not consistent. We see that algebraic-closure does not decide consistency even for DRAfpscenarios.\nWe have run several tests to get some quantitative information on how much better the DRAfp calculus performs with respect to the DRAf calculus. We have generated several scenarios of size ≤ n with n ∈ {30, 40, 50, 60, 70} randomly to obtain this information. It turns out that a number of 10 n 10+1 scenarios yield usable data. In fact, we have generated DRAfp scenarios and checked them with an algebraic reasoner, then we have projected them to DRAf and checked these with the same reasoner. In the end, we compared the per-scenario results. The results are as follows:\nScenarios 10000 100000 1000000 10000000 100000000 Maximum Size 30 40 50 60 70 Algebraically Closed 691 5295 40820 346164 3048063 A-closed w.r.t. DRAf only 11 149 1061 8839 78792 A-closed w.r.t. DRAfp only 0 0 0 0 0\nRoughly 2.5% of the scenarios that are algebraically closed w.r.t. to DRAf are not algebraically closed w.r.t. DRAfp . Still, for the smallest checked maximum scenario size 30 the factor is only 1.5%.\nWe also investigate the question if algebraic closure decides consistency for DRAop and DRAopp .\nProposition 56. For DRAopp algebraic closure does not decide consistency.\nProof. This proof is inspired by the one that shows that algebraic closure does not decide consistency for OPRA (ref. to [49]). Consider a DRAopp constraint network in three points A, B and C as shown in Fig. 29. Both A and B point at C. These three points are in the relations:\nA LEFTright- B A FRONTleft C B FRONTleft C.\nWe add a point D to our constraint satisfaction problem with C RIGHTleftP D. We claim that D also lies in front of A and B by introducing the constraints A FRONTleft D and B FRONTleft D. By inspecting the composition table of DRAopp , we can see that it is consistent. Since by the constraint A LEFTright- B the points A and B are not collinear, D has to lie on the intersection point of the rays lA and lB , but by A FRONTleft C and B FRONTleft C, C also has to lie on that intersection point. Hence, C and D have to have the same position, what is a contradiction to the constraint C RIGHTleftP D. Hence this scenario is algebraically closed, but inconsistent.\nProposition 57. For DRAop algebraic closure does not decide consistency.\nProof. This proof is analogous to the one of Prop. 56, with substituting LEFTright- by LEFTright and RIGHTleftP by RIGHTleft."
    }, {
      "heading" : "5 A Sample Application of the Dipole Calculus",
      "text" : "In this section, we want to demonstrate with an example how spatial knowledge expressed in DRAfp can be used for deductive reasoning based on constraint\npropagation (algebraic closure), resulting in the generation of useful indirect knowledge from partial observations in a spatial scenario. In our sample application, a spatial agent (a simulated robot, cognitive simulation of a biological system etc.) explores a spatial scenario. The agent collects local observations and wants to generate survey knowledge.\nFig. 30 shows our spatial environment. It consists of a street network in which some streets continue straight after a crossing and some streets run parallel. These features are typical of real-world street networks. Spatial reasoning in our example uses constraint propagation (e.g. algebraic closure computation) to derive indirect constraints between the relative location of streets which are further apart from local observations between neighboring streets. The resulting survey knowledge can be used for several tasks including navigation tasks.\nThe environment is represented as streets si and crossings Cj . The streets and crossings have unique names (e.g. s1, ... , s12, and C1, ..., C9 in one concrete example). The local observations are modeled in the following way, based on specific visibility rules (we want to simulate prototypical features of visual perception): Both at each crossing and at each straight street segment we have an observation. At each crossing the agent observes the neighboring crossings. At the middle of each straight street segment the agent can observe the direction of the outgoing streets at the adjacent crossings (but not at their other ends). Two specific examples of observations are marked in Fig. 30. The observation ”s1 errs s7” is marked green at crossing C1. The observation ”s8 rrllP s9” is marked red at street s4.\nThese observations relate spatially neighboring streets to each other in a pairwise manner, using DRAfp base relations. The agent has no additional knowledge about the specific environment. The spatial world knowledge of the agent is expressed in the converse and composition tables of DRAfp .\nThe following sequence of partial observations could be the result of a tour made by the spatial agent, exploring the street network of our example (see Fig. 30):\nObservations at crossings\nC1: (s7 errs s1) C2: (s1 efbs s2) (s8 errs s2) (s1 rele s8) C3: (s2 rele s9) C4: (s10 efbs s7) (s10 errs s3) (s7 srsl s3) C5: (s3 efbs s4) (s11 efbs s8) (s11 errs s4) (s3 ells s8)\n(s3 rele s11) (s8 srsl s4) C6: (s12 efbs s9) (s4 ells s9) (s4 rele s12) C7: (s10 srsl s5) C8: (s5 efbs s6) (s5 ells s11) (s11 srsl s6) C9: (s6 ells s12)\nObservations at streets\ns1: (s7 rrllP s8) s2: (s8 rrllP s9) s3: (s10 rrllP s11) s4: (s11 rrllP s12) s8: (s3 llrr- s1) s9: (s4 llrr- s2) s10:(s3 rrll- s5) s11:(s4 rrll- s6)\nThe result of the algebraic closure computation/constraint propagation is a refined network with the same solution set (the results are computed with the publicly available SparQ reasoning tool supplied with our newly computed DRAfp composition table [50]). We have listed the results in the appendix. Three different models are the only remaining consistent interpretations (see the appendix for a list of all the resulting data). The three different models agree on all but four relations. The solution set can be explained with the help of the diagram in Fig. 31. The input crossing observations are marked\nwith green arrows, the input street observations are marked with red arrows. The result shows that for all street pairs which could not be observed directly, the algebraic closure algorithm deduces a strong constraint/precise information. Typically, the resulting spatial relation between street pairs comprises just one DRAfp base relation. The exception consists of four relations between streets in which the three models differ (marked with dashed blue arrows in Fig. 31). For these four relations each model from the solution set agrees on the same DRAf base relation for a given relation, but the three consistent models differ on the finer granularity level of DRAfp base relations. Since the refinement of one of these four underspecified relations on a single interpretation (DRAfp base relation) as a logical consequence also assigns a single base relation to the other three relations, only three interpretations are valid models. The uncertainty/indeterminacy is the result of the specific street configuration in our example. The streets in a North-South direction are parallel, but the streets in an East-West direction are not parallel resulting in fewer constraint composition results. However, the small solution set of consistent models agrees on most of the relative position relations between street pairs and the differences between models are small. In our judgement, this means that the system has generated the relevant survey knowledge about the whole street network from local observations alone."
    }, {
      "heading" : "6 Summary and Conclusion",
      "text" : "We have presented different variants of qualitative spatial reasoning calculi about oriented straight line segments which we call dipoles. We have derived calculi for oriented points from dipole calculi, which turned out to be isomorphic to some versions of the OPRA calculi. These spatial calculi provide a basis for representing and reasoning about qualitative position information in intrinsic reference systems.\nWe have computed the composition table for dipole calculi by a new method based on the algebraic semantics of the dipole relations. We have used a socalled condensed semantics which uses the orbits of the affine group GA(R2) to provide an abstract symbolic notion of qualitative composition configuration. This can be used to compute the composition table in a computer-assisted way. The correctness of this computation is ensured by letting the computer program directly operate with qualitative composition configurations.\nThis has been the first computation of the composition table for DRAfp . So far, only composition tables for DRAc and DRAf exist, which contain many errors [59]. We have analysed the algebraic features of the various dipole calculi. We have proved the result that DRAfp has strong composition. This is an interesting result, because in this case an application-motivated calculus extension has been found to also have a certain mathematical elegance. Moreover, the strength of composition carries over to DRAopp , the OPRA variant introduced in this paper. This transfer of properties from one calculus to another calculus is an important new general result on quotients of qualitative calculi. To our\nknowledge, also the notion of quotient of a qualitative calculus (defined using methods from universal algebra) appears for the first time in this paper.\nWe have demonstrated a prototypical application of reasoning about qualitative position information in relative reference systems. In this scenario about cognitive spatial agents and qualitative map building, coarse locally perceived street configuration information has to be integrated by constraint propagation in order to get survey knowledge. The well-known path-consistency method which is implemented with standard QSR tools can make use of our new dipole calculus composition table and compute the desired result in polynomial time. Such concrete but generalizable application scenarios for relative position calculi are the more important since a recent result by Wolter and Lee [27] showed that relative position calculi are intractable even in base relations. For this reason, it is necessary to gain experience in which application contexts the unavoidable approximate reasoning is effective and produces relevant inference results. With our street network example, we have a test case which puts emphasis on deriving implicit knowledge as the output of qualitative spatial reasoning based on observed data. This is a prototypical application scenario which in the future can also be applied to other relative position calculi.\nSince the observed data in the case of error-free perception leads to consistent input constraints, the general consistency problem can be avoided – we instead rely on logical consequence. Now both problems are intractable and need to be approximated using algebraic closure; however, in our setting, approximate losses are less harmful, since we do not risk working with inconsistent scenarios.\nOur future work will address the question of how in general the quality of approximations for relative position reasoning can also be assessed with quantitative measures. Another part of our future QSR research will apply our new condensed semantics method to other calculi."
    }, {
      "heading" : "Acknowledgment",
      "text" : "The authors would like to thank Diedrich Wolter, Jochen Renz, Frank Dylla, Christian Freksa, Franz Kalhoff, Stefan Wölfl, Lutz Schröder, and Brandon Bennett for interesting and helpful discussions related to the topic of the paper. Our work was supported by the DFG Transregional Collaborative Research Center SFB/TR 8 “Spatial Cognition”."
    }, {
      "heading" : "Appendix: Computation for the street network",
      "text" : "application with the SparQ tool\nIn this appendix, we demonstrate how to use the publicly available SparQ QSR toolbox [50] to compute the algebraic closure by constraint propagation for the street network example from Section 5. For successful relative position reasoning, the SparQ tool has to be supplied with our newly computed DRAfp composition table [50].\nThe local street configuration observations by the spatial agent are listed in Section 5. The direct translation of these logical propositions into a SparQ spatial reasoning command looks as follows23:\nsparq constraint-reasoning dra-fp path-consistency \"( (s7 errs s1) (s1 efbs s2) (s8 errs s2) (s1 rele s8) (s2 rele s9) (s10 efbs s7) (s10 errs s3) (s7 srsl s3) (s3 efbs s4) (s11 efbs s8) (s11 errs s4) (s3 ells s8) (s3 rele s11) (s8 srsl s4) (s12 efbs s9) (s4 ells s9) (s4 rele s12) (s10 srsl s5) (s5 efbs s6) (s5 ells s11) (s11 srsl s6) (s6 ells s12) (s7 rrllP s8) (s8 rrllP s9) (s10 rrllP s11) (s11 rrllP s12) (s3 llrr- s1) (s4 llrr- s2) (s3 rrlls5) (s4 rrll- s6) )\"\n24\nThe result of this reasoning command is a refined network with the same solution set derived by the application of the algebraic closure/constraint propagation algorithm (see Section 2.3).\nModified network. ((S5 (EFBS) S6)(S12 (LSEL) S6)(S12 (LLFL) S5)(S11 (SRSL) S6)(S11 (LSEL) S5)(S11 (RRLLP) S12) (S4 (RRLL-) S6)(S4 (RRLL-) S5)(S4 (RELE) S12)(S4 (RSER) S11)(S3 (RRLL-) S6)(S3 (RRLL-) S5) (S3 (RFLL) S12)(S3 (RELE) S11)(S3 (EFBS) S4)(S10 (RRBL) S6)(S10 (SRSL) S5)(S10 (RRLLP) S12) (S10 (RRLLP) S11)(S10 (RRRB) S4)(S10 (ERRS) S3)(S9 (LBLL) S6)(S9 (LLLL-) S5)(S9 (BSEF) S12) (S9 (LLRRP) S11)(S9 (LSEL) S4)(S9 (LLFL) S3)(S9 (LLRRP) S10)(S8 (BRLL) S6)(S8 (LBLL) S5) (S8 (RRLLP) S12)(S8 (BSEF) S11)(S8 (SRSL) S4)(S8 (LSEL) S3)(S8 (LLRRP) S10)(S8 (RRLLP) S9) (S2 (RRLL+ RRLL- RRLLP) S6)(S2 (RRLL+ RRLL- RRLLP) S5)(S2 (RRLF) S12)(S2 (RRFR) S11)(S2 (RRLL+) S4) (S2 (RRLL+) S3)(S2 (RRRR+) S10)(S2 (RELE) S9)(S2 (RSER) S8)(S1 (RRLL+ RRLL- RRLLP) S6) (S1 (RRLL+ RRLL- RRLLP) S5)(S1 (RRLL+) S12)(S1 (RRLF) S11)(S1 (RRLL+) S4)(S1 (RRLL+) S3) (S1 (RRFR) S10)(S1 (RFLL) S9)(S1\n23For technical details of SparQ we refer the reader to the SparQ manual [50] 24SparQ refers to DRAfp with the symbol dra-80. SparQ does not accept line breaks which we have inserted here for better readability. All the data for this sample application including the new composition table can be obtained from the URL http://www.informatik.uni-bremen.de/~till/Oslsa.tar.gz (which also provides the composition table and other data for the GQR reasoning tool https://sfbtr8.informatik.uni-freiburg.de/R4LogoSpace/Resources/).\n(RELE) S8)(S1 (EFBS) S2)(S7 (RRLL-) S6)(S7 (BRLL) S5) (S7 (RRLLP) S12)(S7 (RRLLP) S11)(S7 (RRBL) S4)(S7 (SRSL) S3)(S7 (BSEF) S10)(S7 (RRLLP) S9) (S7 (RRLLP) S8)(S7 (RRRB) S2)(S7 (ERRS) S1))\nSparQ can output all path-consistent scenarios (i.e. constraint networks in base relations) via the command:\nsparq constraint-reasoning dra-fp scenario-consistency all \"( (s7 errs s1) (s1 efbs s2) (s8 errs s2) (s1 rele s8) (s2 rele s9) (s10 efbs s7) (s10 errs s3) (s7 srsl s3) (s3 efbs s4) (s11 efbs s8) (s11 errs s4) (s3 ells s8) (s3 rele s11) (s8 srsl s4) (s12 efbs s9) (s4 ells s9) (s4 rele s12) (s10 srsl s5) (s5 efbs s6) (s5 ells s11) (s11 srsl s6) (s6 ells s12) (s7 rrllP s8) (s8 rrllP s9) (s10 rrllP s11) (s11 rrllP s12) (s3 llrr- s1) (s4 llrr- s2) (s3 rrll- s5) (s4 rrll- s6) )\"\nFor this CSP, only three slightly different path consistent scenarios exist: ((S5 (EFBS) S6)(S12 (LSEL) S6)(S12 (LLFL) S5)(S11 (SRSL)\nS6)(S11 (LSEL) S5)(S11 (RRLLP) S12) (S4 (RRLL-) S6)(S4 (RRLL-) S5)(S4 (RELE) S12)(S4 (RSER) S11)(S3 (RRLL-) S6)(S3 (RRLL-) S5) (S3 (RFLL) S12)(S3 (RELE) S11)(S3 (EFBS) S4)(S10 (RRBL) S6)(S10 (SRSL) S5)(S10 (RRLLP) S12) (S10 (RRLLP) S11)(S10 (RRRB) S4)(S10 (ERRS) S3)(S9 (LBLL) S6)(S9 (LLLL-) S5)(S9 (BSEF) S12) (S9 (LLRRP) S11)(S9 (LSEL) S4)(S9 (LLFL) S3)(S9 (LLRRP) S10)(S8 (BRLL) S6)(S8 (LBLL) S5) (S8 (RRLLP) S12)(S8 (BSEF) S11)(S8 (SRSL) S4)(S8 (LSEL) S3)(S8 (LLRRP) S10)(S8 (RRLLP) S9) (S2 (RRLLP) S6)(S2 (RRLLP) S5)(S2 (RRLF) S12)(S2 (RRFR) S11)(S2 (RRLL+) S4)(S2 (RRLL+) S3) (S2 (RRRR+) S10)(S2 (RELE) S9)(S2 (RSER) S8)(S1 (RRLLP) S6)(S1 (RRLLP) S5)(S1 (RRLL+) S12) (S1 (RRLF) S11)(S1 (RRLL+) S4)(S1 (RRLL+) S3)(S1 (RRFR) S10)(S1 (RFLL) S9)(S1 (RELE) S8) (S1 (EFBS) S2)(S7 (RRLL-) S6)(S7 (BRLL) S5)(S7 (RRLLP) S12)(S7 (RRLLP) S11)(S7 (RRBL) S4) (S7 (SRSL) S3)(S7 (BSEF) S10)(S7 (RRLLP) S9)(S7 (RRLLP) S8)(S7 (RRRB) S2)(S7 (ERRS) S1))\n((S5 (EFBS) S6)(S12 (LSEL) S6)(S12 (LLFL) S5)(S11 (SRSL) S6)(S11 (LSEL) S5)(S11 (RRLLP) S12) (S4 (RRLL-) S6)(S4 (RRLL-) S5)(S4 (RELE) S12)(S4 (RSER) S11)(S3 (RRLL-) S6)(S3 (RRLL-) S5) (S3 (RFLL) S12)(S3 (RELE) S11)(S3 (EFBS) S4)(S10 (RRBL) S6)(S10 (SRSL) S5)(S10 (RRLLP) S12) (S10 (RRLLP) S11)(S10 (RRRB) S4)(S10 (ERRS) S3)(S9 (LBLL) S6)(S9 (LLLL-) S5)(S9 (BSEF) S12) (S9 (LLRRP) S11)(S9 (LSEL) S4)(S9 (LLFL) S3)(S9 (LLRRP) S10)(S8 (BRLL) S6)(S8 (LBLL) S5) (S8 (RRLLP) S12)(S8 (BSEF) S11)(S8 (SRSL) S4)(S8 (LSEL) S3)(S8 (LLRRP) S10)(S8 (RRLLP) S9) (S2 (RRLL-) S6)(S2 (RRLL-) S5)(S2 (RRLF) S12)(S2 (RRFR) S11)(S2 (RRLL+) S4)(S2 (RRLL+) S3) (S2 (RRRR+) S10)(S2 (RELE) S9)(S2 (RSER) S8)(S1 (RRLL-) S6)(S1\n(RRLL-) S5)(S1 (RRLL+) S12) (S1 (RRLF) S11)(S1 (RRLL+) S4)(S1 (RRLL+) S3)(S1 (RRFR) S10)(S1 (RFLL) S9)(S1 (RELE) S8) (S1 (EFBS) S2)(S7 (RRLL-) S6)(S7 (BRLL) S5)(S7 (RRLLP) S12)(S7 (RRLLP) S11)(S7 (RRBL) S4) (S7 (SRSL) S3)(S7 (BSEF) S10)(S7 (RRLLP) S9)(S7 (RRLLP) S8)(S7 (RRRB) S2)(S7 (ERRS) S1))\n((S5 (EFBS) S6)(S12 (LSEL) S6)(S12 (LLFL) S5)(S11 (SRSL) S6)(S11 (LSEL) S5)(S11 (RRLLP) S12) (S4 (RRLL-) S6)(S4 (RRLL-) S5)(S4 (RELE) S12)(S4 (RSER) S11)(S3 (RRLL-) S6)(S3 (RRLL-) S5) (S3 (RFLL) S12)(S3 (RELE) S11)(S3 (EFBS) S4)(S10 (RRBL) S6)(S10 (SRSL) S5)(S10 (RRLLP) S12) (S10 (RRLLP) S11)(S10 (RRRB) S4)(S10 (ERRS) S3)(S9 (LBLL) S6)(S9 (LLLL-) S5)(S9 (BSEF) S12) (S9 (LLRRP) S11)(S9 (LSEL) S4)(S9 (LLFL) S3)(S9 (LLRRP) S10)(S8 (BRLL) S6)(S8 (LBLL) S5) (S8 (RRLLP) S12)(S8 (BSEF) S11)(S8 (SRSL) S4)(S8 (LSEL) S3)(S8 (LLRRP) S10)(S8 (RRLLP) S9) (S2 (RRLL+) S6)(S2 (RRLL+) S5)(S2 (RRLF) S12)(S2 (RRFR) S11)(S2 (RRLL+) S4)(S2 (RRLL+) S3) (S2 (RRRR+) S10)(S2 (RELE) S9)(S2 (RSER) S8)(S1 (RRLL+) S6)(S1 (RRLL+) S5)(S1 (RRLL+) S12) (S1 (RRLF) S11)(S1 (RRLL+) S4)(S1 (RRLL+) S3)(S1 (RRFR) S10)(S1 (RFLL) S9)(S1 (RELE) S8) (S1 (EFBS) S2)(S7 (RRLL-) S6)(S7 (BRLL) S5)(S7 (RRLLP) S12)(S7 (RRLLP) S11)(S7 (RRBL) S4) (S7 (SRSL) S3)(S7 (BSEF) S10)(S7 (RRLLP) S9)(S7 (RRLLP) S8)(S7 (RRRB) S2)(S7 (ERRS) S1))"
    }, {
      "heading" : "3 scenarios found, no further scenarios exist.",
      "text" : "This result can be visualized with a diagram and can be interpreted with respect to the goals of the reasoning task (see Section 5)."
    } ],
    "references" : [ ],
    "referenceMentions" : [ ],
    "year" : 2009,
    "abstractText" : "Nearly 15 years ago, a set of qualitative spatial relations between ori-<lb>ented straight line segments (dipoles) was suggested by Schlieder. This<lb>work received substantial interest amongst the qualitative spatial reason-<lb>ing community. However, it turned out to be difficult to establish a sound<lb>constraint calculus based on these relations. In this paper, we present the<lb>results of a new investigation into dipole constraint calculi which uses alge-<lb>braic methods to derive sound results on the composition of relations and<lb>other properties of dipole calculi. Our results are based on a condensed<lb>semantics of the dipole relations.<lb>In contrast to the points that are normally used, dipoles are extended<lb>and have an intrinsic direction. Both features are important properties of<lb>natural objects. This allows for a straightforward representation of pro-<lb>totypical reasoning tasks for spatial agents. As an example, we show how<lb>to generate survey knowledge from local observations in a street network.<lb>The example illustrates the fast constraint-based reasoning capabilities<lb>of the dipole calculus. We integrate our results into two reasoning tools<lb>which are publicly available.",
    "creator" : "TeX"
  }
}