{
  "name" : "1301.2005.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "A Distance-based Paraconsistent Semantics in DL-Lite",
    "authors" : [ "Xiaowang Zhang", "Kewen Wang", "Zhe Wang", "Yue Ma", "Guilin Qi" ],
    "emails" : [ ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n30 1.\n20 05\nv1 [\ncs .A"
    }, {
      "heading" : "1 Introduction",
      "text" : "The DL-Lite [1] is a family of lightweight description logics (DLs), the logical foundation of OWL 2.0 QL, one of the three profiles of OWL 2.0 for Web ontology language recommended by W3C. In description logics, an ontology is expressed as a knowledge base (KB). Inconsistency is not rare in ontology applications and may be caused by several reasons, such as errors in modeling, migration from other formalisms, ontology merging, and ontology evolution. Therefore, handling inconsistency is always considered an important problem in DL and ontology management communities. However, DL-Lite reasoning mechanism based on classical DL semantics faces problem when inconsistency occurs, which is referred to as the triviality problem. That is, any conclusions, that are possibly irrelevant or even contradicting, will be entailed from an inconsistent DL-Lite ontology under the classical semantics.\nIn many practical ontology applications, there is a strong need for inferring (only) useful information from inconsistent ontologies. For instance, consider a simple DLLite KB K = (T ,A) where T = {Penguin ⊑ Bird, Swallow ⊑ Bird,Bird ⊑ Fly} and A = {Penguin(tweety),¬Fly(tweety), Swallow(fred)}. Under the classical semantics for DLs, anything can be inferred from K. Intuitively, one might\nwish to still infer Brid(fred) and Fly(fred), while they are useless to derive both Fly(tweety) and ¬Fly(tweety) from K.\nThere exist several proposals for reasoning with inconsistent DL-Lite KBs in the literature. These approaches usually fall into one of two fundamentally different streams. The first one is based on the assumption that inconsistencies are caused by erroneous data and thus, they should be removed in order to obtain a consistent KB ([2, 3, 4, 5, 6]). In most approaches in this stream, the task of repairing inconsistent ontologies is actually reduced to finding a maximum consistent subset of the original KB. A shortcoming of these approaches is the so-called multi-extension problem. That is, in many cases, an inconsistent KB may have several different sub-KBs that are maximum consistent. The other stream, based on the idea of living with inconsistency, is to introduce a form of paraconsistent reasoning or inconsistency-tolerant reasoning by employing non-standard reasoning methods (e.g., non-standard inference and non-classical semantics). [7, 8, 9, 10] introduce some strategies to select consistent subsets from an inconsistent KB as substitutes of the original KB in reasoning. [11] present the Belnap’s four-valued semantics of DLs where two additional logical values besides “true” and “false” are introduced to indicate contradictory conclusions. [12, 13] present the Hunter’s quasi-classical semantics of DLs whose strong semantics strengthens the inference power of four-valued semantics. However, the reasoning capability of such paraconsistent methods is not strong enough for many practical applications. For instance, a conclusion φ, that can inferred from a consistent KB K under the classical semantics, may become not derivable under their paraconsistent semantics. We argue that approaches in these two streams are mostly coarse-grained in the sense that they fail to fully utilize semantic information in the given inconsistent KB. For instance, when two interpretations make a concept unsatisfiable, one interpretation may be more reasonable than the other. But existing approaches to paraconsistent semantics in DLs do not take this into account usually.\nRecently a distance-based semantics presented by [14] has been proposed to deal with inconsistent KBs in propositional logic. However, it is not straightforward to generalize this approach to DLs because a DL KB can have infinite number of models and a model can also be infinite. Additionally, it is also a challenge in adopting distancebased semantics for DL complex constructors.\nTo overcome these difficulties, in this paper we first use the notion of features [15] and introduce a distance-based semantics for paraconsistent reasoning with DL-Lite. Feature in DL-Lite are Herbrand interpretations extended with limited structure, which provide a novel semantic characterization for DLs. In addition, features also generalize the notion of types for TBoxes [16] to general KBs. Each KB in DL-Lite has a finite number of features and each feature is finite. This makes it possible to cast Arieli’s distance-based semantics to DL-Lite.\nThe main innovations and contributions of this paper can be summarized as follows. We introduce distances on types of DL-LiteNbool KBs, which avoids the problem of domain infiniteness and model infiniteness in defining the distance in terms of models of KBs. Based on the new distance on types, we develop a way of measuring types that are closest to a TBox and the notion of minimal model types is introduced. This notion is also extended to minimal model features for KBs. We propose a distance-based semantics for DL-LiteNbool so that useful information can still be inferred when a KB\nis inconsistent. This is accomplished by introducing a novel entailment relation (i.e. distance-based entailment) between a KB and an axiom in terms of minimal model features. Our results show that the distance-based entailment is paraconsistent, nonmonotonic, cautious as the paraconsistent based on multi-valued semantics. We also show that the distance-based entailment is not over-skeptical in the sense that for a classically consistent KB, the distance-based entailment coincides with the classical entailment, which is missing in most existing paraconsistent semantics for DLs."
    }, {
      "heading" : "2 The DL-Lite Family and Features",
      "text" : ""
    }, {
      "heading" : "2.1 The DL-Lite Family",
      "text" : "A signature is a finite set Σ = ΣA ∪ΣR ∪ΣI ∪ΣN where ΣA is the set of atomic concepts, ΣR the set of atomic roles, ΣI the set of individual names (or, objects) and ΣN the set of natural numbers in Σ. We use capital lettersA,B,C ( with subscriptsC1, C2) to denote concept names, P,R, S (with subscripts P1, P2) to denote role names, lowercase letters a, b, c to denote individual names and assume 1 is always in ΣN . ⊤ and ⊥ will not be considered as concept names or role names.\nFormally, given a signature Σ, the DL-LiteNbool language is inductively constructed by syntax rules:\nR ← P | P− B ← ⊤ | A |≥ nR C ← B | ¬C | C1 ⊓ C2\nWe say B a basic concept and C a general concept. Other standard concept constructs such as ⊥, ∃R, ≤ nR and C1 ∪ C2 can be introduced as abbreviations: ⊥ for ¬⊤, ∃R for ≥ 1R, ≤ nR for ¬(≥ (n+1)R) andC1⊔C2 for ¬(¬C1⊓¬C2). For any P ∈ ΣR, P−− = P .\nA TBox T is a finite set of (concept) inclusions of the form C1 ⊑ C2 where C1 and C2 are general concepts. An ABox A is a finite set of concept assertions C(a) and role assertions R(a, b). Concept inclusions, concept assertions and role assertions are axioms. A KB is composed of a TBox and an ABox, written by K = (T ,A). Sig(K) denotes the signature of K.\nAn interpretation I is a pair 〈∆I , ·I〉, where ∆I is a non-empty set called the domain and ·I is an interpretation function such that aI ∈ ∆I , AI ⊆ ∆I and P I ⊆ ∆I ×∆I . General concepts are interpreted as follows:\n(P−)I = {(aI , bI) | (bI , aI) ∈ P I} (≥ nR)I = {aI | |{bI | (aI , bI) ∈ RI}| ≥ n} (¬C)I = ∆I \\ CI\n(C1 ⊓ C2) I = CI1 ∩ C I 2\nThe definition of interpretation is based on the unique name assumption (UNA), i.e., aI 6= bI for two different individual names a and b.\nAn interpretation I is a model of a concept inclusion C1 ⊑ C2 (a concept assertion C(a), or a role assertion R(a, b)) if CI1 ⊆ C I 2 (a I ∈ CI , or (aI , bI) ∈ RI); and I\nis called a model of a TBox T (an ABox A) if I is a model of each inclusion of T (each assertion of A). I is called a model of a KB (T ,A) if I is a model of both T and A. We use Mod(K) to denote the set of models of K. A KB K entails an axiom φ, if Mod(K) ⊆ Mod({φ}). Two KBs K1 and K2 are equivalent if Mod(K1) = Mod(K2), denoted by K1 ≡ K2. A KB K is consistent if it has at least one mode, inconsistent otherwise."
    }, {
      "heading" : "2.2 Types and Features",
      "text" : "As we all known, models of a KB are often infinite and the number of models of a KB is possibly infinite. To characterize infinite models in a finite expression, two important notions, namely, type and feature, are respectively defined by [16] and [15] for TBoxes and general KBs in DL-Lite.\nLet Σ be a signature. A Σ-type (or simply a type) is a set of basic concepts over Σ, s.t., ⊤ ∈ τ , and for any m,n ∈ ΣN with m < n, R ∈ ΣR ∪ {P− | P ∈ ΣR}, ≥ nR ∈ τ implies ≥ mR ∈ τ . As ⊤ ∈ τ for any type τ , we omit it in examples for simplicity. TΣ denotes the set of all Σ-types.\nNote that if ∃P (or ∃P−) occurs in a general concept C then ∃P− (or ∃P ) should be also considered as a new concept independent of ∃P (or ∃P−) in computing types of C respectively. We say a type set as a set of types {τ1, . . . , τm}, denoted as Ξ and a type group as a set of type sets {Ξ1, . . . ,Ξn}, denoted as Π. Then we denote ∪Ξ = τ1 ∪ · · · ∪ τm and ∩Π = Ξ1 ∩ . . . ∩ Ξn.\nExample 1 Given a signature Σ = {A,B, P,D}, a conceptC = A⊓(B⊔∃P ) can be equivalently transformed into the DNF (A⊓B⊓∃P )⊔(A⊓¬B⊓∃P )⊔(A⊓B⊓¬∃P ). Thus TΣ(C) = {τ11, τ12, τ13, τ14, τ21, τ22, τ23, τ24, τ31, τ32, τ33, τ34}, where\nτ11 = {A,B, ∃P,∃P−, D} τ12 = {A,B, ∃P,¬∃P−,D} τ13 = {A,B, ∃P,∃P−,¬D} τ14 = {A,B, ∃P,¬∃P−,¬D} τ21 = {A,¬B, ∃P,∃P−, D} τ22 = {A,¬B, ∃P,¬∃P−,D} τ23 = {A,¬B, ∃P,∃P−,¬D} τ24 = {A,¬B, ∃P,¬∃P−,¬D} τ31 = {A,B,¬∃P,∃P−, D} τ32 = {A,B,¬∃P,¬∃P−,D} τ33 = {A,B,¬∃P,∃P−,¬D} τ34 = {A,B,¬∃P,¬∃P−,¬D}\nNote that types coincide with propositional models while TΣ(C) coincides with the set of models of concept C. A type τ satisfies a basic concept B if B ∈ τ , τ satisfies ¬C if τ does not satisfy C, and τ satisfiesC1⊓C2 if τ satisfies bothC1 andC2. TΣ(C) denotes a collection of all Σ-types of C. In this way, each general concept C over Σ corresponds to a set TΣ(C) of all Σ-types satisfying C. τ satisfies a concept inclusion C ⊑ D if τ ∈ TΣ(¬C ⊔ D). And τ is a model type a TBox T iff it satisfies each inclusion in T .\nModel type sets and model type groups are analogously defined. If Ξ is a model type set of a TBox T then ∃P ∈ ∪Ξ iff ∃P− ∈ ∪Ξ. This property is called role coherence which can be used to check whether a type set is the model type set of some TBox. ΠΣ(T ) denotes the model type group {TΣ(¬C1 ⊔D1), . . . , TΣ(¬Cn ⊔Dn)} of T where T = {C1 ⊑ D1, . . . , Cn ⊑ Dn} is a TBox over Σ. It appears that ∩ΠΣ(T ) is the collection of model Σ-types of T .\nA Σ-Herbrand set (or simply Herbrand set) H is a finite set of member assertions satisfying:\n• for each a ∈ ΣI , if B1(a), . . . , Bk(a), where {B1, . . . , Bk} ⊆ ΣB are all the concept assertions about a in H, then the set {B1, . . . , Bk} is a Σ-type;\n• for each P ∈ ΣR, if P (a, bi)(1 ≤ i ≤ n) are all the role assertions about a in H, then for any m ∈ ΣN with m ≤ n, (≥ mP )(a) is in H;\n• for each P ∈ ΣR, if P (bi, a)(1 ≤ i ≤ n) are all the role assertions in H, then for any m ∈ ΣN with m ≤ n, (≥ mP−)(a) is in H.\nNote that Herbrand sets are different from ABoxes by adopting a close world assumption (CWA). For instance, assertion B(a) 6∈ H means that ¬B(a) holds in H and P (a, b) 6∈ H means that there does no relationship w.r.t. P from individual a to individual b.\nWe simply write τ(a) = {B1(a), . . . , Bk(a)} where τ = {B1, . . . , Bk}. Moreover, given a set of types Ξ = {τ1, . . . , τm}, Ξ(a) denotes {τ1(a), . . . , τm(a)} without confusion. In this case, we say τ(a) is in H if {B1(a), . . . , Bk(a)} ⊆ H. A Herbrand set H satisfies a concept assertion C(a) (a role assertion P (a, b) or P−(b, a)) if τ(a) is in H and τ ∈ TΣ(C) (P (a, b) ∈ H or P−(b, a) ∈ H). A Herbrand set H satisfies an ABox A if H satisfies all assertions in A.\nA Σ-feature (or simply a feature) F is a pair 〈Ξ,H〉, where Ξ is a non-empty set of Σ-types and H a Σ-Herbrand set, if F satisfies:\n• for each P ∈ ΣR, ∃P ∈ ⋃ Ξ iff ∃P− ∈ ⋃ Ξ (i.e., Ξ holds role coherence);\n• for each a ∈ ΣI and τ(a) in H, s.t., τ is a Σ-type, τ ∈ Ξ.\nA feature F satisfies an inclusion C1 ⊑ C2 over Σ, if Ξ ⊆ TΣ(¬C1 ⊔ C2); F satisfies a concept assertion C(a) over Σ, if τ(a) ∈ H and τ ∈ TΣ(C); and F satisfies a role assertion P (a, b) (resp., P−(b, a)) over Σ, if P (a, b) ∈ H. A feature F is a model feature of KB K if F satisfies each inclusion and each assertion in K. ModF (K) denotes the set of all model features of K. It easily concludes that K is consistent iff ModF (K) 6= ∅. Given two KBs K1 and K2, let Σ = Sig(K1 ∪ K2), K1 F-entails K2 if ModF (K1) ⊆ ModF (K2), written by K |=F K2; and K1 is F-equivalent K2 if ModF (K1) =ModF (K2), written by K ≡F K2.\nExample 2 Consider a KB K = (T ,A), where T = {A ⊑ ∃P, B ⊑ ∃P, ∃P− ⊑ B, A ⊓ B ⊑ ⊥, ≥ 2 P− ⊑ ⊥} and A = {A(a), P (a, b) }. It is shown in [17] that K is a KB having no finite model. An infinite model I of K is defined as follows: ∆I = {da, db, d1, d2, d3 . . .}, aI = da and bI = db; the concept A is interpreted as a singleton {da} and B as {db, d1, d2, d3 . . .}; and role P is interpreted as {(da, db), (db, d1), (d1, d2), . . . , (di, di+1), . . .}. Let ΣK = {A,B, P, 1, 2, a, b}. The (finite) model feature of K that corresponds to I is F = 〈Ξ,H〉 where the Herbrand set H = { τ1(a), τ2(b), P (a, b) } and Ξ = {τ1, τ2} with τ1 = {A,¬B, ∃P,¬∃P−} and τ2 = {¬A,B, ∃P, ∃P−}. Moreover, K |=F B(b) and K |=F ∃P−(b) since τ2(b) ∈ H. T |=F A ⊑ ∃P since {τ1, τ2} ⊆ TΣ(¬A ⊔ ∃P ) where TΣ(¬A ⊔ ∃P ) is a\nset of types as follows:\n{¬A,B, ∃P, ∃P−}, {A,B, ∃P, ∃P−}, {¬A,B, ∃P,¬∃P−}, {¬A,B,¬∃P, ∃P−}, {A,B, ∃P,¬∃P−}, {A,¬B, ∃P, ∃P−}, {¬A,B,¬∃P,¬∃P−}, {A,¬B, ∃P,¬∃P−}, {¬A,¬B,¬∃P, ∃P−}, {¬A,¬B, ∃P, ∃P−}, {¬A,¬B, ∃P,¬∃P−}, {¬A,¬B,¬∃P,¬∃P−}.\nIt would be conclude that model features can capture the semantic properties of KBs shown by following lemmas.\nLemma 1 ([15]) Let K be a KB and Σ = Sig(K). Then (1) K is consistent iff K has a model feature; (2) for any inclusion or assertion φ over Σ, we have K |= φ iff K |=F φ.\nFrom Lemma 1, the first item shows that all inconsistent KBs have no model features and the second item shows that querying entailment based on models can be reduced to querying entailment based on model features.\nLemma 2 ([15]) Let K1,K2 be two KBs and Σ = Sig(K1 ∪K2). Then (1) K1 |= K2 iff K1 |=F K2; (2) K1 ≡ K2 iff K1 ≡F K2.\nIntuitively, F-entailment relation is equal to classical entailment relation. In the remainder of this paper, we directly use |= to express F-entailment relation (|=F )."
    }, {
      "heading" : "3 Distance-based Semantics for Knowledge Bases",
      "text" : "This section define minimal model features of KBs. Compared with inconsistency of TBoxes, inconsistency occurring in KBs is complicated since it contains two extra cases: inconsistency of ABoxes and inconsistency between TBoxes and ABoxes. In more detail, these inconsistencies occur in among concept assertions, between concept assertions and role assertions, between assertions and inclusions, even between a single inclusion and a single assertion. For instance,\nExample 3 Let K = ({∃P− ⊑ ⊥}, {∃P (a)}) be a KB (see [15]) and Σ = {P, a, 1}. It concludes that K is inconsistent and thus has no model feature, i.e., ModF (K) = ∅.\nTo deal with those various inconsistencies in a unified way, we adopt the technique of computing minimal model types to construct minimal model features instead of directly introducing distance over features. We argue that this adoption can not only uniformly deal with all inconsistencies but also overcome difficulty of defining distance over pairs of features (see [15]).\nWe first introduce concept profiles to use type distance can describe how far apart features are. Let Σ be a signature and A an ABox over Σ. Assume that NA a set of all named individuals in A. AR = {P (a, b) | P (a, b) or P−(b, a) ∈ A}. A concept profile of a in A, denoted by ΣC(a), defined as follows: ΣC(a) =\n⋃ D(a)∈A{D}∪⋃\nP (a,b1),...,P (a,bn)∈AR {≥ mP | m ∈ ΣN ,m ≤ n}∪ ⋃ P (b1,a),...,P (bn,a)∈AR {≥\nmP− | m ∈ ΣN ,m ≤ n}.\nIntuitively speaking, a set of concept profiles is a partition of concepts occurring in an ABox w.r.t. individuals. For instance, let Σ = {C,D, P, a, b1, b2, 1, 2} and A = {C ⊓ D(a), P (a, b1), P (a, b2), D(b1)}. Thus ΣC(a) = {C ⊓ D, ∃P,≥ 2P}, ΣC(b1) = {D, ∃P−} and ΣC(b2) = {∃P−}.\nLet K = (T ,A) be a KB. We extend the signature Sig(K) of K as Sig∗(K) = Sig(T ) ∪ Sig(ΣC(A)) where ΣC(A) = ⋃ a∈NA\nΣC(a). Indeed, Sig∗(K) is obtained from Sig(K) by adding all possible natural numbers occurring all concept profiles but not occurring K. In other words, Sig∗(K) and Sig(K) are no different except ΣN . In the above example, Sig(A) = {C,D, P, a, b1, b2} while Sig∗(A) = {C,D, P, a, b1, b2, 1, 2}.\nWithout loss of generality, we assume that Σ = Sig∗(K) in the remain of this paper, unless otherwise stated.\nNext, we will define the notion of minimal model features.\nDefinition 1 (Minimal Model Feature) Let K = (T ,A) be a KB. Denote ΠΣ(a) = {TΣ(D) | D ∈ ΣC(a)}. Given d and f , a df -minimal model feature of K is a feature F = 〈Ξ,H〉 satisfying the following three conditions:\n• Ξ ⊆ Λ+d,f(ΠΣ(T ), TΣ);\n• for each P ∈ ΣR, ∃P ∈ ∪Ξ iff ∃P− ∈ ∪Ξ;\n• τ ∈ Λ+d,f(ΠΣ(a),Λ + d,f(ΠΣ(T ), TΣ)) ∩ Ξ for each a ∈ ΣI and τ(a) ∈ H;\n• for anyP (a, b) ∈ AR−H, either≥ n+1P (a) 6∈ H andP (a, b1), . . . , P (a, bn) ∈ H, or ≥ n+ 1P−(b) 6∈ H and P (a1, b), . . . , P (an, b) ∈ H.\nModFd,f(K) is the set of df -minimal model features of K.\nIn the above definition, a minimal model feature is a feature F which contains two parts, namely, type set Ξ and Herbrand set H. The first condition requires that all types of Ξ be minimal; the second says that Ξ should be a model type set, i.e., it satisfies the property of role coherence; the third guarantees that each type of Ξ satisfying each concept assertion in H has the minimal distance to its corresponding concept profile, that is, if a concept assertion D(a) satisfied by H then types satisfying D are minimal w.r.t. type group ΠΣ(a) of concept profile ΣC(a); and the last ensures that F is consistent by those role assertions conflicting with concept assertions.\nExample 4 In Penguin KB, we abbreviate Penguin to P , Swallow to S, Bird to B, Fly to F , tweety to t and fred to r. Thus Σ = {P, S,B, F, t, r}, ΣC(t) = {P,¬F} and ΣC(r) = {S}. Assume that d is the Hamming distance and f is the aggregation function. We haveΛ+d,f(ΠΣ(T ), TΣ) = {τ1, τ2, τ4, τ8, τ12, τ16}, shown in the following table.\nType d1 d2 d3 d4 d5 τ1 = {} 1 0 1 1 1 τ2 = {F} 1 1 2 1 1 τ4 = {B,F} 1 1 2 1 1 τ8 = {S,B, F} 1 1 2 0 0 τ12 = {P,B, F} 0 1 1 1 1 τ16 = {P, S,B, F} 0 1 1 0 0\nHere d1 = d(τ, TΣ(P )), d2 = d(τ, TΣ(¬F )), d3 = λd,f (τ,ΠΣ(t)), d4 = d(τ, TΣ(S)) and d5 = λd,f (τ,ΠΣ(r)). From the above table, it concludes that Λ+d,f(ΠΣ(a),Λ + d,f(ΠΣ(T ), TΣ)) = {τ1, τ12, τ16} and Λ + d,f(ΠΣ(r),Λ + d,f (ΠΣ(T ), TΣ)) = {τ8, τ16}. Thus, ModFd,f (K) = {〈Ξ, τ(t) ∪ τ ′(r)〉 | τ ∈ {τ1, τ12, τ16}, τ ′ ∈ {τ8, τ16}, {τ, τ ′} ⊆ Ξ and Ξ ⊆ {τ1, τ8, τ12, τ16}}.\nWe find that minimal model features can reach our aim.\nProposition 1 Let K be a KB. For any d and f , we have\n• ModFd,f (K) 6= ∅;\n• ModFd,f (K) =Mod F (K), if K is consistent.\nThe intuition behind Proposition 1 is that the minimal model features of a KB are features closet to it’s classical semantics. Remember that, while an inconsistent KB does not have any model feature, each KB has at least one minimal model feature. An expected result is that the second statement of Proposition 1 does not necessarily hold if K is inconsistent. For instance, in Example 3, ModFd,f(K) = {F1,F2} where F1 = 〈{∃P}, {∃P (a)}〉 and F2 = 〈{∃P, ∃P−}, {∃P (a), ∃P−(a)}〉 while ModF (K) = ∅.\nNow, based on minimal model features, we are ready to define the distance-based entailment for KBs, written |=d,f , under which meaningful information can be entailed from an inconsistent KB.\nDefinition 2 (KB Distance-based Entailment) Let K be a KB and φ an axiom. Assume Σ = Sig∗(K ∪ {φ}) be a signature. Given d and f , K distance-based entails (d-entails) φ, still denoted by K |=d,f φ, if ModFd,f(K) ⊆Mod F ({φ}).\nDistance-based entailment brings a new semantics (called distance-based semantics) for inconsistent KBs by weakening classical entailment. It is not hard to see that no contradiction can be entailed in this semantics. For instance, in Penguin KB, ¬Fly ⊓Fly(tweety) can not entailed but ¬Fly ⊔Fly(tweety) can under this semantics.\nIn the rest of this section, we exemplify that distance-based semantics is suitable for reasoning with inconsistent KBs.\nConsequences are intuitive and reasonable under the distance-based semantics. In Penguin KB,K |=dH ,fs Fly(fred) whileK 6|=dH ,fs Penguin(tweety) andK 6|=dH ,fs Fly(tweety). We further analyze those conclusions under distance-based semantics. The inconsistency of K is caused by statement about tweety. On the one hand, tweety is a penguin which can not fly, i.e., ¬Fly(tweety). On the other hand, penguin is a bird which can fly, i.e., Fly(tweety). Moreover, there exists no more argument for either Penguin(tweety) or Fly(tweety). In this sense, neither Penguin(tweety) nor Fly(tweety) can be entailed under distance-based semantics. However, the statement about fred in K contains no conflict. Thus Fly(fred) can be entailed under distance-based semantics.\nFurthermore, distance-based semantics also embodies the idea of “majority vote consideration” (see [14]), that is, conclusions must hold more argument for them, for resolving contradictions so that the results are more stable. For instance,\nExample 5 Let K be a KB ({A ⊑ B}, {A(a), B(a),¬B(a)}). Thus Σ = Sig∗(K) = {A,B, a} and ΣC(a) = {A,B,¬B}. Then ΛdH ,fs(ΠΣ(T ), TΣ) = {{¬A,¬B}, {A,¬B}, {A,B}}. ModF\ndH ,fs (K) = {〈Ξ, τ(a)〉 | Ξ ⊆ ΛdH ,fs(ΠΣ(T ), TΣ) and\nτ ∈ Ξ}. Therefore, K can d-entails A(a), B(a) and A ⊑ B except for ¬B(a). Intuitively, compared with ¬B(a), there is an extra argument {A(a), A ⊑ B} for B(a)."
    }, {
      "heading" : "4 Properties of Distance-based Semantics",
      "text" : "In general, our distance-based semantics can be taken as a framework in which many logical consequences are defined by selecting various distances and aggregation functions. In this section, we enumerate several good properties of distance-based semantics and several interesting relationships among them.\nIf K is inconsistent and there exists an axiom φ such that K 6|=p φ where |=p is an entailment relation, then we say |=p is paraconsistent. It is well known that classical entailment |= is not paraconsistent.\nProposition 2 (Paraconsistency) For any d and f , |=d,f is paraconsistent.\nTo show the paraconsistency of the distance-based entailment, consider Example 3 and we have K |=dH ,fs ∃P\n− ⊑ ⊥ while K 6|=dH ,fs ∃P (a). Most existing semantics for paraconsistent reasoning in DLs are much weaker than the classical semantics in this sense that there exists a consistent KB K and an axiom φ such that K |= φ (also called consistency preservation) but φ is not entailed by K under the paraconsistent semantics. The following result shows that the distance-based semantics does not have such shortcoming.\nProposition 3 (Consistency Preservation) Let K be a KB and φ an axiom. For any d and f , if K is consistent, then K |=d,f φ iff K |= φ.\nIn classical semantics, a property that K |= ψ iff T |= ψ for any inclusion ψ is called TBox-preservation where the problem of subsumption checking is irrelevant to ABoxes. Our distance-based semantics satisfies such a property.\nProposition 4 (TBox Preservation) Let K = (T ,A) be a KB and ψ an inclusion. For any d and f , K |=d,f ψ iff T |=d,f ψ.\nThe closure w.r.t. |=d,f of an arbitrary KB is always consistent.\nProposition 5 (Closure Consistency) Let K = (T ,A) be a KB. For any d and f , let\n• Cnd,f (T ) = {ψ is an inclusion | T |=d,f ψ};\n• CnTd,f (A) = {ϕ is an assertion | (T ,A) |=d,f ϕ}.\nWe have both Cnd,f(T ) and CnTd,f (A) are consistent.\nLet Σ be a signature. A distance d is Σ-unbiased, if for any Σ-concept C and any two Σ-types τ1, τ2 so that A ∈ τ1 iff A ∈ τ2 for any concept name A occurring in C then d(τ1, TΣ(C)) = d(τ2, TΣ(C)). Unbiasedness will bring a good property of relevance in reasoning.\nProposition 6 (Relevance) Let K be a KB, φ a non-tautological axiom and Σ = Sig∗(K ∪ {φ}) a signature. If d is unbiased and Sig(K) ∩ Sig({φ}) = ∅, then K 6|=d,f φ for any f .\nAn entailment relation |=m is monotonic if K′ |=m φ implies K |=m φ for any K′ ⊆ K; nonmonotonic otherwise. Another characteristic property of |=d,f is its nonmonotonic nature.\nProposition 7 (Non-monotonicity) For any d and f , |=d,f is non-monotonic.\nWhile the distance-based semantics is non-monotonic in general, it possesses a kind of cautious monotonicity, which is usually referred to as splitting property.\nFor instance, let K = ({⊤ ⊑ A,A ⊑ ∃P, ∃P ⊑ ⊥, ∃P1 ⊑ ∃P2}, {A(a), ∃P1(b)}) be a KB, K can be split into K = K1 ∪ K2 where K1 = ({∃P1 ⊑ ∃P2}, {∃P1(b)}) and K2 = ({⊤ ⊑ A,A ⊑ ∃P, ∃P ⊑ ⊥}, {A(a)}). Then, let φ = P2(b), the problem of deciding K |=d,f φ can be reduced to checking whether K1 |=d,f φ. Notice that K1 is consistent and Sig(K1) ∩ Sig(K2) = ∅. For some non-monotonic semantics, these two conditions are sufficient to guarantee the validity of the splitting property. However, it is not the case when K1 contains more than one axiom. For this reason, we need hereditary aggregation functions to really guarantee the validity of the splitting property (see [14]).\nWe say K is split into K′ and K′′, denoted K = K′ ⊕K′′, if (1) K = K′ ∪ K′′, and (2) Sig(K′) ∩ Sig(K′′) = ∅.\nAn aggregation function f is hereditary iff f({x1, . . . , xn}) < f({y1, . . . , yn}) implies for any z1, . . . , zm, f({x1, . . . , xn, z1, . . . , zm})< f({y1, . . . , yn, z1, . . . , zm}). For instance, the summation function is hereditary.\nProposition 8 (Splitting Property) Let K = K′⊕K′′ where K′ is consistent. If K′ |= φ then for any hereditary aggregation function f and d, K |=d,f φ for each axiom φ such that Sig(φ) ∩ Sig(K′′) = ∅.\nOne advantage of the splitting property is that the paraconsistent reasoning in KB K can be localized into the classical reasoning in a consistent module of K, which is usually smaller than the original K. Such a property can be very useful for a highly distributed ontology system.\nA relation |≈ is cautious if it satisfies:\n• (cautious reflexivity) if K = K′ ⊕ K′′ and K′ is consistent, then K|≈ϕ for all ϕ ∈ K′;\n• (cautious monotonicity) if K|≈ϕ and K|≈ψ, then K ∪ {ϕ}|≈ψ;\n• (cautious cut) if K|≈ϕ and K ∪ {ϕ}|≈ψ then K|≈ψ.\nProposition 9 (Cautious Relation) For any d and monotonic hereditary aggregation function f , |=d,f is cautious.\nProposition 10 Let K = (T ,A) be a KB, φ an axiom and Σ = Sig∗(K ∪ {φ}) a signature. For any f , if K |=dD,f φ then K |=dH ,f φ.\nIn Proposition 10, the converse does not hold.\nExample 6 Let A = {A(a),¬A ⊓ ∃P (a),¬∃P (a)} be an inconsistent ABox. Thus A |=dH ,fm ¬A ⊔ ∃P (a) while A 6|=dD,fm ¬A ⊔ ∃P (a).\nIn general, different result for a KB would be brought by selecting different distance and aggregation. For instance, in Example 3, A |=\ndH ,f 1 2\nA(a) while A 6|=dH ,fs A(a).\nThe next result shows that for κ-voting functions, the greater κ is, the stronger the power of distance-based entailment is.\nProposition 11 (κ-voting Monotonicity) Let K be a KB and φ an axiom. Assume Σ = Sig∗(K∪{φ}) is a signature. For any two voting indexes κ1, κ2 ∈ (0, 1) and any d, if κ1 ≤ κ2 then K |=d,fκ1 φ implies K |=d,fκ2 φ."
    }, {
      "heading" : "5 Related Works",
      "text" : "In this section, we compare our scenario with existing paraconsistent approaches in DL-Lite or other DLs.\nExisting model-centered approaches for inconsistency handling are usually based on sorts of extended inconsistency tolerable semantics, such as four-valued description logics by [18] and quasi-classical description logics by [12]. Compared to them, our distance-based semantics works on classical interpretations but still can draw more useful and reasonable logical consequences. For example, under four-vaued DL-Lite, modus ponens, modus tollens and disjunctive syllogism are no longer hold. Taking the Penguin KB for example, we can not drive the intuitive conclusions that the swallow fred is a bird and can fly under the four-valued semantics (with the material inclusion interpretation [18]). Contrarily, quasi-classical DLs can satisfy basic reasoning rules mentioned above. However, they might bring too much contradictory consequences. Considering again the Penguin KB, all assertions about tweety become contradictory under the quasi-classical semantics. Moreover, these approaches do not provide a mechanism of comparing different models for a KB and are usually monotonic such that they do not hold consistency-preserving. And above all, our scenario provides a framework which is feasibly extended in a natural way to multiple-valued semantics so that multiple-valued logics can be incorporated.\nDifferent from model-based approaches, syntax-based paraconsistent approaches taking some consistent subsets as substitutes of KBs in reasoning, such as [7, 8, 9]. Similarly to our approach, those syntax-based paraconsistent semantics can satisfy several properties that do not hold in multi-valued semantics, such as non-monotonicity, consistency-preserving and splitting property. But they differ from ours in the following aspects. Firstly, they do not satisfy the closure consistency. Secondly, those syntaxbased approaches focus on local information so that they could difficultly capture the semantics of whole a KB. Finally, they might bring the multi-extension problem because of limitations of their selection mechanisms."
    }, {
      "heading" : "6 Conclusion",
      "text" : "In this paper, we have presented a model-based framework to handle inconsistency in DL-Lite by introducing distances over types of features for KBs. Within this framework, we defined a kind of semantics (called distance-based semantics) which characterize a kind of cautious entailment relations that are paraconsistent, non-monotonic and hold the splitting property. A characteristic property of distance-based entailments is that they retain consistency to a large extent. Furthermore, our model-based framework gives consideration to both semantic minimal change and the rule of “majority vote consideration” in syntax. In this sense, our approach is a natural combination of qualitative and quantitative approaches. As a result, our scenario is a more fine-grained compared to previous approaches to paraconsistent reasoning. Though distance-based semantics presented in this paper is built on classical semantics (two-valued semantics), we can also define distance-based semantics on multi-valued semantics within our framework.\nThe definition of the distance-based entailment relation actually provides an algorithm for paraconsistent reasoning in DL-Lite for general distances. It would be useful to develop efficient algorithms and implement them in the future. In addition, [18] propose a distance-based approach to measure inconsistency of TBoxes. However, this approach might be difficult to do so because of infinity of models of DL KBs. As a future work, we employ our distance-based technique to measure inconsistency of KBs."
    } ],
    "references" : [ {
      "title" : "The dl-lite family and relations",
      "author" : [ "A. Artale", "D. Calvanese", "R. Kontchakov", "M. Zakharyaschev" ],
      "venue" : "J. Artif. Intell. Res. (JAIR)",
      "citeRegEx" : "1",
      "shortCiteRegEx" : "1",
      "year" : 2009
    }, {
      "title" : "Repairing unsatisfiable concepts in OWL ontologies",
      "author" : [ "A. Kalyanpur", "B. Parsia", "E. Sirin", "B.C. Grau" ],
      "venue" : "Proc. of ESWC’06,",
      "citeRegEx" : "2",
      "shortCiteRegEx" : "2",
      "year" : 2006
    }, {
      "title" : "Finding maximally satisfiable terminologies for the description logic ALC",
      "author" : [ "T.A. Meyer", "K. Lee", "R. Booth", "J.Z. Pan" ],
      "venue" : "Proc. of AAAI’06,",
      "citeRegEx" : "3",
      "shortCiteRegEx" : "3",
      "year" : 2006
    }, {
      "title" : "Scalable cleanup of information extraction data using ontologies",
      "author" : [ "J. Dolby", "J. Fan", "A. Fokoue", "A. Kalyanpur", "A. Kershenbaum", "L. Ma", "J.W. Murdock", "K. Srinivas", "C.A. Welty" ],
      "venue" : "Proc. of ISWC/ASWC’07,",
      "citeRegEx" : "4",
      "shortCiteRegEx" : "4",
      "year" : 2007
    }, {
      "title" : "Computing minimum cost diagnoses to repair populated DLbased ontologies",
      "author" : [ "J. Du", "Y.D. Shen" ],
      "venue" : "Proc. of WWW’08,",
      "citeRegEx" : "5",
      "shortCiteRegEx" : "5",
      "year" : 2008
    }, {
      "title" : "A new operator for abox revision in DL-Lite",
      "author" : [ "S. Gao", "G. Qi", "H. Wang" ],
      "venue" : "Proc. of AAAI’12,",
      "citeRegEx" : "6",
      "shortCiteRegEx" : "6",
      "year" : 2012
    }, {
      "title" : "Non-standard reasoning services for the debugging of description logic terminologies",
      "author" : [ "S. Schlobach", "R. Cornet" ],
      "venue" : "Proc.of IJCAI’03,",
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 2003
    }, {
      "title" : "Reasoning with inconsistent ontologies",
      "author" : [ "Z. Huang", "F. van Harmelen", "A. ten Teije" ],
      "venue" : "Proc. of IJCAI’05, UK, Professional Book Center",
      "citeRegEx" : "8",
      "shortCiteRegEx" : "8",
      "year" : 2005
    }, {
      "title" : "Query rewriting for inconsistent dl-lite ontologies",
      "author" : [ "D. Lembo", "M. Lenzerini", "R. Rosati", "M. Ruzzi", "D.F. Savo" ],
      "venue" : "Proc. of RR’11,",
      "citeRegEx" : "9",
      "shortCiteRegEx" : "9",
      "year" : 2011
    }, {
      "title" : "An argumentation framework for description logic ontology reasoning and management",
      "author" : [ "X. Zhang", "Z. Lin" ],
      "venue" : "J. Intell. Inf. Syst. DOI:10.1007/s10844-012-0230-7",
      "citeRegEx" : "10",
      "shortCiteRegEx" : "10",
      "year" : 2012
    }, {
      "title" : "Paraconsistent reasoning for OWL",
      "author" : [ "Y. Ma", "P. Hitzler" ],
      "venue" : "Proc. of RR’09, USA. Volume 5837 of LNCS 5837.,",
      "citeRegEx" : "11",
      "shortCiteRegEx" : "11",
      "year" : 2009
    }, {
      "title" : "A tableau algorithm for handling inconsistency in OWL",
      "author" : [ "X. Zhang", "G. Xiao", "Z. Lin" ],
      "venue" : "Proc. of ESWC’09, Greece. LNCS 5554,",
      "citeRegEx" : "12",
      "shortCiteRegEx" : "12",
      "year" : 2009
    }, {
      "title" : "Quasi-classical description logic. Multiple-Valued Logic and Soft Computing",
      "author" : [ "X. Zhang", "Z. Lin" ],
      "venue" : null,
      "citeRegEx" : "13",
      "shortCiteRegEx" : "13",
      "year" : 2012
    }, {
      "title" : "Distance-based paraconsistent logics",
      "author" : [ "O. Arieli" ],
      "venue" : "Int. J. Approx. Reasoning",
      "citeRegEx" : "14",
      "shortCiteRegEx" : "14",
      "year" : 2008
    }, {
      "title" : "A new approach to knowledge base revision in DL-Lite",
      "author" : [ "Z. Wang", "K. Wang", "R.W. Topor" ],
      "venue" : "Proc. of AAAI’10,",
      "citeRegEx" : "15",
      "shortCiteRegEx" : "15",
      "year" : 2010
    }, {
      "title" : "Can you tell the difference between DL-Lite ontologies",
      "author" : [ "R. Kontchakov", "F. Wolter", "M. Zakharyaschev" ],
      "venue" : "Proc. of KR’08,",
      "citeRegEx" : "16",
      "shortCiteRegEx" : "16",
      "year" : 2008
    }, {
      "title" : "Tractable reasoning and efficient query answering in description logics: The DL-Lite family",
      "author" : [ "D. Calvanese", "G.D. Giacomo", "D. Lembo", "M. Lenzerini", "R. Rosati" ],
      "venue" : "J. Autom. Reasoning",
      "citeRegEx" : "17",
      "shortCiteRegEx" : "17",
      "year" : 2007
    }, {
      "title" : "Distance-based measures of inconsistency and incoherency for description logics",
      "author" : [ "Y. Ma", "P. Hitzler" ],
      "venue" : "Proc. of DL’10, Canada. CEUR Workshop Proceedings 573,",
      "citeRegEx" : "18",
      "shortCiteRegEx" : "18",
      "year" : 2010
    } ],
    "referenceMentions" : [ {
      "referenceID" : 0,
      "context" : "The DL-Lite [1] is a family of lightweight description logics (DLs), the logical foundation of OWL 2.",
      "startOffset" : 12,
      "endOffset" : 15
    }, {
      "referenceID" : 1,
      "context" : "The first one is based on the assumption that inconsistencies are caused by erroneous data and thus, they should be removed in order to obtain a consistent KB ([2, 3, 4, 5, 6]).",
      "startOffset" : 160,
      "endOffset" : 175
    }, {
      "referenceID" : 2,
      "context" : "The first one is based on the assumption that inconsistencies are caused by erroneous data and thus, they should be removed in order to obtain a consistent KB ([2, 3, 4, 5, 6]).",
      "startOffset" : 160,
      "endOffset" : 175
    }, {
      "referenceID" : 3,
      "context" : "The first one is based on the assumption that inconsistencies are caused by erroneous data and thus, they should be removed in order to obtain a consistent KB ([2, 3, 4, 5, 6]).",
      "startOffset" : 160,
      "endOffset" : 175
    }, {
      "referenceID" : 4,
      "context" : "The first one is based on the assumption that inconsistencies are caused by erroneous data and thus, they should be removed in order to obtain a consistent KB ([2, 3, 4, 5, 6]).",
      "startOffset" : 160,
      "endOffset" : 175
    }, {
      "referenceID" : 5,
      "context" : "The first one is based on the assumption that inconsistencies are caused by erroneous data and thus, they should be removed in order to obtain a consistent KB ([2, 3, 4, 5, 6]).",
      "startOffset" : 160,
      "endOffset" : 175
    }, {
      "referenceID" : 6,
      "context" : "[7, 8, 9, 10] introduce some strategies to select consistent subsets from an inconsistent KB as substitutes of the original KB in reasoning.",
      "startOffset" : 0,
      "endOffset" : 13
    }, {
      "referenceID" : 7,
      "context" : "[7, 8, 9, 10] introduce some strategies to select consistent subsets from an inconsistent KB as substitutes of the original KB in reasoning.",
      "startOffset" : 0,
      "endOffset" : 13
    }, {
      "referenceID" : 8,
      "context" : "[7, 8, 9, 10] introduce some strategies to select consistent subsets from an inconsistent KB as substitutes of the original KB in reasoning.",
      "startOffset" : 0,
      "endOffset" : 13
    }, {
      "referenceID" : 9,
      "context" : "[7, 8, 9, 10] introduce some strategies to select consistent subsets from an inconsistent KB as substitutes of the original KB in reasoning.",
      "startOffset" : 0,
      "endOffset" : 13
    }, {
      "referenceID" : 10,
      "context" : "[11] present the Belnap’s four-valued semantics of DLs where two additional logical values besides “true” and “false” are introduced to indicate contradictory conclusions.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 11,
      "context" : "[12, 13] present the Hunter’s quasi-classical semantics of DLs whose strong semantics strengthens the inference power of four-valued semantics.",
      "startOffset" : 0,
      "endOffset" : 8
    }, {
      "referenceID" : 12,
      "context" : "[12, 13] present the Hunter’s quasi-classical semantics of DLs whose strong semantics strengthens the inference power of four-valued semantics.",
      "startOffset" : 0,
      "endOffset" : 8
    }, {
      "referenceID" : 13,
      "context" : "Recently a distance-based semantics presented by [14] has been proposed to deal with inconsistent KBs in propositional logic.",
      "startOffset" : 49,
      "endOffset" : 53
    }, {
      "referenceID" : 14,
      "context" : "To overcome these difficulties, in this paper we first use the notion of features [15] and introduce a distance-based semantics for paraconsistent reasoning with DL-Lite.",
      "startOffset" : 82,
      "endOffset" : 86
    }, {
      "referenceID" : 15,
      "context" : "In addition, features also generalize the notion of types for TBoxes [16] to general KBs.",
      "startOffset" : 69,
      "endOffset" : 73
    }, {
      "referenceID" : 15,
      "context" : "To characterize infinite models in a finite expression, two important notions, namely, type and feature, are respectively defined by [16] and [15] for TBoxes and general KBs in DL-Lite.",
      "startOffset" : 133,
      "endOffset" : 137
    }, {
      "referenceID" : 14,
      "context" : "To characterize infinite models in a finite expression, two important notions, namely, type and feature, are respectively defined by [16] and [15] for TBoxes and general KBs in DL-Lite.",
      "startOffset" : 142,
      "endOffset" : 146
    }, {
      "referenceID" : 16,
      "context" : "It is shown in [17] that K is a KB having no finite model.",
      "startOffset" : 15,
      "endOffset" : 19
    }, {
      "referenceID" : 14,
      "context" : "Lemma 1 ([15]) Let K be a KB and Σ = Sig(K).",
      "startOffset" : 9,
      "endOffset" : 13
    }, {
      "referenceID" : 14,
      "context" : "Lemma 2 ([15]) Let K1,K2 be two KBs and Σ = Sig(K1 ∪K2).",
      "startOffset" : 9,
      "endOffset" : 13
    }, {
      "referenceID" : 14,
      "context" : "Example 3 Let K = ({∃P ⊑ ⊥}, {∃P (a)}) be a KB (see [15]) and Σ = {P, a, 1}.",
      "startOffset" : 52,
      "endOffset" : 56
    }, {
      "referenceID" : 14,
      "context" : "We argue that this adoption can not only uniformly deal with all inconsistencies but also overcome difficulty of defining distance over pairs of features (see [15]).",
      "startOffset" : 159,
      "endOffset" : 163
    }, {
      "referenceID" : 13,
      "context" : "Furthermore, distance-based semantics also embodies the idea of “majority vote consideration” (see [14]), that is, conclusions must hold more argument for them, for resolving contradictions so that the results are more stable.",
      "startOffset" : 99,
      "endOffset" : 103
    }, {
      "referenceID" : 13,
      "context" : "For this reason, we need hereditary aggregation functions to really guarantee the validity of the splitting property (see [14]).",
      "startOffset" : 122,
      "endOffset" : 126
    }, {
      "referenceID" : 17,
      "context" : "Existing model-centered approaches for inconsistency handling are usually based on sorts of extended inconsistency tolerable semantics, such as four-valued description logics by [18] and quasi-classical description logics by [12].",
      "startOffset" : 178,
      "endOffset" : 182
    }, {
      "referenceID" : 11,
      "context" : "Existing model-centered approaches for inconsistency handling are usually based on sorts of extended inconsistency tolerable semantics, such as four-valued description logics by [18] and quasi-classical description logics by [12].",
      "startOffset" : 225,
      "endOffset" : 229
    }, {
      "referenceID" : 17,
      "context" : "Taking the Penguin KB for example, we can not drive the intuitive conclusions that the swallow fred is a bird and can fly under the four-valued semantics (with the material inclusion interpretation [18]).",
      "startOffset" : 198,
      "endOffset" : 202
    }, {
      "referenceID" : 6,
      "context" : "Different from model-based approaches, syntax-based paraconsistent approaches taking some consistent subsets as substitutes of KBs in reasoning, such as [7, 8, 9].",
      "startOffset" : 153,
      "endOffset" : 162
    }, {
      "referenceID" : 7,
      "context" : "Different from model-based approaches, syntax-based paraconsistent approaches taking some consistent subsets as substitutes of KBs in reasoning, such as [7, 8, 9].",
      "startOffset" : 153,
      "endOffset" : 162
    }, {
      "referenceID" : 8,
      "context" : "Different from model-based approaches, syntax-based paraconsistent approaches taking some consistent subsets as substitutes of KBs in reasoning, such as [7, 8, 9].",
      "startOffset" : 153,
      "endOffset" : 162
    }, {
      "referenceID" : 17,
      "context" : "In addition, [18] propose a distance-based approach to measure inconsistency of TBoxes.",
      "startOffset" : 13,
      "endOffset" : 17
    } ],
    "year" : 2017,
    "abstractText" : "DL-Lite is an important family of description logics. Recently, there is an increasing interest in handling inconsistency in DL-Lite as the constraint imposed by a TBox can be easily violated by assertions in ABox in DL-Lite. In this paper, we present a distance-based paraconsistent semantics based on the notion of feature in DL-Lite, which provides a novel way to rationally draw meaningful conclusions even from an inconsistent knowledge base. Finally, we investigate several important logical properties of this entailment relation based on the new semantics and show its promising advantages in non-monotonic reasoning for DL-Lite.",
    "creator" : "LaTeX with hyperref package"
  }
}