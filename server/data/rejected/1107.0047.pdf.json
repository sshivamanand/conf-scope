{
  "name" : "1107.0047.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Decentralized Control of Cooperative Systems: Categorization and Complexity Analysis",
    "authors" : [ "Claudia V. Goldman", "Shlomo Zilberstein" ],
    "emails" : [ "clag@cs.umass.edu", "shlomo@cs.umass.edu" ],
    "sections" : [ {
      "heading" : "1. Introduction",
      "text" : "Markov decision processes have been widely studied as a mathematical framework for sequential decision-making in stochastic domains. In particular, single-agent planning problems in stochastic domains were modeled as partially observable Markov decision processes (POMDPs) or fully-observable MDPs (Dean, Kaelbling, Kirman, & Nicholson, 1995; Kaelbling, Littman, & Cassandra, 1998; Boutilier, Dearden, & Goldszmidt, 1995). Borrowing from Operations Research techniques, optimal plans can be computed for these planning problems by solving the corresponding Markov decision problem. There has been a vast amount of progress in solving individual MDPs by exploiting domain structure (e.g., Boutilier et al., 1995; Feng & Hansen, 2002). Approximations of MDPs have also been studied, for example, by Guestrin et al. (2003), assuming that the reward function can be decomposed into local reward functions each depending on only a small set of variables.\nWe are interested in a single Markov decision process that is collaboratively controlled by multiple decision-makers. The group of agents cooperate in the sense that they all want to maximize a single global objective (or minimize the cost of achieving it). Nevertheless, the decision-makers do not have full observability of the whole system at the time of execution. These processes can be found in many application domains such as multi-robot problems, flexible manufacturing and information gathering. For example, consider a group of space\nc©2004 AI Access Foundation. All rights reserved.\nexploration rovers, like those sent by NASA to Mars.1 These rovers could be assigned a set of experiments to perform on the planet before they need to meet. They may have a limited amount of time to perform these experiments. Then, the robots need to decide what experiments to perform and how much time they should invest in each one given the available battery power and remaining time. Decentralized cooperative problems also include information gathering systems, where several software agents with access to different servers may provide answers to a user’s query. These agents’ global objective is to give the user the best answer as early as possible, given the load on their servers and the preferences given by the user. Controlling the operation of the agents in such examples is not trivial because they face uncertainty regarding the state of the environment (e.g., the load on the communication link between the servers in the information gathering example may vary), the outcome of their actions (e.g., the rovers on Mars may be uncertain about their location and time needed to move from one target location to another), and the accuracy of their observations. All these types of uncertainty are taken into account when solving such decentralized problems.\nThe processes described above are examples of decentralized partially-observable Markov decision processes (Dec-POMDPs) or decentralized Markov decision processes (Dec-MDPs).2 The complexity of solving these problems has been studied recently (Bernstein, Givan, Immerman, & Zilberstein, 2002; Pynadath & Tambe, 2002). Bernstein et al. have shown that solving optimally a Dec-MDP is NEXP-complete by reducing the control problem to the tiling problem. Rabinovich et al. (2003) have shown that even approximating the off-line optimal solution of a Dec-MDP remains NEXP. Nair et al. (2003) have presented the Joint Equilibrium-based Search for Policies (JESP) algorithm that finds a locally-optimal joint solution. Researchers have attempted to approximate the coordination problem by proposing on-line learning procedures. Peshkin et al. (2000) have studied how to approximate the decentralized solution based on a gradient descent approach for on-line learning (when the agents do not know the model). Schneider et al. (1999) assume that each decision-maker is assigned a local optimization problem. Their analysis shows how to approximate the global optimal value function when agents may exchange information about their local values at no cost. Neither convergence nor bounds have been established for this approach. Wolpert et al. (1999) assume that each agent runs a predetermined reinforcement learning algorithm and transforms the coordination problem into updating the local reward function so as to maximize the global reward function. Again, this is an approximation algorithm for online learning that does not guarantee convergence. Agents in this model may communicate freely. Guestrin et al. study off-line approximations (a centralized approach (Guestrin, Koller, & Parr, 2001) and a distributed approach (Guestrin & Gordon, 2002)), where a known structure of the agents’ action dependencies induces a message passing structure. In this context, agents choose their actions in turns and communication is free. The solution is based on the assumption that the value function of the system can be represented by a set of compact basis functions, which are then approximated. The complexity of the algorithm is exponential in the width of the coordination graph. The order of elimination is needed beforehand because it has a great effect on the result.\n1. mars.jpl.nasa.gov/mer/ 2. These problems are defined in Definition 4 in Section 2.\nWhat is common to these approaches is the departure from the assumption that each agent has a known local reward function. The questions that they attempt to answer, hence, take the form of how to design or manipulate local reward functions so as to approximate the actual system reward function.\nIn this work, we take a different approach. We aim at solving the decentralized control problem off-line without making any particular assumptions about the reward functions of each agent. The problem is therefore analyzed from a decentralized perspective. We have developed a formal model for decentralized control, which extends current models based on Markov decision processes. We refer to the most general problem where information sharing between the agents can result from indirect communication (i.e., via observations), by direct communication (i.e., via messages) or by sharing common uncontrollable features of the environment (defined in Section 2.2). When direct communication is possible, we assume that communication may incur a cost. Communication can assist the agents to better control the process, but it may not be possible or desirable at every moment. Exchanging information may incur a cost associated with the required bandwidth, the risk of revealing information to competing agents or the complexity of solving an additional problem related to the communication (e.g., computing the messages). Assuming that communication may not be reliable adds another dimension of complexity to the problem.\nBecker et al. (2003) presented the first algorithm for optimal off-line decentralized control when a certain structure of the joint reward was assumed. Recently, Hansen et al. (2004) showed how to generalize dynamic programming to solve optimally general decentralized problems. Nevertheless, no existing technique solves efficiently special classes of Dec-POMDPs that we identify in this paper. Pynadath and Tambe (2002) studied a similar model to ours, although they did not propose an algorithm for solving the decentralized control problem. Claus and Boutilier (1998) studied a simple case of decentralized control where agents share information about each other’s actions during the off-line planning stage. The solution presented in their example includes a joint policy of a single action for each agent to be followed in a stateless environment. The agents learn which equilibrium to play. In our model, partial observability is assumed and the scenarios studied are more complex and include multiple states. Centralized multi-agent systems (MAS) were also studied in the framework of MDPs (e.g., Boutilier, 1999), where both the off-line planning stage and the on-line stage are controlled by a central entity, or by all the agents in the system, who have full observability.\nCoordination and cooperation have been studied extensively by the distributed artificial intelligence community (Durfee, 1988; Grosz & Kraus, 1996; Smith, 1988) assuming a known and fixed language of communication. KQML (Finin, Labrou, & Mayfield, 1997) is an example of one standard designed to specify the possible communication between the agents. Balch and Arkin’s (1994) approach to communication between robots is inspired by biological models and refers to specific tasks such as foraging, consumption and grazing. Their empirical study was performed in the context of reactive systems and communication was free. Our aim is to find optimal policies of communication and action off-line, taking into account information that agents can acquire on-line. Game theory researchers (Luce & Raiffa, 1957; Aumann & Hart, 1994) have also looked at communication, although the approaches and questions are somewhat different from ours. For example, Wärneryd (1993), and Blume and Sobel (1995) study how the receiver of a message may alter its actions in\ngames where only one agent can send a single message at no cost. In contrast, we study sequential decision-making problems where all the agents can send various types of messages, which incur some cost. Our objective is to analyze the complexity of the problem and formulate algorithms that can find optimal policies of behavior as well as communication.\nOur work focuses on decentralized cooperative MAS. Agents in cooperative MAS typically have limited ability to share information during execution (due to the distributed nature of the system). However, due to the cooperative nature of such systems, these constraints rarely apply to the pre-execution stage. Thus, we focus on cooperative agents that can share information fully at the off-line planning stage. Unlike the centralized approach, these agents will be acting in real-time in a decentralized manner. They must take this into account while planning off-line.\nSub-classes of Dec-POMDPs can be characterized based on how the global states, transition function, observation function, and reward function relate to the partial view of each of the controlling agents. In the simplest case, the global states can be factored, the probability of transitions and observations are independent, the observations combined determine the global state, and the reward function can be easily defined as the sum of local reward functions. In this extreme case we can say that the Dec-POMDP is equivalent to the combination of n independent MDPs. This simple case is solvable by combining all the optimal solutions of the independent MDPs. We are interested in more complex Dec-POMDPs, in which some or all of these assumptions are violated. In particular, we characterize Dec-POMDPs, which may be jointly fully-observable, may have independent transitions and observations and may result in goal-oriented behavior. We analyze the complexity of solving these classes off-line and show that it ranges from NEXP to P. We also identify different forms of information sharing and show that when direct communication is possible, exchanging local observations is sufficient to attain optimal decentralized control.\nThe contributions of the paper are as follows: formalizing special classes of decentralized control problems (Section 2), identifying classes of decentralized control that are critical in decreasing the complexity of the problem (Section 3), designing algorithms for controlling optimally a decentralized process with goal-oriented behavior (Section 4), and extending the formal framework by introducing direct communication, considering the trade-off between its cost and the value of the information acquired, and analyzing the complexity of solving optimally such problems (Section 5)."
    }, {
      "heading" : "2. The Dec-POMDP Model",
      "text" : "We are interested in a stochastic process that is cooperatively controlled by a group of decision-makers who lack a central view of the global state. Nevertheless, these agents share a set of objectives and all of them are interested in maximizing the utility of the system. The process is decentralized because none of the agents can control the whole process and none of the agents has a full view of the global state. The formal framework in which we study such decentrally controlled processes, called Dec-POMDPs, is presented below (originally presented by Bernstein et al., 2002). For simplicity of exposition, the formal model is presented for two agents, although it can be extended to any number.\nM = < S,A1, A2, P,R,Ω1,Ω2, O, T > where:\n• S is a finite set of world states with a distinguished initial state s0.\n• A1 and A2 are finite sets of control actions. ai denotes an action performed by agent i.\n• P is the transition probability function. P (s′|s, a1, a2) is the probability of moving from state s ∈ S to state s′ ∈ S when agents 1 and 2 perform actions a1 and a2 respectively. We note that the transition model is stationary, i.e., it is independent of time.\n• R is the global reward function. R(s, a1, a2, s ′) represents the reward obtained by the\nsystem as a whole, when agent 1 executes action a1 and agent 2 executes action a2 in state s resulting in a transition to state s′.\n• Ω1 and Ω2 are finite sets of observations.\n• O is the observation function. O(o1, o2|s, a1, a2, s ′) is the probability of observing o1\nand o2 (respectively by the two agents) when in state s agent 1 takes action a1 and agent 2 takes action a2, resulting is state s ′.\n• If the Dec-POMDP has a finite horizon, it is represented by a positive integer T .\nWe will illustrate our definitions and results through the Meeting under Uncertainty example. In this scenario, we assume for simplicity that there are two robots operating on a two-dimensional grid. The state of the system is given by the locations of each one of the robots, s = [(x1, y1)(x2, y2)]. In a more general example, this state may include other features such as the topology of the terrain, which no rover may be able to sense (e.g., due to lack of equipment). The robots cannot observe each other, and the movement actions they can perform have uncertain outcomes (e.g., each robot will successfully move to the next location with some probability, but it may remain at the same location where it took the action). In a more uncertain case, the topology of the terrain, although hidden from the agents’ observations may affect the resulting location of a moving action. The robots’ objective is to minimize the time to meet. The observation of robot i corresponds to i’s x and y coordinates. Solving optimally such a decentralized problem means finding the sequence of moves for each agent such that they meet as soon as possible.\nGiven the Dec-POMDP model, a local policy of action for a single agent is given by a mapping from sequences of observations to actions. In our example, a robot’s local policy instructs it to take a certain movement action given the sequence of locations it has observed so far. A joint policy is a tuple composed of these local policies, one for each agent. To solve a decentralized POMDP problem one must find the optimal joint policy that is, the one with maximum value (for example given by the maximum expected accumulated global reward). By associating a small negative reward with each action, maximizing reward coincides with the objective of minimizing time to meet. Notice that the agents’ observations can be dependent on each other, allowing the agents to know what other agents are observing and in some sense enabling the agents to obtain full observability of the system state. That is, even though the agents may not communicate directly, when the observations are dependent, agents may be able to obtain information about the others without receiving direct messages. For example, assume that in our scenario there are certain locations, which can host only one robot at a time. If one robot observes that it is located at any one of\nthese sites, then it knows that the other robot cannot be located there even though this robot does not actually see the other nor receive any information from it.\nIn the next section, we characterize certain properties that a decentralized process may have. These properties will play an important role when analyzing the complexity of solving different classes of decentrally controlled cooperative problems."
    }, {
      "heading" : "2.1 Classes of Dec-POMDPs",
      "text" : "It is known that solving optimally general decentralized problems is very hard. We are interested in identifying interesting subclasses of the general problem and their characteristics. As we show in Section 3, this classification reveals interesting complexity results and facilitates the design of algorithms. The first two categories that we define involve independence of the transitions or the observations of the agents. Figure 1 presents a snapshot of the system at times t and t+1 that illustrates these categories. We assume that the global states are factored and we denote by si the features of the world that may be observed fully by agent i.3 Specifically, agent i senses observation oi, which in some cases can be identical to the local state of the agent. As a result of agent i performing action ai, when the system is at local state si, the system transitions to state s ′ i, where the agent observes oi. The resulting state s′i is not affected by the resulting state of the other agent s ′ j. Similarly, the observations in these resulting states do not influence each other given the corresponding local information.\nThe formal definitions for decentralized processes with independent transitions and observations follow.\nDefinition 1 (Dec-POMDP with Independent Transitions) A Dec-POMDP has independent transitions if the set S of states can be factored into two components S1 and S2 such that:\n∀s1, s ′ 1∈S1,∀s2, s ′ 2∈S2,∀a1∈A1,∀a2∈A2,\nP r(s′1|(s1, s2), a1, a2, s ′ 2) = Pr(s ′ 1|s1, a1) ∧\nPr(s′2|(s1, s2), a1, a2, s ′ 1) = Pr(s ′ 2|s2, a2).\n3. A partial view in general does not have to correspond to a partition of the global state, but we limit ourselves to problems with factored representations."
    }, {
      "heading" : "In other words, the transition probability P of the Dec-POMDP can be represented as",
      "text" : "P = P1 × P2, where P1 = Pr(s ′ 1|s1, a1) and P2 = Pr(s ′ 2|s2, a2).\nThe Meeting under Uncertainty example can be modified to present a problem with dependent transitions. For example, the scenario may include obstacles that can be moved by the agents when performing a move-obstacle action. The outcome of this action is that the rover’s location is updated based on the direction of the move. For example, assume that one rover is located at (1,1) and finds an obstacle in location (1,2) which blocks its movement towards some goal. The rover decides to perform a move-obstacle action on that obstacle to the east. This action may have a stochastic outcome, for example with some probability Pobstacle the rover succeeds and with probability 1 − Pobstacle it remains in the same location (1,1). With this modification, the problem has dependent transitions. For example, if both rovers decide to apply a move-obstacle action to the same obstacle, standing each on different sides of the obstacle, then the resulting state of each rover depends on the other rover also performing a move-obstacle action.\nMoreover, the observations of the agents can be independent, i.e., each agent’s own observations are independent of the other agents’ actions.\nDefinition 2 (Dec-POMDP with Independent Observations) A Dec-POMDP has independent observations if the set S of states can be factored into two components S1 and S2 such that:\n∀o1∈Ω1,∀o2∈Ω2,∀s=(s1, s2), s ′=(s′1, s ′ 2) ∈ S,∀a1∈A1,∀a2∈A2,\nP r(o1|(s1, s2), a1, a2, (s ′ 1, s ′ 2), o2) = Pr(o1|s1, a1, s ′ 1)∧\nPr(o2|(s1, s2), a1, a2, (s ′ 1, s ′ 2), o1) = Pr(o2|s2, a2, s ′ 2)\nO(o1, o2|(s1, s2), a1, a2, (s ′ 1, s ′ 2)) =\nPr(o1|(s1, s2), a1, a2, (s ′ 1, s ′ 2), o2)× Pr(o2|(s1, s2), a1, a2, (s ′ 1, s ′ 2), o1)."
    }, {
      "heading" : "In other words, the observation probability O of the Dec-POMDP can be decomposed into",
      "text" : "two observation probabilities O1 and O2, such that O1 = Pr(o1|(s1, s2), a1, a2, (s ′ 1, s ′ 2), o2) and O2 = Pr(o2|(s1, s2), a1, a2, (s ′ 1, s ′ 2), o1).\nIn the Meeting under Uncertainty example, if a robot’s observation of its current location depends only on its transition from its previous location and on the action it performed, then the observations are independent. But more complex problems can arise if each agent’s observation depends also on the other agent’s location or action. For example, assume that in addition to the move actions, the rovers can also turn a flashlight that they hold on or off. In such cases, one rover’s observation may be affected by the light or the lack of light in the area where the rover is observing. That is, the probability of a certain observation o depends on both rovers’ actions and states.\nThroughout the paper, when we refer to a Dec-POMDP with independent transitions and observations, we assume the same decomposition of the global states into S1 and S2. We refer to Si as the partial view of agent i.\nThere are cases where agents may observe some common features of the global state, leading to dependent observations. When these common features have no impact on the\ntransition model or reward, the problem can be reformulated to satisfy the property of independent observations. Such reformulation is shown to reduce the complexity of the problem in Section 3.\nOne of the main difficulties in solving Dec-POMDPs optimally results from the lack of full observability of the complete global state. An agent has full observability if it can determine with certainty the global state of the world from its local observation. For example, each time a robot observes where it is located, it also observes the other robot’s location. Knowing both locations enables both agents to make the optimal decision about their next move in order to eventually meet sooner.\nDefinition 3 (Fully-observable Dec-POMDP) A Dec-POMDP is fully observable if there exists a mapping for each agent i, Fi : Ωi → S such that whenever O(o1, o2|s, a1, a2, s\n′) is non-zero then Fi(oi) = s ′.\nThis paper analyzes decentralized problems where full observability is not satisfied. Instead, we distinguish between two classes of problems with restricted system observability: (1) combining both agents’ partial views leads to the complete global state, and (2) each agent’s own partial view si is fully observable.\n4 We say that Dec-POMDPs with property (1) are jointly fully observable.\nDefinition 4 (Jointly Fully-observable Dec-POMDP) A Dec-POMDP is jointly fully observable (also referred to as a Dec-MDP) if there exists a mapping J : Ω1×Ω2 → S such that whenever O(o1, o2|s, a1, a2, s ′) is non-zero then J(o1, o2) = s ′.\nNotice that both Definitions 1 and 2 apply to Dec-MDPs as well as to Dec-POMDPs. The Meeting under Uncertainty scenario presented in Section 2 when the state includes only the rovers’ locations (and it does not include the terrain topology) is actually a Dec-MDP. The global state is given by the two pairs of coordinates. There is no other feature in the system state that is hidden from the agents. Notice that even though the combination of the agents’ observations results in the global state, each agent may still be uncertain about its own current partial view. Each agent may have a belief about its actual location. We define another class of problems, locally fully-observable Dec-POMDPs, where each agent is certain about its observations. General Dec-MDPs consider only the combination of the agents’ observations, but the definition does not say anything about each agent’s observation.\nDefinition 5 (Locally Fully-observable Dec-POMDP) A Dec-POMDP with independent transitions is locally fully observable if there exists a mapping for each agent i, Li : Ωi → Si such that whenever O(o1, o2|s, a1, a2, s ′) (where s = (s1, s2) and s ′ = (s′1, s ′ 2)) is non-zero then L1(o1) = s ′ 1 and L2(o2) = s ′ 2, where si, s ′ i ∈ Si are the partial views of agent i.\nThe Meeting under Uncertainty example is locally fully observable because each robot knows with certainty where it is located. We may think of more realistic robots, which may be uncertain about their actual location due to hardware inaccuracies.\n4. This case does not induce full observability as defined in Definition 3 since there may be information in the global state that is hidden from the agents.\nNotice that a jointly fully-observable process, which is also locally fully observable is not necessarily fully observable. In decentralized control problems we generally do not have full observability of the system. In the problems we consider, at best, the observations of all the agents combined determine with certainty the global state, and each such observation determines with certainty the partial view of each agent. The Meeting scenario is jointly fully observable and locally fully observable, but none of the agents know the complete state of the system.\nOur next lemmas show some interesting relations between the classes identified so far. These lemmas will help us show in Section 3 that certain classes of Dec-POMDPs are easier to solve. The classes identified so far correspond to practical real-world scenarios such as multi-rover scenarios, multi-agent mapping and manufacturing where loosely-coupled robots act to achieve a global objective.\nLemma 1 If a Dec-MDP has independent observations and transitions, then the Dec-MDP is locally fully observable.\nProof. We use properties of conditional probabilities established by Pearl (1988). The notation I(X,Y |Z) means that the set of variables X is independent of the set of variables Y given the set of variables Z. The properties we use are:\n• Symmetry — I(X,Y |Z) ⇔ I(Y,X|Z). • Weak Union — I(X,Y ⋃ W |Z) ⇒ I(X,W |Z ⋃ Y ) ∧ I(X,Y |Z ⋃ W ). • Contraction — I(X,W |Z ⋃ Y ) ∧ I(X,Y |Z) ⇒ I(X,Y ⋃ W |Z). • Decomposition — I(X,Y ⋃ W |Z) ⇒ I(X,Y |Z) ∧ I(X,W |Z).\nUsing this notation, the property of independent transitions implies I({s′1}, {s2, a2, s ′ 2}|{s1, a1}). The property of independent observations can be stated as I({o2}, {s1, a1, s ′ 1, o1}|{s2, a2, s ′ 2}).\nFrom the independent observations and the weak union properties, we obtain\nI({o2}, {s ′ 1}|{s2, a2, s ′ 2, s1, a1, o1}) (1)\n(where X = {o2}, W = {s1, a1, o1}, Y = {s ′ 1} and Z = {s2, a2, s ′ 2}).\nFrom the independent observations and decomposition property, we obtain:\nI({o1}, {s2, a2, s ′ 2}|{s1, a1, s ′ 1}) (2)\n(where X = {o1}, Y = {s2, a2, s ′ 2}, W = {o2} and Z = {s1, a1, s ′ 1}).\nFrom the independent transitions, Equation 2 and the contraction properties, we obtain:\nI({s2, a2, s ′ 2}, {s ′ 1, o1}|{s1, a1}) (3)\n(where X = {s2, a2, s ′ 2}, W = {o1}, Z = {s1, a1} and Y = {s ′ 1}).\nFrom Equation 3 and weak union we obtain:\nI({s2, a2, s ′ 2}, {s ′ 1}|{s1, a1, o1}) (4)\n(where X = {s2, a2, s ′ 2}, W = {s ′ 1}, Y = {o1}, and Z = {s1, a1}).\nApplying the symmetry property to Equation 4, we obtain\nI({s′1}, {s2, a2, s ′ 2}|{s1, a1, o1}). (5)\nApplying the symmetry property to Equation 1 and contracting with Equation 5, we obtain\nI({s′1}, {s2, a2, s ′ 2, o2}|{s1, a1, o1}). (6)\nIf we apply all of the above equations to the other agent (i.e., replace the index 2 with the index 1 and vice versa), then the following equation holds:\nI({s′2}, {s1, a1, s ′ 1, o1}|{s2, a2, o2}). (7)\nApplying the decomposition property to Equation 7, where X = {s′2}, W = {s ′ 1},\nY = {s1, a1, o1} and Z = {s2, a2, o2} we obtain:\nI({s′2}, {s1, a1, o1}|{s2, a2, o2}). (8)\nThe lemma assumes a Dec-MDP, that is: Pr(s′|o1, o2) = 1. Since this probability is one, it is also true that Pr(s′|s, a1, a2, o1, o2) = 1. The lemma assumes independent transitions and observations, therefore the set of states is factored. Following conditional probabilities rules, we obtain:\n1 = Pr(s′1, s ′ 2|s1, a1, o1, s2, a2, o2) = Pr(s ′ 1|s1, a1, o1, s2, a2, s ′ 2, o2)Pr(s ′ 2|s1, a1, o1, s2, a2, o2).\nEquation 6 means that Pr(s′1|s1, a1, o1, s2, a2, s ′ 2, o2) = Pr(s ′ 1|s1, a1, o1). Equation 8 is equivalent to Pr(s′2|s1, a1, o1, s2, a2, o2) = Pr(s ′ 2|s2, a2, o2). Therefore,\n1 = Pr(s′1, s ′ 2|s1, a1, o1, s2, a2, o2) = Pr(s ′ 1|s1, a1, o1)Pr(s ′ 2|s2, a2, o2).\nSo, each agent’s partial view is determined with certainty by its observation and own transition, i.e., the Dec-MDP is locally fully observable. ✷\nFor the classes of problems studied in this lemma (Dec-MDPs with independent transitions and observations), a local policy for agent i in a locally fully-observable Dec-MDP is a mapping from sequences of states in agent i’s partial view to actions. This differs from the general Dec-MDP case, where local policies are mappings from sequences of observations to actions. Formally, δi : S ∗ i → Ai where Si corresponds to the decomposition of global states assumed in Definitions 1 and 2 for Dec-MDPs with independent transitions and observations.\nMoreover, we can show that an agent does not need to map a sequence of partial views to actions, but rather that it is sufficient to remember only the current partial view. This is shown in the next lemma.\nLemma 2 The current partial view of a state s observed by agent i (si) is a sufficient statistic for the past history of observations (oi) of a locally fully-observable Dec-MDP with independent transitions and observations.\nProof. Without loss of generality we do all the computations for agent 1. We define I1t as all the information about the Dec-MDP process available to agent 1 at the end of the control interval t. This is done similarly to Smallwood and Sondik’s original proof for classical POMDPs (Smallwood & Sondik, 1973). I1t is given by the action a1t that agent 1 chose to perform at time t, the current resulting state s1t , which is fully observable by agent 1 (s1t = i1), and the previous information I 1 t−1. We assume a certain policy for agent 2, π2 is known and fixed. π2(st) is the action taken by agent 2 at the end of control interval t.\nWe compute the belief-state of agent 1, which is the probability that the system is at global state j assuming only the information available to agent 1 (I1t ). This computation allows us to build a belief-state MDP for agent 1. Agent 1’s optimal local policy is the solution that obtains the highest value over all the solutions resulting from solving all the belief-state MDPs built for each possible policy for agent 2.\nWe compute the probability that the system is in state st=j=(j1, j2) at time t, given the information available to agent 1:Pr(st = j|I 1 t ) =Pr(st = (j1, j2)| < a1t , s1t , π2(st), I 1 t−1 >). Applying Bayes rule leads to the following result:\nPr(st = (j1, j2)| < a1t , s1t , π2(st), I 1 t−1 >) =\nPr(st = (j1, j2), s1t = i1|a1t , π2(st), I 1 t−1)\nPr(s1t = i1|a1t , π2(st), I 1 t−1)\n.\nSince the Dec-MDP is locally fully observable, the denominator is equal to one. We expand the numerator by summing over all the possible states that could have lead to the current state j.\nPr(st = (j1, j2), s1t = i1|a1t , π2(st), I 1 t−1) =\nΣst−1Pr(st−1|a1t , π2(st), I 1 t−1)Pr(st=j|st−1, a1t , π2(st), I 1 t−1)Pr(s1t = i1|st=j, st−1, a1t , π2(st), I 1 t−1)\nThe actions taken by the agents at time t do not affect the state of the system at time t−1, therefore the first probability term is not conditioned on the values of the actions. The second probability term is exactly the transition probability of the Dec-MDP. Since the Dec-MDP has independent transitions, we can decompose the system transition probability into two corresponding probabilities P1 and P2, following Definition 1. The last term is equal to one because the Dec-MDP is locally fully observable. Therefore, we obtain:\nPr(st = j|I 1 t ) = Σst−1Pr(st−1|I 1 t−1)P (st = j|st−1, a1t , π2(st)) =\nΣst−1Pr(st−1|I 1 t−1)P1(s1t = j1|s1t−1 = k1, a1t)P2(s2t = j2|s2t−1 = k2, π2(st)).\nSince agent 1 fully observes s1 = i1 at time t, then the probability that the system is at state j and its first component j1 is not i1 is zero.\nPr(st = (j1 6= i1, j2)|I 1 t ) = 0.\nP r(st = (i1, j2)|I 1 t ) =\nΣst−1Pr(st−1|I 1 t−1)P1(s1t = i1|s1t−1 = k1, a1t)P2(s2t = j2|s2t−1 = k2, π2(st)).\nAgent 1 can compute the last term for the fixed policy for agent 2. We conclude that the probability of the system being at state j at time t depends on the belief-state at time t−1. ✷\nFollowing this lemma, si, the current partial view of agent i is a sufficient statistic for the history of observations. Therefore, an agent does not need to remember sequences of observations in order to decide which actions to perform.\nCorollary 1 Agent i’s optimal local policy in a Dec-MDP with independent transitions and observations can be expressed as a mapping from agent i’s current partial view and current time to actions. For the finite horizon case:\nδi : Si × T → Ai.\nThe Meeting under Uncertainty scenario as described corresponds to a Dec-MDP with independent transitions and observations, therefore it is locally-fully observable. In such a case, for every possible location, a robot’s decision about its next optimal move is not affected by the previous locations where the robot moved through.\nWe continue our classification of decentralized problems considering two additional dimensions: one is whether agents can share information and the other is whether the agents’ behavior is goal-oriented. These classes are further described in the next two sections."
    }, {
      "heading" : "2.2 Information Sharing",
      "text" : "We distinguish among three possible ways in which agents can share information: indirect communication, direct communication, and common uncontrollable features.\n1. Indirect Communication — In the most general view, an action (ai ∈ Ai) performed by an agent can result in three different consequences, and thus it serves any of the following three purposes: information gathering, changing the environment and indirect communication. Agent i’s actions can affect the observations made by agent j; these observations can serve as messages transmitted by agent i. Let’s assume, for example, that a robot determines its location relative to the other robot’s location. Then, the agents may have agreed on a meeting place based on their respective locations: If robot 1 sees robot 2 in location A, then they will meet at meeting place MA otherwise they will meet at meeting place MB. Even though the agents do not communicate directly, the dependencies between the observations can carry information that is shared by these agents.\nIt should be noted that when assuming dependencies between observations that result in information sharing through indirect communication, the general decentralized control problem already includes the problem of what to communicate and when. That is, indirect communication is established as a consequence of an action performed by an agent and the observations sensed by the other agents as a result. Independent of the policy, this type of communication is limited to transferring only information about the features of the state. In a more general context, the meaning of the communication can be embedded in the policy. That is, each time that it makes an observation, each agent can infer what was meant by the communication in the domain and in the policy. This type of communication is assuming that the observations of the agents are indeed dependent and this dependency is actually the means that enables each agent to transmit information.\n2. Direct Communication — Information can be shared by the agents if they can send messages directly to each other (e.g., robot 1 sends a message to robot 2: ”Bring tool T to location (x,y)”). In this case, the observations can be either dependent or independent. We analyze decentralized processes with direct communication further in Section 5.\n3. Common Uncontrollable Features — This is knowledge about environmental features that can be acquired by both agents but are not affected by any of these agents’ actions. This common knowledge exists when there are features in the system state that are affected by the environment independent of the agents’ actions. An example of such feature is the weather (assuming that neither of the agents can have any effect on whether it rains or it shines). Then, information about the weather can be made available to both agents if they share the same feature. Agents can then act upon the conditions of the weather and thus coordinate their actions without exchanging messages directly. They may have already decided that when the sun shines they meet at location MA, and otherwise at location MB.\nGiven that the global set of states S is factored, a common feature Sk is a feature of the global state that is included in the partial views of both agents.\nDefinition 6 (Common Uncontrollable Features) A common feature is uncontrollable if:\n∀a, b∈A1, a 6=b, Pr(S k|a, S)=P (Sk|b, S) ∧ ∀c, d∈A2, c 6=d, Pr(S k|c, S)=P (Sk|d, S).\nIt is important to note that the classes of problems that allow for uncontrollable features present an open problem that may be different from the categories studied in this paper due to the kind of dependencies that this knowledge may cause.\nIn this paper, we focus on either indirect communication or direct communication when we allow information sharing. We exclude from the discussion uncontrollable state features because this knowledge could provide a form of dependency between the agents that is beyond the scope of this paper.\nAssumption 1 We assume that every change in the system results necessarily from the agents’ actions.5\nFinally, the next section presents our last classification of decentralized problems that have goal-oriented behavior. This classification is practical in many areas where the agents’ actions may incur some cost while trying to achieve a goal and may attain a global reward only when the goal is reached. This is different from most of the studies done on single-agent MDPs where a reward is obtained for every action performed.\n5. Deterministic features that never change their values, or change their values in a deterministic way (such as time that increases in each step) are allowed."
    }, {
      "heading" : "2.3 Goal-oriented Behavior",
      "text" : "We characterize decentralized processes in which the agents aim to reach specific global goal states. The Meeting under Uncertainty problem satisfies this requirement since the agents’ goal is to meet at some location. Other practical scenarios may include assembling a machine, transferring objects from one location to a final destination, and answering to a query.\nDefinition 7 (Finite-horizon Goal-oriented Dec-MDPs (GO-Dec-MDP)) A finitehorizon Dec-MDP is goal-oriented if the following conditions hold:\n1. There exists a special subset G of S of global goal states. At least one of the global goal states g ∈ G is reachable by some joint policy.\n2. The process ends at time T (the finite horizon of the problem).\n3. All actions in A incur a cost, C(ai) < 0. For simplicity, we assume in this paper that the cost of an action depends only on the action. In general, this cost may also depend on the state.\n4. The global reward is R(s, a1, a2, s ′)=C(a1)+C(a2).\n5. If at time T , the system is in a state s ∈ G there is an additional reward JR(s) ∈ ℜ that is awarded to the system for reaching a global goal state.\nA goal-oriented Dec-MDP has uniform cost when the costs of all actions are the same. When a goal oriented Dec-MDP has independent transitions and observations, we assume that there is a distinct action NOP with cost zero that has no effect on the local state and can only be performed at a global goal state component gi. That is, NOP ∈ A such that C(NOP) = 0 and P1(s ′ 1|s1,NOP) is one when s ′ 1 = s1 = g i 1 for some global goal g\ni.6 When the GO-Dec-MDP has uniform cost and the set of actions include the NOP action, the uniform cost refers to all the actions different from NOP, i.e., ∀ai, aj ∈ A \\ NOP, C(ai) = C(aj).\nSolving a GO-Dec-MDP is the problem of finding a joint policy that maximizes the global value. The definition is concerned with global goal-oriented behavior; it does not necessarily imply that each agent separately must achieve certain goals. In the next section, we analyze the complexity of various classes of Dec-POMDPs based on the above characterization."
    }, {
      "heading" : "3. A Taxonomy of Decentralized POMDPs: Complexity Results",
      "text" : "We have distinguished between Dec-POMDPs and Dec-MDPs (where joint full observability is assumed). In neither case do the agents have full observability of the global state (at most they have joint full observability and local full observability, which are different from full observability). Therefore, each one of the agents has a belief about the global state of the system, represented as a probability distribution over global states. Table 1 presents the information that each agent needs in order to update its belief about the global state of the\n6. These NOP actions are necessary for agents that reach a component of a global goal state to “wait” for the other agent to complete its task.\nsystem. Since each agent can solve its belief-state MDP assuming a fixed and known policy for the other agent, the information required by an agent to update each belief-state reflects the complexity of solving each class of corresponding decentralized control problems. All the complexity results presented in this section apply to decentralized processes controlled by n agents.\nConjecture 1 An optimal policy of a Dec-POMDP with independent transitions and observations depends on the entire sequence of observations.\nConjecture 2 An optimal policy of a Dec-MDP with independent transitions (but no independent observations) depends on the entire sequence of observations.\nIt is an open question whether any belief-update scheme must memorize all the observations, for example, when there is partial observability because the process is not jointly fully observable or because the observations are dependent (see the first three cases in Table 1). It should be noted that only for the last case in the table have we shown that si is a sufficient statistic (see Lemma 2).\nThis section studies to what extent the classes characterized in the previous section differ in complexity. In all the results shown below we refer to the complexity of finding an optimal joint policy for the decentralized control problems handled in the lemmas. The lemmas are stated for the corresponding decision problems (i.e., given the decentralized process assumed in each one of the lemmas, the decision problem is to decide whether there is a joint policy whose value is equal or larger than a given constant K). Nevertheless, finding a solution cannot be easier than deciding the same problem.\nAll the results in this section correspond to problems given with a finite horizon T . It is already known that deciding a finite-horizon decentralized MDP is NEXP-complete (Bernstein et al., 2002). In Section 2.2, we described indirect communication, i.e., situations in which information can be shared when the observations are dependent. Therefore, the same complexity result applies to the decentralized control problem with indirect-communication, as stated in the next corollary.\nCorollary 2 Deciding a Dec-MDP or a Dec-POMDP with indirect communication (i.e., allowing the agents to communicate by acting and observing, when the observations are dependent) is NEXP-complete.\nWe show in the next lemma that adding only goal-oriented behavior to a general decentralized process does not change the complexity of the problem. In other words, a goal-oriented decentralized problem is not easier than the general problem.\nLemma 3 Deciding a goal-oriented Dec-MDP is NEXP-complete.\nProof. This case can be proved through the same reduction applied by Bernstein et al. (2002). We can reduce the general goal-oriented Dec-MDP problem to the tiling problem by adding a goal state to the last state of the Dec-MDP defined in the reduction. The agents reach this new goal state and receive a reward of zero if the tiling is consistent. Otherwise the agents obtain a reward of -1 and do not reach the goal state (but they do reach a terminal state and the process ends).\nThe main reason for this complexity result relies on the fact that each agent needs to remember a sequence of observations that it has sensed (see Table 1). Adding only goal states to the decentralized process (without assuming any further assumptions) does not make the control problem any easier. ✷\nSince a Dec-POMDP is more general than a Dec-MDP, the same lower bound for the Dec-MDP is valid.\nCorollary 3 Deciding a goal-oriented Dec-POMDP is NEXP-complete.\nThe next lemma shows that by assuming that the transitions and observations are independent and that the agents have joint full observability, the problem of solving a decentralized cooperative system becomes easier (the lemma does not assume goal-oriented behavior).\nLemma 4 Deciding a Dec-MDP with independent transitions and observations is NPcomplete.\nProof. The Dec-MDP is locally fully observable because it has independent transitions and observations (see Lemma 1). We have shown in Lemma 2 that for such Dec-MDPs, the current partial view of an agent is a sufficient statistic. Therefore, a local policy of an agent i is of size polynomial in |Si|T . 7 There are |Ai| |Si|T policies (mappings from Si and time to Ai). Each agent i needs to build a belief-state MDP with a number of states that is polynomial in |Si| (for a fixed and known policy for the other agent). Evaluating one such local policy can be done in polynomial time (by running dynamic programming on the belief-state MDP), but there is an exponential number of such policies for which this should be done. Therefore, the upper bound for the decision problem stated in this lemma is NP.\nFigure 2 shows schematically the differences in the policies, which lead to the difference in the complexity classes of the control problems when independent transitions and observations are assumed. When no assumptions are made (as in the leftmost figure), a local policy is represented by a tree, where each node corresponds to a possible action and each\n7. We proved that si is a sufficient statistic, i.e., the current local state summarizes all the observations seen so far. However, since we are studying finite-horizon problems, a local policy of action is not stationary. Therefore, the time is indeed needed to decide upon an action.\nedge corresponds to a possible observation (i.e., a possible transition). In each local policy, the agent needs to remember a sequence of observations as opposed to just the last observation as in the rightmost figure. In the belief-state MDP that each agent builds, there is an exponential number of states that correspond to all the possible sequences of observations (this number is |Ωi| T , T is the finite horizon). Each such policy (of exponential size) can be evaluated with dynamic programming. There are a total of |Ai| |Ωi| T\nlocal policies for which such a belief-state MDP need to be built by a brute-force search algorithm.8\nIt is already known that a simple decentralized decision-making problem for two agents is NP-hard (where |Ai| ≥ 2 and |Aj | ≥ 3) (Papadimitriou & Tsitsiklis, 1982, 1986). Therefore, the lower bound for the problem class stated in the lemma is also NP. ✷\nIt is an open question whether a Dec-POMDP with independent transitions and observations (without joint full observability) results in a complexity class lower than NEXP.\nEasier problems are obtained when the class of decentralized problems is restricted to goal-oriented behavior and does not include any type of information sharing, while maintaining the independence assumptions.\nLemma 5 Deciding a goal-oriented Dec-MDP with independent transitions and observations, with a single global goal state and with uniform cost is P-complete.\nProof. We argue that each agent should follow locally the policy that minimizes the cost to gi by solving a single-agent MDP. Under the uniform cost assumption, this is equivalent to minimizing the number of steps. Because computing these policies can be done with dynamic programming, the problem is P-complete.\nIn a given local state, in general, agents could follow the shortest path to gi or abandon it and do something more beneficial. Abandoning the goal is never beneficial because every course of action is equally valuable (there are no intermediate rewards and all actions’ costs are the same). ✷\n8. Assuming that T is similar in size to |S|, we obtain that the complexity of the brute-force search algorithm is double exponential in |S|. If T << |S| the complexity can be NP.\nWe extend this result to the case involving multiple global goal states. Unfortunately, it is not possible to avoid the need to change local goal states even when no information exchange is possible in GO-Dec-MDPs with independent transitions and observations. However, we will provide a necessary and sufficient condition for agents so that the need to change a goal never arises. Under this condition, the best strategy is to minimize the cost of reaching the local components of the single most beneficial goal. The analysis that we perform is only for the case of uniform cost of actions (i.e., all actions different from NOP incur the same cost). Without this assumption, it is sometimes beneficial to “waste time” and move away from goals because of the high cost/low likelihood to reach a goal.\nLet δi1 be the best local policy for agent 1 to reach g i 1 (computed as if g i is the only goal). Similarly, we define δi2 for agent 2 to reach its corresponding component of global goal gi.\nLet αs1i/j be the probability of reaching g j 1 from some state s1, when executing the\npolicy δi1. s1 is some state reachable by policy δ i 1. Similarly, let β s2 i/j be the corresponding probability for agent 2. Let C(s1, δ i 1) be the expected cost incurred by agent 1 when it executes policy δ i 1 starting from state s1. Similarly, C(s2, δ i 2) is defined for agent 2.\nProperty 1 (No Benefit to Change Local Goals) Let gi be a global goal state such that the joint policy (δi1, δ i 2) has the highest value over all global goal states.\nA GO-Dec-MDP satisfies the NBCLG property if and only if the following two conditions hold:\n1. ∀j 6= i, s1 reachable from s 0 1 by δ i 1,\nΣkα s1 i/kβ\ns0 2\ni/kJR(g k) +C(s1, δ i 1) +C(s 0 2, δ i 2) ≥ Σkα s1 j/kβ\ns0 2\ni/kJR(g k) +C(s1, δ j 1) +C(s 0 2, δ i 2).\n2. ∀j 6= i, s2 reachable from s 0 2 by δ i 2,\nΣkα s0 1 i/kβ s2 i/kJR(g k) +C(s01, δ i 1) +C(s2, δ i 2) ≥ Σkα s0 1 i/kβ s2 j/kJR(g k) +C(s01, δ i 1) +C(s2, δ j 2).\nNote that the property guarantees that whenever an agent is at an intermediate local state, if the agent reevaluates the value of continuing to optimize its path to its goal i versus switching to another goal j, the value of continuing the policy to the original goal always remains the highest. Hence, it is never beneficial to change local goals. When the condition is not met, however, it is beneficial to change a local goal despite the fact that there is no information exchange between the agents.\nLemma 6 Deciding a goal-oriented Dec-MDP with independent transitions and observations with at least one global goal state and with uniform cost is P-complete when the NBCLG property is satisfied.\nSketch of Proof. For each global goal state gk ∈ G, agent 1 can compute its optimal local policy δk1 to reach the local component g k 1 . Similarly, agent 2 can compute its optimal local policy δk2 for every goal g k. This is achieved by solving single agent MDPs, each aimed\nat reaching a local component of a global goal state: MDP k1 =< S1, A1, P1, R k 1 > and MDP k2 =< S2, A2, P2, R k 2 >. S1 and S2 are given from the factored representation of the global states of the system. P1 and P2 result from the independent transitions assumption. The local reward Rk1(s1, a1, s ′ 1) is the sum of the cost of an action, C(a1) and an additional arbitrary reward attained at time T if the state s′1 reached at T is g k 1 . R2 is defined similarly for agent 2. We denote by gi the global goal state that attains the highest value when the agents follow the joint policy (δi1, δ i 2).\nThe NBCLG property implies that when agent 1 executes its optimal local policy δi1, it cannot reach a state in which it is beneficial to abandon gi1 and pursue a different local component gj1. (Without the property, this situation may arise despite the fact that agent 2 may continue to pursue gi2.) Note that this remains true even though the local policy δ i 1 may bring agent 1 eventually to a component of a goal that is different from the goal i. Since this property includes the same condition for both agents, it is also true that agent 2 will have no incentive to switch from an optimal local policy to goal gi, δi2, once it starts executing it at the initial state. Therefore, the joint policy (δi1, δ i 2) is the optimal solution to the given GO-Dec-MDP. Since computing δi1 and δ i 2 respectively can be done with dynamic programming, a GO-Dec-MDP with independent transitions and observations and with uniform cost that satisfies the NBCLG is P-complete. ✷\nAssume that the Meeting scenario is given with a single meeting location (e.g., the lander in the rovers’ case). Then, given the other independence assumptions, we can solve this problem optimally by building single-agent MDPs, each designed to achieve its component of the goal state (in the example, each robot needs to reach the lander). If there is a larger set of global goal states (e.g., when there is a finite number of possible meeting sites such as the lander, the space station on the planet and some other particular site) then following the lemma, we can let each agent find its local optimal policy to its corresponding component in these goal states. The optimal joint policy is the pair of local policies with the highest value.\nA summary of the complexity results presented in this section appears in Figure 3."
    }, {
      "heading" : "4. Algorithms for Decentralized Control with No Information Sharing",
      "text" : "So far, the only known algorithms for solving optimally decentralized control problems are the generalized version of dynamic programming for Dec-POMDPs (Hansen et al., 2004) and the Coverage-set algorithm (Becker et al., 2003) for Dec-MDPs with independent transitions and observations. The first algorithm solves optimally a general Dec-POMDP. Its practicality is restricted by the complexity of these problems (NEXP-complete). The Coverage-set algorithm assumes that the agents’ actions could result in super-additive or sub-additive joint rewards as follows. In the first case, the reward obtained by the system from agents doing certain actions is larger than the sum of each agent’s local reward for those actions. In the second case, sub-additive joint rewards will be attained when the agents are penalized for doing redundant actions. As an example, we can look at a modified version of the Meeting scenario, where robots can move and also run experiments at different sites. Then, a process may lead to sub-additive rewards if both agents run the same experiment, wasting their resources instead of doing non-overlapping tasks. In other cases, the system may benefit when both robots perform the same tasks. For example, both agents run the same\nexperiment at different times in the day, collecting eventually results with better quality. The class of problems handled by the Coverage-set algorithm does not include necessarily goal-oriented decentralized processes. In this section, we present two tractable algorithms for controlling optimally Dec-MDPs with independent transitions and observations, which are also goal-oriented. A summary of the algorithms that are known to solve decentralized control problems optimally is presented in Table 2."
    }, {
      "heading" : "4.1 Single-goal, Goal-oriented Dec-MDPs",
      "text" : "Following Lemma 5, the optimal solution for a GO-Dec-MDP with a single global goal state is computed by solving single agent MDPs aimed at the corresponding components of the given global goal state. Algorithm Opt1Goal is shown in Figure 5. Each agent i’s MDP finds the least cost path to gi. Because the cost of actions (different from NOP) is uniform any value set to GR(gi) is suitable to solve the problems."
    }, {
      "heading" : "4.2 Many-goals, Goal-oriented Dec-MDPs",
      "text" : "Due to the uncertainty about the outcomes of actions, an agent may decide to change its intention with respect to the global goal state it is planning to reach. The algorithm that optimally and decentrally solves a goal-oriented Dec-MDP problem with many global goal states is OptNGoals, presented in Figure 5. Assuming the conditions of Lemma 6, this algorithm is optimal because the lemma guarantees that changing local goals is not beneficial.\n9. No algorithm was proposed short of full search with complexity NP as shown in Lemma 9.\nFollowing the OptNGoals algorithm, each agent solves iteratively its induced MDP towards each one of the possible components of each one of the global goal states. Finally, the optimal joint policy is the one with the highest value. This algorithm is described for a situation where the global goal states are distinctive, that is\n∀s11, s 2 1 ∈ S1, s 1 2, s 2 2 ∈ S2 : (s 1 1, s 1 2), (s 2 1, s 2 2) ∈ G ⇒ (s 1 1 = s 2 1 ⇔ s 1 2 = s 2 2).\nIt is possible to extend the algorithm to non-distinctive global goal states, by running the algorithm over all possible subsets of goals G1, G2 such that ∀s1 ∈ G1, s2 ∈ G2 : (s1, s2) ∈ G."
    }, {
      "heading" : "5. Decentralized Control with Communication",
      "text" : "Direct communication can be beneficial in decentralized control because the agents lack full observability of the global state. That is, the value of the optimal joint policy that allows\ncommunication may be larger than the value of the optimal joint policy without communication. We are interested in solving a decentralized control problem off-line taking into account direct communication. Agents will consider this expected information while computing their optimal joint policy, thus deriving a policy for when and what to communicate.\nIf we assume that direct communication leads to full observability of the system state that direct communication is free and that the observations are independent then obviously the agents will benefit most by communicating constantly. This results in a fully observable decentralized process, which is equivalent to an MMDP (Boutilier, 1999). This problem is known to be P-complete (Papadimitriou & Tsitsiklis, 1987).\nIn real-world scenarios, it is reasonable to assume that direct communication has indeed an additional cost associated with it; the cost may reflect the risk of revealing information to competitive agents, the bandwidth necessary for the transmission or even the complexity of computing the information to be transferred. Therefore, communication may not be possible or even desirable at all times.\nWe extend the model of decentralized partially-observable Markov decision process to include an explicit language of communication with an associated cost.10 We call this model Dec-POMDP-Com. It is given by the following tuple: < S,A1, A2,Σ, CΣ, P,R,Ω1,Ω2, O, T >.\nΣ denotes the alphabet of messages and σi ∈ Σ represents an atomic message sent by agent i (i.e., σi is a letter in the language). σi denotes a sequence of atomic messages. A special message that belongs to Σ is the null message, which is denoted by ǫσ. This message is sent by an agent that does not want to transmit anything to the other agents.11 CΣ is the cost of transmitting an atomic message: CΣ : Σ → ℜ. The cost of transmitting a null message is zero. Communication cost models determine the flow of the information exchange and the cost of this communication. These models may include, for example, one-way communication models, in which the cost CΣ is incurred by each agent that sends information to another agent and two-way communication models, where agents exchange messages when at least one of them initiates communication, and the cost is incurred only once each time (we refer to these agents as jointly exchanging messages). Other models may require additional messages like acknowledgments that may incur additional costs.\nWe restrict ourselves in this paper to communication cost models based on joint exchange of messages and to communication that leads to full observability of the global state. The agents send messages by broadcasting, and only one message is sent at each time. The agents in the system share the same language of communication. In a separate line of research, we are addressing the question of agents controlling a decentralized process where the agents develop a mutual understanding of the messages exchanged along the process (Goldman, Allen, & Zilberstein, 2004). Direct communication is the only means of achieving full observability when the observations are independent and when there is no common uncontrollable features (Assumption 1).\nWe define a Dec-MDP-Com as a Dec-POMDP-Com with joint full observability, as we did with Dec-POMDPs and Dec-MDPs in Section 2.1. The Dec-POMDP-Com model can have independent transitions, independent observations, be locally fully observable, and goal-oriented as the basic model presented in Section 2.\n10. The model was presented by Goldman and Zilberstein (2003). 11. We omit in this paper the details of the communication network that may be necessary to implement\nthe transmission of the messages.\nWe describe the interaction among the agents as a process in which agents perform an action, then observe their environment, and then send a message that is instantaneously received by the other agent.12 Then, we can define the local policies of the controlling agents as well as the resulting joint policy whose value we are interested in optimizing. A local policy δi is composed of two policies: δ A i that determines the actions of the agents and δΣi that states the communication policy. Notice that δ A i allows indirect communication if the observations of the agents are dependent and that δΣi allows direct communication even when the observations are dependent.\nDefinition 8 (Local Policy for Action) A local policy for action for agent i, δAi , is a mapping from local histories of observations oi = oi1 , . . . , oit over Ωi and histories of messages σj = σj1, . . . , σjt,\n13 received (j 6= i) since the last time the agents exchanged information to actions in Ai.\nδAi : S × Ω ∗ × Σ∗ → Ai.\nDefinition 9 (Local Policy for Communication) A local policy for communication for agent i, δΣi , is a mapping from local histories of observations oi = oi1 , . . . , oit and o, the last observation perceived after performing the last local action, over Ωi and histories of messages σj = σj1, . . . , σjt, received (j 6= i) since the last time the agents exchanged information to messages in Σ.\nδΣi : S × Ω ∗o× Σ∗ → Σ.\nMore complex cases result if the agents could communicate partial information about their partial views. This is left for future work.\nDefinition 10 (Joint Policy) A joint policy δ = (δ1, δ2) is defined as a pair of local policies, one for each agent, where each δi is composed of the communication and the action policies for agent i.\nThe optimal joint policy that stipulates for each decision-maker how it should behave and when it should communicate with other agents is the policy that maximizes the value of the initial state of the Dec-POMDP-Com. We first study the general problem, when no particular assumptions are made on the class of the Dec-POMDP-Com. We will then study certain classes of this problem as we did with the case without communication.\nDefinition 11 (Transition Probability Over a Sequence of States) The probability of transitioning from a state s to a state s’ following the joint policy δ=(δ1, δ2) while agent 1 sees observation sequence o1o1 and receives sequences of messages σ2, and agent 2 sees o2o2 and receives σ1 of the same length, written Pδ(s ′|s, o1o1, σ2, o2o2, σ1) can be defined recursively:\n1. Pδ(s|s, ǫ, ǫ, ǫ, ǫ) = 1.\n12. When agents exchange information there is a question whether information is obtained instantaneously or there are delays. For simplicity of exposition we assume no delays in the system. 13. The notation o = o1, . . . , ot and oo represents the sequence o1, . . . , oto. Similarly, the notation for sequences of messages: σiσ represents the sequence σi1 , . . . , σitσ.\n2. Pδ(s ′|s, o1o1, σ2σ2, o2o2, σ1σ1) =\n∑\nq∈S\nPδ(q|s, o1, σ2, o2, σ1) ∗ P (s ′|q, δA1 (s, o1, σ2), δ A 2 (s, o2, σ1))∗\nO(o1, o2|q, δ A 1 (s, o1, σ2), δ A 2 (s, o2, σ1), s ′)\nsuch that δΣ1 (s, o1o1, σ2) = σ1 and δ Σ 2 (s, o2o2, σ1) = σ2.\nThen, the value of the initial state s0 of the Dec-POMDP-Com after following a joint policy δ for T steps can be defined as follows:\nDefinition 12 (Value of an Initial State Given a Policy) The value V Tδ (s 0) after following policy δ=(δ1, δ2) from state s 0 for T steps is given by:\nV Tδ (s 0) =\n∑\n(o1o1,o2o2)\n∑\nq∈S\n∑\ns′∈S\nPδ(q|s 0, o1, σ2, o2, σ1) ∗ P (s ′|q, δA1 (s 0, o1, σ2), δ A 2 (s 0, o2, σ1))∗\nR(q, δA1 (s 0, o1, σ2), δ Σ 1 (s 0, o1o1, σ2), δ A 2 (s 0, o2, σ1), δ Σ 2 (s 0, o2o2, σ1), s ′)\nwhere the observation and the message sequences are of length at most T −1, and both sequences of observations are of the same length l. The sequences of messages are of length l + 1 because they considered the last observation resulting from the control action prior to communicating.\nThe problem of decentralized control with direct communication is to find an optimal joint policy δ∗ for action and for communication such that δ∗ = argmaxδV T δ (s 0)."
    }, {
      "heading" : "5.1 Languages of Communication",
      "text" : "We start showing that under some circumstances the language of observations is as good as any other communication language. In the Meeting scenario, no matter what are the tasks assigned to the system, agents that exchange their current coordinates are guaranteed to find the optimal solution to the decentralized problem.\nTheorem 1 Given a Dec-MDP-Com with constant message cost, the value of the optimal joint policy δ∗ with respect to any Σ, V Tδ∗,Σ(s\n0) is not greater than the value of the optimal joint policy with respect to the language of observations (Σ = Ω). That is:\n∀Σ V Tδ∗,Σ(s 0) ≤ V T δ′∗,Σ=Ω (s0).\nProof. The decentralized process is jointly fully observable. Therefore, it is not beneficial for the agents to send any information in addition to their observations (we assume joint exchange of messages). Thus, combining both agents’ observations results in the complete global state. Moreover, the theorem assumes a constant cost for every message, i.e., all non-null messages incur the same cost: there are not any messages that are either more expensive or cheaper to transmit than others. Therefore, the agents cannot benefit from exchanging information that is a strict subset of their partial views because the cost of sending any message is equal. ✷\nWe note that the theorem does not hold when different messages may incur different costs. In this case, sending less information might be cheaper, but equally valuable. For example, when agents observe their respective x and y coordinates, they may benefit from sending only one coordinate if it costs less than sending the complete location. Agents may also benefit from sending functions of their observations if this incurs a smaller cost. For example, agents may benefit from exchanging information about the Manhattan distance between their current location and some mutually-known location.\nIn general, it seems reasonable to introduce a language of communication to reduce complexity, but as the theorem shows, this cannot guarantee optimality when the language is comprised of messages different from the agents’ observations. Examples of such messages include: 1) commitments, which are constraints on the future behavior of the message sender, 2) instructions, which are constraints on the future behavior of the message receiver, and 3) feedback that is an encouraging or punishing signal that is sent to another agent. The study of Dec-POMDP-Com problems with languages of communication different from observations is left for future work. Similarly, certain protocols of communication can restrict the optimal value of the policy of communication but may be easier to implement."
    }, {
      "heading" : "5.2 The Effect of Communicating on the Complexity Analysis",
      "text" : "The complexity results we obtained in Section 3 apply also for the same classes of problems when direct communication is possible. Although agents achieve full observability each time they exchange information, the problem of finding the policy of communication offline (when there is a cost associated with each communication act) remains as hard as the general problem with no communication. In the worst case, transmitting the messages can be prohibitively expensive. Therefore, adding direct communication does not simplify the problem. For all the cases shown to be in NEXP, adding direct communication cannot make them more difficult. The complexity of deciding a Dec-MDP when observations are independent and direct communication is allowed remains the same as when direct communication is not assumed, as shown in Lemma 9. The impact of direct communication on the classes of Dec-POMDPs with independent transitions and observations and with possible goal-oriented behavior remains an open question.\nIt is interesting to note that the decentralized control problem with direct communication can be reduced to the same problem with indirect communication when the observations are dependent. We assume that transmitting messages incur the same cost and that the language of messages is the language of observations. If the language of communication is different then the reduction does not apply.\nLemma 7 A Dec-MDP with direct communication is polynomially-reducible to a Dec-MDP with indirect communication.\nProof. We denote the Dec-MDP with direct communication as Dec-D, and the Dec-MDP with indirect communication as Dec-I. The reduction from Dec-D to Dec-I requires the addition of a single bit b to the global states of Dec-I. When b takes the value 1, the agents are in the communication mode. When b takes the value 0, the agents are performing control actions. A communication action ac performed by agent i is agent i’s local observation oi. The transition probability of Dec-I, PI is given as follows: PI([s, 1], o1, o2, [s, 0]) = 1, no\nchange is caused to the global state of the system besides flipping the value of b back to 0 each time the agents exchange information. The probability of observing o1 and o2 (respectively by the two agents) after performing communication acts when b equals 1 is one as long as o1 is agent 2’s last observation, and o2 is agent 1’s last observation. This probability is zero for any other action taken at [s, 1]. O(o2, o1|[s, 1], o1, o2, [s, 0]) = 1. ✷\nTheorem 1 showed that exchanging observations is sufficient to guarantee that the joint policy computed will be optimal. The next lemma shows that the optimal policy of communication will instruct the agent to transmit only its current observation or the null message.\nLemma 8 Given a Dec-MDP-Com with constant message cost, there is an optimal policy of communication such that whenever a non-null message is sent, it must be the agent’s last observation.\nProof. This lemma results from Theorem 1. In a jointly-fully observable process, sending a non-null message that is an observation different from the last one cannot provide more information about the current state of the process than the last observation does. ✷\nSince the current global state becomes fully observable each time that the agents communicate, all the necessary information is stored in the synchronized state s; the agents do not need to remember all the messages received so far when the decentralized process is jointly fully observable. When the problem is framed as a Dec-MDP-Com with independent transitions and observations, the current local state is fully observable. Thus, the local policies of action and communication for such a Dec-MDP-Com can be formalized as follows:\nCorollary 4 An optimal local policy of action for this problem, δAi , can be represented as a mapping from synchronized states, current partial views, and time to actions.\nδAi : S × Si × T → Ai.\nSimilarly, an optimal local policy of communication δΣi can be represented as a mapping from synchronized states, current partial views, and time to two possible messages: either the current partial view or the null message.\nδΣi : S × Si × T → Si ∪ {ǫσ}\nsuch that if δΣi (s, si) 6= ǫσ then δ Σ i (s, si) = si.\nAgents need to remember only their current partial view and the last synchronized information to decide on their next action. This is a primary observation that affects the complexity of deciding Dec-MDP-Com with independent transitions and observations as shown in the next lemma.\nLemma 9 Deciding a Dec-MDP-Com with independent transitions and observations is NPcomplete.\nProof. Following Corollary 4, each agent’s policy is of size polynomial in |S|, and the number of possible policies is 2|S| 2T × |A||S| 2T . In the worst case, a brute force algorithm can go through all the possible policies for agent 1 and for each one of them compute the\noptimal policy for agent 2. Agent 2 builds its belief-state MDP, where each node is the agent’s belief that the global state is a state s. There is an edge for any possible action and message that the agents can choose. Agent 2 can choose any action a2 ∈ A2 and it can either send a null message, or a message with its last observation (s2). For any possible policy of action and communication of agent 1, agent 2 can build such a belief-state MDP and solve it. This can also be done in time that is polynomial in the number of the belief-states. Whenever an agent sends a non-null message, then the belief-state MDP has a transition to a state that is fully observable with probability one. In any case, each agent needs only to remember its last current partial view, so the complexity of solving a Dec-MDP-Com with independent observations and transitions is in the NP class. In the worst case, the cost of sending a message can be prohibitively large, therefore policies that do not send a message need also to be evaluated. It is already known (Papadimitriou & Tsitsiklis, 1982, 1986) that a simple decentralized decision-making problem for two agents is NP-hard (where |Ai| ≥ 2 and |Aj | ≥ 3). Therefore, the lower bound for the problem class stated in the lemma is also NP. ✷\nThe proof of this lemma is based on the number of policies that need to be evaluated by a naive algorithm. Limiting ourselves to GO-Dec-MDP with direct communication does not change the number of policies. Therefore, we obtain the same complexity for the goaloriented case with direct communication and independent transitions and observations:\nCorollary 5 Deciding a GO-Dec-MDP-Com with independent transitions and observations is NP-complete.\nTo address the complexity of decentralized control with communication, we propose a practical approximation technique (Goldman & Zilberstein, 2004, 2003). This approach is based on meta-level control of communication, motivated by a similar decision-theoretic approach to meta-level reasoning that was developed by Russell and Wefald (1991). We assume that the designer of the system also designs a mechanism for communication. This mechanism stipulates how to decompose the global problem into local (single-agent) and temporary problems that depend on the information held by the agents whenever they exchange messages."
    }, {
      "heading" : "6. Discussion",
      "text" : "Decentralized control problems are very intriguing from a theoretical point of view as well as from a practical point of view. From a theoretical perspective, decentralized partiallyobservable Markov decision processes serve as a formal framework to study the foundations of multi-agent systems (e.g., Becker et al., 2003; Hansen et al., 2004; Guestrin & Gordon, 2002; Peshkin et al., 2000; Pynadath & Tambe, 2002; Claus & Boutilier, 1998). Our study focuses on computing off-line decentralized policies of control for cooperative systems. This paper analyzes the complexity of solving these problems optimally for certain classes of decentralized control. We found critical transitions in complexity between classes of problems that range from NEXP to P. The critical transition occurs when we assume that the decentralized problems have independent transitions and observations. Adding only goal-oriented behavior to a decentralized problem does not simplify it, unless the transitions and observations are independent. We extended the decentralized process model to enable\ndirect communication among the agents, taking into account that this communication incurs a certain cost. Communication allows the agents to synchronize their knowledge and thus eliminate the uncertainty about the global state of the world (at least at certain times). We also analyzed the complexity of the decentralized problems with indirect and direct communication.\nFrom a practical perspective, decentralized control problems appear frequently in realworld applications where the decision-makers may be robots placed at separate geographical locations or computational processes distributed in information space. The classes of Dec-POMDPs that we identify seem to match many practical applications. Independent transitions and observations arise in examples such as multi-agent mapping, flexible manufacturing, and multiple-rovers working on data-collection in uncertain terrains, when the agents’ actions are not strongly coupled. Goal-oriented behavior is relevant in these examples when the agents’ behavior is aimed at reaching specific states, for example the assembly of a particular machine in a manufacturing process, or the retrieval of information.\nWe analyzed the notion of information sharing in decentralized systems by distinguishing among three possible sources for information: indirect communication attained by agents observing dependent observations, direct communication achieved by adding an external language of communication, and common uncontrollable features. The typical distinction previously made in the literature is between systems with no communication and systems with a predefined language of communication, which typically does not incur any costs, overlooking the fact that dependent observations offer yet another form of communication (Pynadath & Tambe, 2002; Decker & Lesser, 1992; Grosz & Kraus, 1996; Durfee, 1988; Roth, Vail, & Veloso, 2003). The problem of combining communication acts into the decision problem of a group of cooperative agents was addressed by Xuan et al. (2001). Their framework is similar to ours but their approach is heuristic. We proved that the language of the observations is sufficient in order to reach an optimal decentralized solution (assuming all the messages incur the same cost). This leads to the understanding that any other type of communication can serve as an approximation to the optimal solution, which may be easier to obtain.\nIn addition to presenting a formal framework of decentralized control, we introduced tractable algorithms for solving optimally certain classes of Dec-MDPs. The Coverageset algorithm that solves optimally decentralized MDPs with a certain reward structure appeared in (Becker et al., 2003). Here, we add two optimal algorithms aimed at goaloriented decentralized control.\nThe contribution of this paper is in framing and categorizing fundamental issues in decentralized control of cooperative systems. In particular, we characterized and studied the complexity of goal-oriented behavior, jointly fully-observable processes and independent transitions and observations, which result in important and practical classes of control problems. We also studied three sources for information sharing in such decentralized systems and provided algorithms that compute optimal solutions. Future research will focus on algorithms for decentralized control with direct communication of messages that are different from the observations. In particular, we will examine more general models of communication that allow exchange of partial information and involve unreliable communication."
    }, {
      "heading" : "Acknowledgments",
      "text" : "The authors wish to thank Dan Bernstein for interesting discussions on the complexity of Dec-MDPs. This work was supported in part by the National Science Foundation under grant IIS-0219606, by the Air Force Office of Scientific Research under grant F49620-03-10090 and by NASA under cooperative agreement NCC 2-1311. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the authors and do not reflect the views of the NSF, AFOSR or NASA."
    } ],
    "references" : [ {
      "title" : "Communication in reactive multiagent robotic systems",
      "author" : [ "T. Balch", "R.C. Arkin" ],
      "venue" : "Autonomous Robots,",
      "citeRegEx" : "Balch and Arkin,? \\Q1994\\E",
      "shortCiteRegEx" : "Balch and Arkin",
      "year" : 1994
    }, {
      "title" : "Transition-independent decentralized Markov decision processes",
      "author" : [ "R. Becker", "S. Zilberstein", "V. Lesser", "C.V. Goldman" ],
      "venue" : "In Proceedings of the Second International Joint Conference on Autonomous Agents and Multi-Agent Systems,",
      "citeRegEx" : "Becker et al\\.,? \\Q2003\\E",
      "shortCiteRegEx" : "Becker et al\\.",
      "year" : 2003
    }, {
      "title" : "The complexity of decentralized control of Markov decision processes",
      "author" : [ "D. Bernstein", "R. Givan", "N. Immerman", "S. Zilberstein" ],
      "venue" : "Mathematics of Operations Research,",
      "citeRegEx" : "Bernstein et al\\.,? \\Q2002\\E",
      "shortCiteRegEx" : "Bernstein et al\\.",
      "year" : 2002
    }, {
      "title" : "Communication-proof equilibria in cheap-talk games",
      "author" : [ "A. Blume", "J. Sobel" ],
      "venue" : "Journal of Economic Theory,",
      "citeRegEx" : "Blume and Sobel,? \\Q1995\\E",
      "shortCiteRegEx" : "Blume and Sobel",
      "year" : 1995
    }, {
      "title" : "Sequential optimality and coordination in multiagent systems",
      "author" : [ "C. Boutilier" ],
      "venue" : "In Proceedings of the Sixteenth International Joint Conference on Artificial Intelligence,",
      "citeRegEx" : "Boutilier,? \\Q1999\\E",
      "shortCiteRegEx" : "Boutilier",
      "year" : 1999
    }, {
      "title" : "Exploiting structure in policy construction",
      "author" : [ "C. Boutilier", "R. Dearden", "M. Goldszmidt" ],
      "venue" : "In Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence,",
      "citeRegEx" : "Boutilier et al\\.,? \\Q1995\\E",
      "shortCiteRegEx" : "Boutilier et al\\.",
      "year" : 1995
    }, {
      "title" : "The dynamics of reinforcement learning in cooperative multiagent systems",
      "author" : [ "C. Claus", "C. Boutilier" ],
      "venue" : "In Proceedings of the Fifteenth National Conference on Artificial Intelligence,",
      "citeRegEx" : "Claus and Boutilier,? \\Q1998\\E",
      "shortCiteRegEx" : "Claus and Boutilier",
      "year" : 1998
    }, {
      "title" : "Planning under time constraints in stochastic domains",
      "author" : [ "T. Dean", "L.P. Kaelbling", "J. Kirman", "A. Nicholson" ],
      "venue" : "Artificial Intelligence,",
      "citeRegEx" : "Dean et al\\.,? \\Q1995\\E",
      "shortCiteRegEx" : "Dean et al\\.",
      "year" : 1995
    }, {
      "title" : "Generalizing the partial global planning algorithm",
      "author" : [ "K.S. Decker", "V.R. Lesser" ],
      "venue" : "International Journal of Intelligent Cooperative Information Systems,",
      "citeRegEx" : "Decker and Lesser,? \\Q1992\\E",
      "shortCiteRegEx" : "Decker and Lesser",
      "year" : 1992
    }, {
      "title" : "Coordination of Distributed Problem Solvers",
      "author" : [ "E.H. Durfee" ],
      "venue" : null,
      "citeRegEx" : "Durfee,? \\Q1988\\E",
      "shortCiteRegEx" : "Durfee",
      "year" : 1988
    }, {
      "title" : "Symbolic heuristic search for factored Markov decision processes",
      "author" : [ "Z. Feng", "E.A. Hansen" ],
      "venue" : "In Proceedings of the Eighteenth National Conference on Artificial Intelligence,",
      "citeRegEx" : "Feng and Hansen,? \\Q2002\\E",
      "shortCiteRegEx" : "Feng and Hansen",
      "year" : 2002
    }, {
      "title" : "KQML as an agent communication language",
      "author" : [ "T. Finin", "Y. Labrou", "J. Mayfield" ],
      "venue" : null,
      "citeRegEx" : "Finin et al\\.,? \\Q1997\\E",
      "shortCiteRegEx" : "Finin et al\\.",
      "year" : 1997
    }, {
      "title" : "Decentralized language learning through acting",
      "author" : [ "C.V. Goldman", "M. Allen", "S. Zilberstein" ],
      "venue" : "In Proceedings of the Third International Joint Conference on Autonomous Agents and Multiagent Systems,",
      "citeRegEx" : "Goldman et al\\.,? \\Q2004\\E",
      "shortCiteRegEx" : "Goldman et al\\.",
      "year" : 2004
    }, {
      "title" : "Optimizing information exchange in cooperative multi-agent systems",
      "author" : [ "C.V. Goldman", "S. Zilberstein" ],
      "venue" : "In Proceedings of the Second International Joint Conference on Autonomous Agents and Multi-Agent Systems,",
      "citeRegEx" : "Goldman and Zilberstein,? \\Q2003\\E",
      "shortCiteRegEx" : "Goldman and Zilberstein",
      "year" : 2003
    }, {
      "title" : "Goal-oriented Dec-MDPs with direct communication",
      "author" : [ "C.V. Goldman", "S. Zilberstein" ],
      "venue" : "Technical report 04–44,",
      "citeRegEx" : "Goldman and Zilberstein,? \\Q2004\\E",
      "shortCiteRegEx" : "Goldman and Zilberstein",
      "year" : 2004
    }, {
      "title" : "Collaborative plans for complex group action",
      "author" : [ "B.J. Grosz", "S. Kraus" ],
      "venue" : "Artificial Intelligence,",
      "citeRegEx" : "Grosz and Kraus,? \\Q1996\\E",
      "shortCiteRegEx" : "Grosz and Kraus",
      "year" : 1996
    }, {
      "title" : "Distributed planning in hierarchical factored MDPs",
      "author" : [ "C. Guestrin", "G. Gordon" ],
      "venue" : "In Proceedings of the Eighteenth Conference on Uncertainty in Artificial Intelligence,",
      "citeRegEx" : "Guestrin and Gordon,? \\Q2002\\E",
      "shortCiteRegEx" : "Guestrin and Gordon",
      "year" : 2002
    }, {
      "title" : "Multiagent planning with factored MDPs",
      "author" : [ "C. Guestrin", "D. Koller", "R. Parr" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "Guestrin et al\\.,? \\Q2001\\E",
      "shortCiteRegEx" : "Guestrin et al\\.",
      "year" : 2001
    }, {
      "title" : "Efficient solution algorithms for factored MDPs",
      "author" : [ "C. Guestrin", "D. Koller", "R. Parr", "S. Venkataraman" ],
      "venue" : "Journal of Artificial Intelligence Research,",
      "citeRegEx" : "Guestrin et al\\.,? \\Q2003\\E",
      "shortCiteRegEx" : "Guestrin et al\\.",
      "year" : 2003
    }, {
      "title" : "Dynamic programming for partially observable stochastic games",
      "author" : [ "E. Hansen", "D. Bernstein", "S. Zilberstein" ],
      "venue" : "In Proceedings of the Nineteenth National Conference on Artificial Intelligence,",
      "citeRegEx" : "Hansen et al\\.,? \\Q2004\\E",
      "shortCiteRegEx" : "Hansen et al\\.",
      "year" : 2004
    }, {
      "title" : "Planning and acting in partially observable stochastic domains",
      "author" : [ "L.P. Kaelbling", "M.L. Littman", "A.R. Cassandra" ],
      "venue" : "Artificial Intelligence,",
      "citeRegEx" : "Kaelbling et al\\.,? \\Q1998\\E",
      "shortCiteRegEx" : "Kaelbling et al\\.",
      "year" : 1998
    }, {
      "title" : "Games and Decisions",
      "author" : [ "R.D. Luce", "H. Raiffa" ],
      "venue" : null,
      "citeRegEx" : "Luce and Raiffa,? \\Q1957\\E",
      "shortCiteRegEx" : "Luce and Raiffa",
      "year" : 1957
    }, {
      "title" : "Taming decentralized POMDPs: Towards efficient policy computation for multiagent settings",
      "author" : [ "R. Nair", "M. Tambe", "M. Yokoo", "D. Pynadath", "S. Marsella" ],
      "venue" : "In Proceedings of the Eighteenth International Joint Conference on Artificial Intelligence,",
      "citeRegEx" : "Nair et al\\.,? \\Q2003\\E",
      "shortCiteRegEx" : "Nair et al\\.",
      "year" : 2003
    }, {
      "title" : "On the complexity of designing distributed protocols",
      "author" : [ "C.H. Papadimitriou", "J. Tsitsiklis" ],
      "venue" : "Information and Control,",
      "citeRegEx" : "Papadimitriou and Tsitsiklis,? \\Q1982\\E",
      "shortCiteRegEx" : "Papadimitriou and Tsitsiklis",
      "year" : 1982
    }, {
      "title" : "Intractable problems in control theory",
      "author" : [ "C.H. Papadimitriou", "J. Tsitsiklis" ],
      "venue" : "SIAM Journal on Control and Optimization,",
      "citeRegEx" : "Papadimitriou and Tsitsiklis,? \\Q1986\\E",
      "shortCiteRegEx" : "Papadimitriou and Tsitsiklis",
      "year" : 1986
    }, {
      "title" : "The complexity of Markov decision processes",
      "author" : [ "C.H. Papadimitriou", "J. Tsitsiklis" ],
      "venue" : "Mathematics of Operations Research,",
      "citeRegEx" : "Papadimitriou and Tsitsiklis,? \\Q1987\\E",
      "shortCiteRegEx" : "Papadimitriou and Tsitsiklis",
      "year" : 1987
    }, {
      "title" : "Probabilistic Reasoning in Intelligent Systems",
      "author" : [ "J. Pearl" ],
      "venue" : null,
      "citeRegEx" : "Pearl,? \\Q1988\\E",
      "shortCiteRegEx" : "Pearl",
      "year" : 1988
    }, {
      "title" : "Learning to cooperate via policy search",
      "author" : [ "L. Peshkin", "Kim", "K.-E", "N. Meuleau", "L.P. Kaelbling" ],
      "venue" : "In Proceedings of the Sixteenth Conference on Uncertainty in Artificial Intelligence,",
      "citeRegEx" : "Peshkin et al\\.,? \\Q2000\\E",
      "shortCiteRegEx" : "Peshkin et al\\.",
      "year" : 2000
    }, {
      "title" : "The communicative multiagent team decision problem: Analyzing teamwork theories and models",
      "author" : [ "D.V. Pynadath", "M. Tambe" ],
      "venue" : "Journal of Artificial Intelligence Research,",
      "citeRegEx" : "Pynadath and Tambe,? \\Q2002\\E",
      "shortCiteRegEx" : "Pynadath and Tambe",
      "year" : 2002
    }, {
      "title" : "The complexity of multiagent systems: The price of silence",
      "author" : [ "Z. Rabinovich", "C.V. Goldman", "J.S. Rosenschein" ],
      "venue" : "In Proceedings of the Second International Joint Conference on Autonomous Agents and Multi-Agent Systems,",
      "citeRegEx" : "Rabinovich et al\\.,? \\Q2003\\E",
      "shortCiteRegEx" : "Rabinovich et al\\.",
      "year" : 2003
    }, {
      "title" : "A real-time world model for multi-robot teams with high-latency communication",
      "author" : [ "M. Roth", "D. Vail", "M. Veloso" ],
      "venue" : "In Proceedings of IROS,",
      "citeRegEx" : "Roth et al\\.,? \\Q2003\\E",
      "shortCiteRegEx" : "Roth et al\\.",
      "year" : 2003
    }, {
      "title" : "Principles of metareasoning",
      "author" : [ "S. Russell", "E. Wefald" ],
      "venue" : "Artificial Intelligence,",
      "citeRegEx" : "Russell and Wefald,? \\Q1991\\E",
      "shortCiteRegEx" : "Russell and Wefald",
      "year" : 1991
    }, {
      "title" : "Distributed value functions",
      "author" : [ "J. Schneider", "Wong", "W.-K", "A. Moore", "M. Riedmiller" ],
      "venue" : "In Proceedings of the Sixteenth International Conference on Machine Learning,",
      "citeRegEx" : "Schneider et al\\.,? \\Q1999\\E",
      "shortCiteRegEx" : "Schneider et al\\.",
      "year" : 1999
    }, {
      "title" : "The optimal control of partially observable Markov processes over a finite horizon",
      "author" : [ "R.D. Smallwood", "E.J. Sondik" ],
      "venue" : "Operations Research,",
      "citeRegEx" : "Smallwood and Sondik,? \\Q1973\\E",
      "shortCiteRegEx" : "Smallwood and Sondik",
      "year" : 1973
    }, {
      "title" : "The contract net protocol: High level communication and control in a distributed problem solver",
      "author" : [ "R.G. Smith" ],
      "venue" : "Readings in Distributed Artificial Intelligence,",
      "citeRegEx" : "Smith,? \\Q1988\\E",
      "shortCiteRegEx" : "Smith",
      "year" : 1988
    }, {
      "title" : "Cheap talk, coordination, and evolutionary stability",
      "author" : [ "K. Wärneryd" ],
      "venue" : "Games and Economic Behavior,",
      "citeRegEx" : "Wärneryd,? \\Q1993\\E",
      "shortCiteRegEx" : "Wärneryd",
      "year" : 1993
    }, {
      "title" : "General principles of learning-based multi-agent systems",
      "author" : [ "D.H. Wolpert", "K.R. Wheeler", "K. Tumer" ],
      "venue" : "In Proceedings of the Third International Conference on Autonomous Agents,",
      "citeRegEx" : "Wolpert et al\\.,? \\Q1999\\E",
      "shortCiteRegEx" : "Wolpert et al\\.",
      "year" : 1999
    }, {
      "title" : "Communication decisions in multi-agent cooperation: Model and experiments",
      "author" : [ "P. Xuan", "V. Lesser", "S. Zilberstein" ],
      "venue" : "In Proceedings of the Fifth International Conference on Autonomous Agents,",
      "citeRegEx" : "Xuan et al\\.,? \\Q2001\\E",
      "shortCiteRegEx" : "Xuan et al\\.",
      "year" : 2001
    } ],
    "referenceMentions" : [ {
      "referenceID" : 4,
      "context" : "In particular, single-agent planning problems in stochastic domains were modeled as partially observable Markov decision processes (POMDPs) or fully-observable MDPs (Dean, Kaelbling, Kirman, & Nicholson, 1995; Kaelbling, Littman, & Cassandra, 1998; Boutilier, Dearden, & Goldszmidt, 1995). Borrowing from Operations Research techniques, optimal plans can be computed for these planning problems by solving the corresponding Markov decision problem. There has been a vast amount of progress in solving individual MDPs by exploiting domain structure (e.g., Boutilier et al., 1995; Feng & Hansen, 2002). Approximations of MDPs have also been studied, for example, by Guestrin et al. (2003), assuming that the reward function can be decomposed into local reward functions each depending on only a small set of variables.",
      "startOffset" : 249,
      "endOffset" : 687
    }, {
      "referenceID" : 2,
      "context" : "Bernstein et al. have shown that solving optimally a Dec-MDP is NEXP-complete by reducing the control problem to the tiling problem. Rabinovich et al. (2003) have shown that even approximating the off-line optimal solution of a Dec-MDP remains NEXP.",
      "startOffset" : 0,
      "endOffset" : 158
    }, {
      "referenceID" : 2,
      "context" : "Bernstein et al. have shown that solving optimally a Dec-MDP is NEXP-complete by reducing the control problem to the tiling problem. Rabinovich et al. (2003) have shown that even approximating the off-line optimal solution of a Dec-MDP remains NEXP. Nair et al. (2003) have presented the Joint Equilibrium-based Search for Policies (JESP) algorithm that finds a locally-optimal joint solution.",
      "startOffset" : 0,
      "endOffset" : 269
    }, {
      "referenceID" : 2,
      "context" : "Bernstein et al. have shown that solving optimally a Dec-MDP is NEXP-complete by reducing the control problem to the tiling problem. Rabinovich et al. (2003) have shown that even approximating the off-line optimal solution of a Dec-MDP remains NEXP. Nair et al. (2003) have presented the Joint Equilibrium-based Search for Policies (JESP) algorithm that finds a locally-optimal joint solution. Researchers have attempted to approximate the coordination problem by proposing on-line learning procedures. Peshkin et al. (2000) have studied how to approximate the decentralized solution based on a gradient descent approach for on-line learning (when the agents do not know the model).",
      "startOffset" : 0,
      "endOffset" : 525
    }, {
      "referenceID" : 2,
      "context" : "Bernstein et al. have shown that solving optimally a Dec-MDP is NEXP-complete by reducing the control problem to the tiling problem. Rabinovich et al. (2003) have shown that even approximating the off-line optimal solution of a Dec-MDP remains NEXP. Nair et al. (2003) have presented the Joint Equilibrium-based Search for Policies (JESP) algorithm that finds a locally-optimal joint solution. Researchers have attempted to approximate the coordination problem by proposing on-line learning procedures. Peshkin et al. (2000) have studied how to approximate the decentralized solution based on a gradient descent approach for on-line learning (when the agents do not know the model). Schneider et al. (1999) assume that each decision-maker is assigned a local optimization problem.",
      "startOffset" : 0,
      "endOffset" : 707
    }, {
      "referenceID" : 2,
      "context" : "Bernstein et al. have shown that solving optimally a Dec-MDP is NEXP-complete by reducing the control problem to the tiling problem. Rabinovich et al. (2003) have shown that even approximating the off-line optimal solution of a Dec-MDP remains NEXP. Nair et al. (2003) have presented the Joint Equilibrium-based Search for Policies (JESP) algorithm that finds a locally-optimal joint solution. Researchers have attempted to approximate the coordination problem by proposing on-line learning procedures. Peshkin et al. (2000) have studied how to approximate the decentralized solution based on a gradient descent approach for on-line learning (when the agents do not know the model). Schneider et al. (1999) assume that each decision-maker is assigned a local optimization problem. Their analysis shows how to approximate the global optimal value function when agents may exchange information about their local values at no cost. Neither convergence nor bounds have been established for this approach. Wolpert et al. (1999) assume that each agent runs a predetermined reinforcement learning algorithm and transforms the coordination problem into updating the local reward function so as to maximize the global reward function.",
      "startOffset" : 0,
      "endOffset" : 1023
    }, {
      "referenceID" : 9,
      "context" : "Coordination and cooperation have been studied extensively by the distributed artificial intelligence community (Durfee, 1988; Grosz & Kraus, 1996; Smith, 1988) assuming a known and fixed language of communication.",
      "startOffset" : 112,
      "endOffset" : 160
    }, {
      "referenceID" : 34,
      "context" : "Coordination and cooperation have been studied extensively by the distributed artificial intelligence community (Durfee, 1988; Grosz & Kraus, 1996; Smith, 1988) assuming a known and fixed language of communication.",
      "startOffset" : 112,
      "endOffset" : 160
    }, {
      "referenceID" : 0,
      "context" : "Becker et al. (2003) presented the first algorithm for optimal off-line decentralized control when a certain structure of the joint reward was assumed.",
      "startOffset" : 0,
      "endOffset" : 21
    }, {
      "referenceID" : 0,
      "context" : "Becker et al. (2003) presented the first algorithm for optimal off-line decentralized control when a certain structure of the joint reward was assumed. Recently, Hansen et al. (2004) showed how to generalize dynamic programming to solve optimally general decentralized problems.",
      "startOffset" : 0,
      "endOffset" : 183
    }, {
      "referenceID" : 0,
      "context" : "Becker et al. (2003) presented the first algorithm for optimal off-line decentralized control when a certain structure of the joint reward was assumed. Recently, Hansen et al. (2004) showed how to generalize dynamic programming to solve optimally general decentralized problems. Nevertheless, no existing technique solves efficiently special classes of Dec-POMDPs that we identify in this paper. Pynadath and Tambe (2002) studied a similar model to ours, although they did not propose an algorithm for solving the decentralized control problem.",
      "startOffset" : 0,
      "endOffset" : 422
    }, {
      "referenceID" : 0,
      "context" : "Becker et al. (2003) presented the first algorithm for optimal off-line decentralized control when a certain structure of the joint reward was assumed. Recently, Hansen et al. (2004) showed how to generalize dynamic programming to solve optimally general decentralized problems. Nevertheless, no existing technique solves efficiently special classes of Dec-POMDPs that we identify in this paper. Pynadath and Tambe (2002) studied a similar model to ours, although they did not propose an algorithm for solving the decentralized control problem. Claus and Boutilier (1998) studied a simple case of decentralized control where agents share information about each other’s actions during the off-line planning stage.",
      "startOffset" : 0,
      "endOffset" : 572
    }, {
      "referenceID" : 0,
      "context" : "Balch and Arkin’s (1994) approach to communication between robots is inspired by biological models and refers to specific tasks such as foraging, consumption and grazing.",
      "startOffset" : 0,
      "endOffset" : 25
    }, {
      "referenceID" : 0,
      "context" : "Balch and Arkin’s (1994) approach to communication between robots is inspired by biological models and refers to specific tasks such as foraging, consumption and grazing. Their empirical study was performed in the context of reactive systems and communication was free. Our aim is to find optimal policies of communication and action off-line, taking into account information that agents can acquire on-line. Game theory researchers (Luce & Raiffa, 1957; Aumann & Hart, 1994) have also looked at communication, although the approaches and questions are somewhat different from ours. For example, Wärneryd (1993), and Blume and Sobel (1995) study how the receiver of a message may alter its actions in",
      "startOffset" : 0,
      "endOffset" : 612
    }, {
      "referenceID" : 0,
      "context" : "Balch and Arkin’s (1994) approach to communication between robots is inspired by biological models and refers to specific tasks such as foraging, consumption and grazing. Their empirical study was performed in the context of reactive systems and communication was free. Our aim is to find optimal policies of communication and action off-line, taking into account information that agents can acquire on-line. Game theory researchers (Luce & Raiffa, 1957; Aumann & Hart, 1994) have also looked at communication, although the approaches and questions are somewhat different from ours. For example, Wärneryd (1993), and Blume and Sobel (1995) study how the receiver of a message may alter its actions in",
      "startOffset" : 0,
      "endOffset" : 640
    }, {
      "referenceID" : 26,
      "context" : "We use properties of conditional probabilities established by Pearl (1988). The notation I(X,Y |Z) means that the set of variables X is independent of the set of variables Y given the set of variables Z.",
      "startOffset" : 62,
      "endOffset" : 75
    }, {
      "referenceID" : 2,
      "context" : "Process Class Observations Needed by Agent i Reference Dec-POMDP The local sequence of observations: oi (Bernstein et al., 2002) IT, IO Dec-POMDP The local sequence of observations: oi Conjecture 1 IT Dec-MDP (no IO) The local sequence of observations: oi Conjecture 2 IT, IO Dec-MDP The last local observation: oi = si Lemma 2",
      "startOffset" : 104,
      "endOffset" : 128
    }, {
      "referenceID" : 2,
      "context" : "It is already known that deciding a finite-horizon decentralized MDP is NEXP-complete (Bernstein et al., 2002).",
      "startOffset" : 86,
      "endOffset" : 110
    }, {
      "referenceID" : 2,
      "context" : "This case can be proved through the same reduction applied by Bernstein et al. (2002). We can reduce the general goal-oriented Dec-MDP problem to the tiling problem by adding a goal state to the last state of the Dec-MDP defined in the reduction.",
      "startOffset" : 62,
      "endOffset" : 86
    }, {
      "referenceID" : 19,
      "context" : "So far, the only known algorithms for solving optimally decentralized control problems are the generalized version of dynamic programming for Dec-POMDPs (Hansen et al., 2004) and the Coverage-set algorithm (Becker et al.",
      "startOffset" : 153,
      "endOffset" : 174
    }, {
      "referenceID" : 1,
      "context" : ", 2004) and the Coverage-set algorithm (Becker et al., 2003) for Dec-MDPs with independent transitions and observations.",
      "startOffset" : 39,
      "endOffset" : 60
    }, {
      "referenceID" : 2,
      "context" : "IO and IT NP-C [Bernstein et al. 2002] [Rabinovich et al.",
      "startOffset" : 15,
      "endOffset" : 38
    }, {
      "referenceID" : 29,
      "context" : "2002] [Rabinovich et al. 2003]",
      "startOffset" : 6,
      "endOffset" : 30
    }, {
      "referenceID" : 2,
      "context" : "IO and IT NEXP [Bernstein et al. 2002] [Rabinovich et al.",
      "startOffset" : 15,
      "endOffset" : 38
    }, {
      "referenceID" : 29,
      "context" : "2002] [Rabinovich et al. 2003]",
      "startOffset" : 6,
      "endOffset" : 30
    }, {
      "referenceID" : 19,
      "context" : "dynamic programming (Hansen et al., 2004) IT, IO Dec-MDP, Coverage-set (Becker et al.",
      "startOffset" : 20,
      "endOffset" : 41
    }, {
      "referenceID" : 1,
      "context" : ", 2004) IT, IO Dec-MDP, Coverage-set (Becker et al., 2003) no information sharing IT, IO Dec-MDP, Not Known Yet9 Section 5 with direct communication IT, IO, GO-Dec-MDP (|G| = 1) Opt1Goal Section 4.",
      "startOffset" : 37,
      "endOffset" : 58
    }, {
      "referenceID" : 4,
      "context" : "This results in a fully observable decentralized process, which is equivalent to an MMDP (Boutilier, 1999).",
      "startOffset" : 89,
      "endOffset" : 106
    }, {
      "referenceID" : 13,
      "context" : "The model was presented by Goldman and Zilberstein (2003). 11.",
      "startOffset" : 27,
      "endOffset" : 58
    }, {
      "referenceID" : 31,
      "context" : "This approach is based on meta-level control of communication, motivated by a similar decision-theoretic approach to meta-level reasoning that was developed by Russell and Wefald (1991). We assume that the designer of the system also designs a mechanism for communication.",
      "startOffset" : 160,
      "endOffset" : 186
    }, {
      "referenceID" : 19,
      "context" : "From a theoretical perspective, decentralized partiallyobservable Markov decision processes serve as a formal framework to study the foundations of multi-agent systems (e.g., Becker et al., 2003; Hansen et al., 2004; Guestrin & Gordon, 2002; Peshkin et al., 2000; Pynadath & Tambe, 2002; Claus & Boutilier, 1998).",
      "startOffset" : 168,
      "endOffset" : 312
    }, {
      "referenceID" : 27,
      "context" : "From a theoretical perspective, decentralized partiallyobservable Markov decision processes serve as a formal framework to study the foundations of multi-agent systems (e.g., Becker et al., 2003; Hansen et al., 2004; Guestrin & Gordon, 2002; Peshkin et al., 2000; Pynadath & Tambe, 2002; Claus & Boutilier, 1998).",
      "startOffset" : 168,
      "endOffset" : 312
    }, {
      "referenceID" : 9,
      "context" : "The typical distinction previously made in the literature is between systems with no communication and systems with a predefined language of communication, which typically does not incur any costs, overlooking the fact that dependent observations offer yet another form of communication (Pynadath & Tambe, 2002; Decker & Lesser, 1992; Grosz & Kraus, 1996; Durfee, 1988; Roth, Vail, & Veloso, 2003).",
      "startOffset" : 287,
      "endOffset" : 397
    }, {
      "referenceID" : 9,
      "context" : "The typical distinction previously made in the literature is between systems with no communication and systems with a predefined language of communication, which typically does not incur any costs, overlooking the fact that dependent observations offer yet another form of communication (Pynadath & Tambe, 2002; Decker & Lesser, 1992; Grosz & Kraus, 1996; Durfee, 1988; Roth, Vail, & Veloso, 2003). The problem of combining communication acts into the decision problem of a group of cooperative agents was addressed by Xuan et al. (2001). Their framework is similar to ours but their approach is heuristic.",
      "startOffset" : 356,
      "endOffset" : 538
    }, {
      "referenceID" : 1,
      "context" : "The Coverageset algorithm that solves optimally decentralized MDPs with a certain reward structure appeared in (Becker et al., 2003).",
      "startOffset" : 111,
      "endOffset" : 132
    } ],
    "year" : 2011,
    "abstractText" : "Decentralized control of cooperative systems captures the operation of a group of decision-makers that share a single global objective. The difficulty in solving optimally such problems arises when the agents lack full observability of the global state of the system when they operate. The general problem has been shown to be NEXP-complete. In this paper, we identify classes of decentralized control problems whose complexity ranges between NEXP and P. In particular, we study problems characterized by independent transitions, independent observations, and goal-oriented objective functions. Two algorithms are shown to solve optimally useful classes of goal-oriented decentralized processes in polynomial time. This paper also studies information sharing among the decision-makers, which can improve their performance. We distinguish between three ways in which agents can exchange information: indirect communication, direct communication and sharing state features that are not controlled by the agents. Our analysis shows that for every class of problems we consider, introducing direct or indirect communication does not change the worst-case complexity. The results provide a better understanding of the complexity of decentralized control problems that arise in practice and facilitate the development of planning algorithms for these problems.",
    "creator" : "dvips(k) 5.86 Copyright 1999 Radical Eye Software"
  }
}