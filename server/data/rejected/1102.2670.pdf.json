{
  "name" : "1102.2670.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Online Least Squares Estimation with Self-Normalized Processes: An Application to Bandit Problems∗",
    "authors" : [ "Yasin Abbasi-Yadkori", "Csaba Szepesvári" ],
    "emails" : [ "abbasiya@cs.ualberta.ca", "dpal@cs.ualberta.ca", "szepesva@cs.ualberta.ca" ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n10 2.\n26 70\nv1 [\ncs .A\nI] 1\n4 Fe\nb 20\n11\nWe apply the confidence sets to several online decision problems, such as the multi-armed and the linearly parametrized bandit problems. The confidence sets are potentially applicable to other problems such as sleeping bandits, generalized linear bandits, and other linear control problems.\nWe improve the regret bound of the Upper Confidence Bound (UCB) algorithm of Auer et al. (2002) and show that its regret is with high-probability a problem dependent constant. In the case of linear bandits (Dani et al., 2008), we improve the problem dependent bound in the dimension and number of time steps. Furthermore, as opposed to the previous result, we prove that our bound holds for small sample sizes, and at the same time the worst case bound is improved by a logarithmic factor and the constant is improved."
    }, {
      "heading" : "1 Introduction",
      "text" : "The least squares method forms a cornerstone of statistics and machine learning. It is used as the main component of many stochastic sequential decision problems, such as multi-armed bandit, linear bandits, and other linear control problems. However, the analysis of least squares in these online settings is non-trivial because of the correlations between data points. Fortunately, there is a connection between online least squares estimation and the area of self-normalized processes. Study of self-normalized processes has a long history that goes back to Student and is treated in detail in recent book by de la Peña et al. (2009). Using these tools we provide a proof of a bound on the deviation for vector-valued martingales. A less general version of the bound can be found already in de la Peña et al. (2004, 2009). Additionally our proof, based on the method of mixtures, is new, simpler and self-contained. The bound improves the previous bound of Rusmevichientong and Tsitsiklis (2010) and it is applicable to virtually any online least squares problem.\nThe bound that we derive, gives immediately rise to tight confidence sets for the online least squares estimate that can replace the confidence sets in existing algorithms. In particular, the confidence sets can be used in the UCB algorithm for the multi-armed bandit problem, the ConfidenceBall algorithm of Dani et al. (2008) for the linear bandit problem, and LinRel algorithm of Auer (2003) for the associative reinforcement learning problem. We show that this leads to improved performance of these algorithms. Our hope is that the new confidence sets can be used to improve the performance of other similar linear decision problems.\nThe multi-armed bandit problem, introduced by Robbins (1952), is a game between the learner and the environment. At each time step, the learner chooses one of K actions and receives a reward which is generated independently at random from a fixed distribution associated with the chosen arm. The objective of the learner is to maximize his total reward. The performance of the learner is evaluated by the regret, which is defined as the difference between his total reward and the total\n∗Submitted to the 24th Annual Conference on Learning Theory (COLT 2011)\nreward of the best action. Lai and Robbins (1985) prove a ( ∑ i6=i∗ 1/D(pj, pi∗) − o(1)) logT lower bound on the expected regret of any algorithm, where T is the number of time steps, pi∗ and pi are the reward distributions of the optimal arm and arm i respectively, and D is the KL-divergence.\nAuer et al. (2002) designed the UCB algorithm and proved a finite-time logarithmic bound on its regret. He used Hoeffding’s inequality to construct confidence intervals and obtained a O((K log T )/∆) bound on the expected regret, where ∆ is the difference between the expected rewards of the best and the second best action. We modify UCB so that it uses our new confidence sets and we show a stronger result. Namely, we show that with probability 1 − δ, the regret of the modified algorithm is O(K log(1/δ)/∆). Seemingly, this result contradicts the lower bound of Lai and Robbins (1985), however our algorithm depends on δ which it receives as an input. The expected regret of the modified algorithm with δ = 1/T matches the regret of the original algorithm.\nIn the linear bandit problem, the learner chooses repeatedly actions from a fixed subset of Rd and receives a random reward, expectation of which is a linear function of the action. Dani et al. (2008) proposed theConfidenceBall algorithm and showed that its regret is at mostO(d log(T ) √\nT log(T/δ)) with probability at most 1 − δ. We modify their algorithm so that it uses our new confidence sets and we show that its regret is at most O(d log(T ) √ T + √\ndT log(T/δ)). Additionally, constants in our bound are smaller, and our bound holds for all T ≥ 1, as opposed the previous one which holds only for sufficiently large T . Dani et al. (2008) prove also a problem dependent regret bound. Namely, they show that the regret of their algorithm is O(d 2\n∆ log 2 T log(T/δ)) where ∆\nis the “gap” as defined in (Dani et al., 2008). For our modified algorithm we prove an improved O( log(1/δ)∆ (logT + d log logT ) 2) bound."
    }, {
      "heading" : "1.1 Notation",
      "text" : "We use ‖ · ‖ to denote the 2-norm. For a positive definite matrix A ∈ Rd×d, the weighted 2-norm is defined by ‖x‖2A = x⊤Ax, where x ∈ Rd. The inner product is denoted by 〈·, ·〉 and the weighted inner-product x⊤Ay = 〈x, y〉A. We use λmin(A) to denote the minimum eigenvalue of the positive definite matrix A. We use A ≻ 0 to denote that A is positive definite, while we use A 0 to denote that it is positive semidefinite. The same notation is used to denote the Loewner partial order of matrices. We shall use ei to denote the i th unit vector, i.e., for all j 6= i, eij = 0 and eii = 1."
    }, {
      "heading" : "2 Vector-Valued Martingale Tail Inequalities",
      "text" : "Let (Fk; k ≥ 0) be a filtration, (mk; k ≥ 0) be an Rd-valued stochastic process adapted to (Fk), (ηk; k ≥ 1) be a real-valued martingale difference process adapted to (Fk). Assume that ηk is conditionally sub-Gaussian in the sense that there exists some R > 0 such that for any γ ∈ R, k ≥ 1,\nE[exp(γηk) | Fk−1] ≤ exp ( γ2R2\n2\n)\na.s. (1)\nConsider the martingale\nSt =\nt ∑\nk=1\nηkmk−1 (2)\nand the matrix-valued processes\nVt =\nt ∑\nk=1\nmk−1m ⊤ k−1, V t = V + Vt, t ≥ 0, (3)\nwhere V is an F0-measurable, positive definite matrix. In particular, assume that with probability one, the eigenvalues of V are larger than λ0 > 0 and that ‖mk‖ ≤ L holds a.s. for any k ≥ 0.\nThe following standard inequality plays a crucial role in the following developments:\nLemma 1. Consider (ηt), (mt) as defined above and let τ be a stopping time with respect to the filtration (Ft). Let λ ∈ Rd be arbitrary and consider\nPλt = exp\n(\nt ∑\nk=1\n[\nηk〈λ,mk−1〉 R − 1 2 〈λ,mk−1〉2\n]\n)\n.\nThen Pτ is almost surely well-defined and\nE [ Pλτ ] ≤ 1.\nProof. The proof is standard (and is given only for the sake of completeness). We claim that Pt = P λ t is a supermartingale. Let\nDk = exp\n( ηk〈λ,mk−1〉 R − 1 2 〈λ,mk−1〉2 ) .\nObserve that by (1), we have E [Dk |Fk−1] ≤ 1. Clearly, Dk is Fk-adapted, as is Pk. Further, E [Pt|Ft−1] = E [D1 · · ·Dt−1Dt |Ft−1] = D1 · · ·Dt−1 E [Dt |Ft−1] ≤ Pt−1,\nshowing that (Pt) is indeed a supermartingale. Now, this immediately leads to the desired result when τ = t for some deterministic time t. This is based on the fact that the mean of any supermartingale can be bounded by the mean of its first element. In the case of (Pt), for example, we have E [Pt] = E [E [Pt|Ft−1]] ≤ E [Pt−1] ≤ . . . ≤ E [P0] = E [D0] = 1.\nNow, in order to consider the general case, let St = Pτ∧t. 1 It is well known that (St) is still a supermartingale with E [St] ≤ E [S0] = E [P0] = 1. Further, since Pt was nonnegative, so is St. Hence, by the convergence theorem for nonnegative supermartingales, almost surely, limt→∞ St exists, i.e., Pτ is almost surely well-defined. Further, E [Pτ ] = E [lim inft→∞ St] ≤ lim inft→∞ E [St] ≤ 1 by Fatou’s Lemma.\nBefore stating our main results, we give some recent results, which can essentially be extracted from the paper by Rusmevichientong and Tsitsiklis (2010).\nTheorem 2. Consider the processes (St), (V t) as defined above and let\nκ = √ 3 + 2 log((L2 + trace(V ))/λ0). (4)\nThen, for any 0 < δ < 1, t ≥ 2, with probability at least 1− δ,\n‖St‖V −1 t\n≤ 2 κ2R √ log t √ d log(t) + log(1/δ) . (5)\nWe now show how to strengthen the previous result using the method of mixtures, originally used by Robbins and Siegmund (1970) to evaluate boundary crossing probabilities for Brownian motion.\nTheorem 3 (Self-normalized bound for vector-valued martingales). Let (ηt), (mt), (St), (V t), and (Ft) be as before and let τ be a stopping time with respect to the filtration (Ft). Assume that V is deterministic. Then, for any 0 < δ < 1, with probability 1− δ,\n‖Sτ‖2V −1 τ\n≤ 2R2 log ( det(V τ ) 1/2 det(V ) −1/2\nδ\n)\n. (6)\nProof. Without loss of generality, assume that R = 1 (by appropriately scaling St, this can always be achieved). Let\nMt(λ) = exp (\n〈λ, St〉 − 12 ‖λ‖ 2 Vt\n)\n.\nNotice that by Lemma 1, the mean of Mτ (λ) is not larger than one. Let Λ be a Gaussian random variable which is independent of all the other random variables and whose covariance is V −1. Define Mt = E [Mt(Λ)|F∞] . Clearly, we still have E [Mτ ] = E [E [Mτ (Λ) |Λ ] ] ≤ 1. Let us calculate Mt: Let f denote the density of Λ and for a positive definite matrix P let c(P ) = √ (2π)d/ det(P ) = ∫\nexp(− 12x⊤Px)dx. Then,\nMt =\n∫\nRd\nexp (\n〈λ, St〉 − 12 ‖λ‖ 2 Vt\n)\nf(λ) dλ\n=\n∫\nRd\nexp (\n− 12 ∥ ∥λ− V −1t St ∥ ∥\n2 Vt + 12 ‖St‖ 2 V −1 t\n)\nf(λ) dλ\n= 1\nc(V ) exp\n(\n1 2 ‖St‖ 2 V −1 t\n)\n∫\nRd\nexp ( − 12 { ∥ ∥λ− V −1t St ∥ ∥ 2 Vt + ‖λ‖2V }) dλ.\n1τ ∧ t is a shorthand notation for min(τ, t).\nElementary calculation shows that if P 0, Q ≻ 0,\n‖x− a‖2P + ‖x‖ 2 Q =\n∥ ∥x− (P +Q)−1Pa ∥ ∥\n2 P+Q + ‖a‖2P − ‖Pa‖ 2 (P+Q)−1 .\nTherefore, ∥\n∥λ− V −1t St ∥ ∥\n2 Vt + ‖λ‖2V = ∥ ∥λ− (V + Vt)−1St ∥ ∥ 2 V+Vt + ∥ ∥V −1t St ∥ ∥ 2 Vt − ‖St‖2(V +Vt)−1\n= ∥ ∥λ− (V + Vt)−1St ∥ ∥\n2 V+Vt + ‖St‖2V −1 t − ‖St‖2(V +Vt)−1 ,\nwhich gives\nMt = 1\nc(V ) exp\n(\n1 2 ‖St‖ 2 (V +Vt)−1\n)\n∫\nRd\nexp (\n− 12 ∥ ∥λ− (V + Vt)−1St ∥ ∥\n2\nV+Vt\n)\ndλ\n= c(V + Vt)\nc(V ) exp\n(\n1 2 ‖St‖ 2 (V +Vt)−1\n)\n=\n(\ndet(V )\ndet(V + Vt)\n)1/2\nexp (\n1 2 ‖St‖ 2 (V +Vt)−1\n)\n.\nNow, from E [Mτ ] ≤ 1, we obtain\nP\n( ‖Sτ‖2(V+Vτ )−1 > 2 log ( det(V + Vτ ) 1/2 det(V )1/2 1 δ )) = P\n\n  \nexp (\n1 2 ‖Sτ‖ 2 (V+Vτ )−1\n)\nδ−1 ( det(V + Vτ ) /\ndet(V )\n) 1 2\n> 1\n\n  \n≤ E\n\n  \nexp (\n1 2 ‖Sτ‖ 2 (V +Vτ )−1\n)\nδ−1 ( det(V + Vτ ) /\ndet(V )\n) 1 2\n\n  \n= E [Mτ ] δ ≤ δ, thus finishing the proof.\nCorollary 1 (Uniform Bound). Under the same assumptions as in the previous theorem, for any 0 < δ < 1, with probability 1− δ,\n∀t ≥ 0, ‖St‖2V −1 t\n≤ 2R2 log ( det(V t) 1/2 det(V ) −1/2\nδ\n)\n. (7)\nProof. We will use a stopping time construction, which goes back at least to Freedman (1975). Define the bad event\nBt(δ) =\n{\nω ∈ Ω : ‖St‖2V̄ −1 t > 2R2 log\n(\ndet(V̄t) 1/2 det(V )−1/2\nδ\n)}\n(8)\nWe are interested in bounding the probability that ⋃ t≥0 Bt(δ) happens. Define τ(ω) = min{t ≥ 0 : ω ∈ Bt(δ)}, with the convention that min ∅ = ∞. Then, τ is a stopping time. Further,\n⋃\nt≥0\nBt(δ) = {ω : τ(ω) < ∞}.\nThus, by Theorem 3\nP\n\n\n⋃\nt≥0\nBt(δ)\n\n = P (τ < ∞)\n= P\n(\n‖Sτ‖2V̄ −1τ > 2R 2 log\n(\ndet(V̄τ ) 1/2 det(V )−1/2\nδ\n) , τ < ∞ )\n≤ P (\n‖Sτ‖2V̄ −1τ > 2R 2 log\n(\ndet(V̄τ ) 1/2 det(V )−1/2\nδ\n))\n≤ δ .\nLet us now turn our attention to understanding the determinant term on the right-hand side of (6).\nLemma 4. We have that\nlog det(V t)\ndetV ≤\nt ∑\nk=1\n‖mk−1‖2V −1 k−1 .\nFurther, we have that\nt ∑\nk=1\n(\n‖mk−1‖2V −1 k−1\n∧ 1 ) ≤ 2(log det(V t)− log det V ) ≤ 2(d log((trace(V ) + tL2)/d)− log detV ).\nFinally, if λ0 ≥ max(1, L2) then t\n∑\nk=1\n‖mk−1‖2V −1 k−1 ≤ 2 log det(V t) det(V ) .\nProof. Elementary algebra gives\ndet(V t) = det(V t−1 +mt−1m ⊤ t−1) = det(V t−1) det(I + V\n−1/2 t−1 mt−1(V −1/2 t−1 mt−1) ⊤)\n= det(V t−1) (1 + ‖mt−1‖2V −1 t−1 ) = det(V )\nt ∏\nk=1\n(\n1 + ‖mk−1‖2V −1 k−1\n)\n, (9)\nwhere we used that all the eigenvalues of a matrix of the form I+xx⊤ are one except one eigenvalue, which is 1 + ‖x‖2 and which corresponds to the eigenvector x. Using log(1 + t) ≤ t, we can bound log det(V t) by\nlog det(V t) ≤ log det V + t ∑\nk=1\n‖mk−1‖2V −1 k−1 .\nCombining x ≤ 2 log(1 + x), which holds when x ∈ [0, 1], and (9), we get t\n∑\nk=1\n(\n‖mk−1‖2V −1 k−1\n∧ 1 ) ≤ 2 t ∑\nk=1\nlog (\n1 + ‖mk−1‖2V −1 k−1\n)\n= 2(log det(V t)− log detV ).\nThe trace of V t is bounded by trace(V ) + tL 2, assuming ‖mk‖ ≤ L. Hence, det(V t) = ∏d i=1 λi ≤ (\ntrace(V )+tL2\nd\n)d\nand therefore,\nlog det(V t) ≤ d log((trace(V ) + tL2)/d),\nfinishing the proof of the second inequality. The sum ∑t k=1 ‖mk−1‖ 2 V −1\nk−1\ncan itself be upper bounded\nas a function of log det(V t) provided that λ0 is large enough. Notice ‖mk−1‖2V −1 k−1 ≤ λ−1min(V k−1) ‖mk−1‖ 2 ≤ L2/λ0. Hence, we get that if λ0 ≥ max(1, L2),\nlog det(V t)\ndet V ≤\nt ∑\nk=1\n‖mk−1‖2V −1 k−1 ≤ 2 log det(V t) det(V ) .\nMost of this argument can be extracted from the paper of Dani et al. (2008). However, the idea goes back at least to Lai et al. (1979), Lai and Wei (1982) (a similar argument is used around Theorem 11.7 in the book by Cesa-Bianchi and Lugosi (2006)). Note that Lemmas B.9–B.11 of Rusmevichientong and Tsitsiklis (2010) also give a bound on ∑t\nk=1 ‖mk−1‖ 2 V −1\nk−1\n, with an essentially\nidentical argument. Alternatively, one can use the bounding technique of Auer (2003) (see the proof of Lemma 13 there on pages 412–413) to derive a bound like ∑t\nk=1 ‖mk−1‖ 2 V −1\nk−1 ≤ Cd log t for a suitable chosen constant C > 0.\nRemark 5. By combining Corollary 1 and Lemma 4, we get a simple worst case bound that holds with probability 1− δ:\n∀t ≥ 0, ‖St‖2V −1 t\n≤ dR2 log ( trace(V ) + tL2\nd δ\n)\n. (10)\nStill, the new bound is considerably better than the previous one given by Theorem 2. Note that the log(t) factor cannot be removed, as shown by Problem 3, page 203 in the book by de la Peña et al. (2009)."
    }, {
      "heading" : "3 Optional Skipping",
      "text" : "Consider the case when d = 1, mk = εk ∈ {0, 1}, i.e., the case of an optional skipping process. Then, using again V = I = 1, V t = 1 + ∑t k=1 εk−1 def = 1 +Nt and thus the expression studied becomes\n‖St‖V −1 t\n= |∑tk=1 εk−1ηk|√\n1 +Nt .\nWe also have\nlog det(V t) =\nt ∑\nk=1\nlog\n(\n1 + εk−1\n1 +Nk\n) ≤ t ∑\nk=1\nεk−1 1 +Nk =\nNt+1 ∑\nk=1\n1 k ≤ 1+\n∫ Nt+1\n1\nx−1 dx = 1+ log(1+Nt).\nThus, we get, with probability 1− δ\n∀s ≥ 0, ∣ ∣ ∣\n∣ ∣\ns ∑\nk=1\nεk−1ηk\n∣ ∣ ∣ ∣ ∣ ≤ √ (1 +Ns) ( 1 + 2 log ( (1 +Ns) 1/2 δ )) . (11)\nIf we apply Doob’s optional skipping and Hoeffding-Azuma, with a union bound (see, e.g., the paper of Bubeck et al. (2008)), we would get, for any 0 < δ < 1, t ≥ 2, with probability 1− δ,\n∀s ∈ {0, . . . , t}, ∣ ∣ ∣\n∣ ∣\ns ∑\nk=1\nεk−1ηk\n∣ ∣ ∣ ∣ ∣ ≤ √ 2Ns log ( 2t δ ) . (12)\nThe major difference between these bounds is that (12) depends explicitly on t, while (11) does not. This has the positive effect that one need not recompute the bound if Nt does not grow, which helps e.g. in the paper of Bubeck et al. (2008) to improve the computational complexity of the HOO algorithm. Also, the coefficient of the leading term in (11) under the square root is 1, whereas in (12) it is 2.\nInstead of a union bound, it is possible to use a “peeling device” to replace the conservative log t factor in the above bound by essentially log log t. This is done e.g. in Garivier and Moulines (2008) in their Theorem 22.2 From their derivations, the following one sided, uniform bound can be extracted (see Remark 24, page 19): For any 0 < δ < 1, t ≥ 2, with probability 1− δ,\n∀s ∈ {0, . . . , t}, s ∑\nk=1\nεk−1ηk ≤ √\n4Ns 1.99 log\n(\n6 log t\nδ\n)\n. (13)\nAs noted by Garivier and Moulines (2008), due to the law of iterated logarithm, the scaling of the right-hand side as a function of t cannot be improved in the worst-case. However, this leaves open the possibility of deriving a maximal inequality which depends on t only through Nt."
    }, {
      "heading" : "4 The Multi-Armed Bandit Problem",
      "text" : "Now we turn our attention to the multi-armed bandit problem. Let µi denote the expected reward of action i and ∆i = µ∗ − µi, where µ∗ is the expected reward of the optimal action. We assume that if we choose action It in round t, we obtain reward µIt + ηt. Let Ni,t denote the number of times that we have played action i up to time t, and X̄i,t denote the average of the rewards received by action i up to time t. From (11) with δ/K instead of δ and a union bound over the actions, we have the following confidence intervals that hold with probability at least 1− δ:\n∀i ∈ {1, . . . ,K}, ∀s ∈ {1, 2, . . .}, ∣ ∣X̄i,s − µi ∣ ∣ ≤ ci,s , (14) 2They give their theorem as ratios, which they should not, since their inequality then fails to hold for\nNt = 0. However, this is easy to remedy by reformulating their result as we do it here.\nwhere\nci,s =\n√\n1 +Ni,s N2i,s\n(\n1 + 2 log\n(\nK(1 +Ni,s) 1/2\nδ\n))\n.\nModify the UCB Algorithm of Auer et al. (2002) to use the confidence intervals (14) and change the action selection rule accordingly. Hence, at time t, we choose the action\nIt = argmax i X̄i,t + ci,t. (15)\nWe call this algorithm UCB(δ).\nTheorem 6. With probability at least 1−δ, the total regret of the UCB(δ) algorithm with the action selection rule (15) is constant and is bounded by\nR(T ) ≤ ∑\ni:∆i>0\n(\n3∆i + 16\n∆i log\n2K\n∆iδ\n)\n.\nwhere i∗ is the index of the optimal action.\nProof. Suppose the confidence intervals do not fail. If we play action i, the upper estimate of the action is above µ∗. Hence,\nci,s ≥ ∆i 2 .\nSubstituting ci,s and squaring gives\nN2i,s − 1 Ni,s + 1 ≤ N2i,s Ni,s + 1 ≤ 4 ∆2i ( 1 + 2 log K(1 +Ni,s) 1/2 δ ) .\nBy using Lemma 8 of Antos et al. (2010), we get that\nNi,s ≤ 3 + 16\n∆2i log\n2K ∆iδ .\nThus, using R(T ) = ∑ i6=i∗ ∆iNi,T , we get that with probability at least 1 − δ, the total regret is bounded by\nR(T ) ≤ ∑\ni:∆i>0\n(\n3∆i + 16\n∆i log\n2K\n∆iδ\n)\n.\nRemark 7. Lai and Robbins (1985) prove that for any suboptimal arm j,\nE [Ni,t] ≥ log t\nD(pj , p∗) ,\nwhere, p∗ and pj are the reward density of the optimal arm and arm j respectively, and D is the KD-divergence. This lower bound does not contradict Theorem 6, as Theorem 6 only states a high probability upper bound for the regret. Note that UCB(δ) takes delta as its input. Because with probability δ, the regret in time t can be t, on expectation, the algorithm might have a regret of tδ. Now if we select δ = 1/t, then we get O(log t) upper bound on the expected regret."
    }, {
      "heading" : "5 Application to Least Squares Estimation and Linear Bandit Problem",
      "text" : "In this section we first apply Theorem 3 to derive confidence intervals for least-squares estimation, where the covariate process is an arbitrary process and then use these confidence intervals to improve the regret bound of Dani et al. (2008) for the linear bandit problem. In particular, our assumption on the data is as follows:\nAssumption A1 Let (Fi) be a filtration, (x1, y1), . . ., (xt, yt) be a sequence of random variables over Rd × R such that xi is Fi-measurable, and yi is Fi+1-measurable (i = 1, 2, . . .). Assume that there exists θ∗ ∈ Rd such that E [yi|Fi] = x⊤i θ∗, i.e., εi = yi − x⊤i θ∗ is a martingale difference sequence (E [εi|Fi] = 0, i = 1, 2, . . .) and that εi is sub-Gaussian: There exists R > 0 such that for any γ ∈ R,\nE [exp(γεi)|Fi−1] ≤ exp(γ2R2/2).\nWe shall call the random variables xi covariates and the random variables yi the responses. Note that the assumption allows any sequential generation of the covariates.\nLet θ̂t be the ℓ 2-regularized least-squares estimate of θ∗ with regularization parameter λ > 0:\nθ̂t = (X ⊤X + λI)−1X⊤Y, θ̂0 = 0, (16)\nwhere X is the matrix whose rows are x⊤1 , . . . , x ⊤ t−1 and Y = (y1, . . . , yt−1) ⊤. We further let ε = (ε1, . . . , εt−1) ⊤.\nWe are interested in deriving a confidence bound on the error of predicting the mean response\nx⊤θ∗ at an arbitrarily chosen random covariate x using the least-squares predictor x ⊤θ̂t. Using\nθ̂t = (X ⊤X + λI)−1X⊤(Xθ∗ + ε)\n= (X⊤X + λI)−1X⊤ε+ (X⊤X + λI)−1(X⊤X + λI)θ∗ − λ(X⊤X + λI)−1θ∗ = (X⊤X + λI)−1X⊤ε+ θ∗ − λ(X⊤X + λI)−1θ∗ ,\nwe get\nx⊤θ̂t − x⊤θ∗ = x⊤(X⊤X + λI)−1X⊤ε− λx⊤(X⊤X + λI)−1θ∗ = 〈x,X⊤ε〉V −1\nt − λ〈x, θ∗〉V −1 t ,\nwhere Vt = X ⊤X + λI. Note that Vt is positive definite (thanks to λ > 0) and hence so is V −1 t , so the above inner product is well-defined. Using the Cauchy-Schwartz inequality, we get\n|x⊤θ̂t − x⊤θ∗| ≤ ‖x‖V −1 t\n(\n∥ ∥X⊤ε ∥ ∥\nV −1 t + λ ‖θ∗‖V −1 t\n)\n≤ ‖x‖V −1 t\n(\n∥ ∥X⊤ε ∥ ∥\nV −1 t\n+ λ1/2 ‖θ∗‖ ) ,\nwhere we used that ‖θ∗‖2V −1 t ≤ 1/λmin(Vt) ‖θ∗‖2 ≤ 1/λ ‖θ∗‖2. Fix any 0 < δ < 1. By Corollary 1, with probability at least 1− δ,\n∀t ≥ 1, ∥ ∥X⊤ε ∥ ∥\nV −1 t\n≤ R √ 2 log ( det(Vt) 1/2 det(λI)−1/2\nδ\n)\n.\nTherefore, on the event where this inequality holds, one also has\n|x⊤θ̂t − x⊤θ∗| ≤ ‖x‖V −1 t\n(\nR\n√\n2 log\n(\ndet(Vt) 1/2 det(λI)−1/2\nδ\n) + λ1/2 ‖θ∗‖ ) .\nSimilarly, we can derive a worst-case bound. The result is summarized in the following statement:\nTheorem 8. Let (x1, y1), . . . , (xt−1, yt−1), xi ∈ Rd, yi ∈ R satisfy the linear model Assumption A1 with some R > 0, θ∗ ∈ Rd and let (Ft) be the associated filtration. Assume that w.p.1 the covariates satisfy ‖xi‖ ≤ L, i = 1, . . . , n and ‖θ∗‖ ≤ S. Consider the ℓ2-regularized least-squares parameter estimate θ̂n with regularization coefficient λ > 0 (cf. (16)). Let x be an arbitary, R d-valued random variable. Let Vt = λI+ ∑t−1 i=1 xix ⊤ i be the regularized design matrix underlying the covariates. Then, for any 0 < δ < 1, with probability at least 1− δ,\n∀t ≥ 1, |x⊤θ̂t − x⊤θ∗| ≤ ‖x‖V −1 t\n(\nR\n√\n2 log\n(\ndet(Vt) 1/2 det(λI)−1/2\nδ\n)\n+ λ1/2 S\n)\n. (17)\nSimilarly, with probability 1− δ,\n∀t ≥ 1, |x⊤θ̂t − x⊤θ∗| ≤ ‖x‖V −1 t\n\nR\n√ √ √ √d log (\n1 + tLλ δ\n)\n+ λ1/2 S\n\n . (18)\nRemark 9. We see that λ → ∞ increases the second term (the “bias term”) in the parenthesis of the estimate. In fact, λ → ∞ for n fixed gives λ1/2 ‖x‖V −1\nt → const (as it should be). Decreasing λ, on the other hand increases ‖x‖V −1\nt\nand the log term, while it decreases the bias term λ1/2S.\nFrom the above result, we immediately obtain confidence bounds for θ∗:\nCorollary 10. Under the condition of Theorem 8, with probability at least 1− δ,\n∀t ≥ 1, ∥ ∥ ∥ θ̂t − θ∗ ∥ ∥ ∥\nVt ≤ R\n√\n2 log\n(\ndet(Vt) 1/2 det(λI)−1/2\nδ\n)\n+ λ1/2 S.\nAlso, with probability at least 1− δ,\n∀t ≥ 1, ∥ ∥ ∥θ̂t − θ∗ ∥ ∥ ∥\nVt ≤ R\n√ √ √ √d log (\n1 + tLλ δ\n)\n+ λ1/2 S.\nProof. Plugging in x = Vt(θ̂t − θ∗) into (17), we get ∥\n∥ ∥θ̂t − θ∗ ∥ ∥ ∥ 2\nVt ≤\n∥ ∥ ∥Vt(θ̂t − θ∗) ∥ ∥ ∥\nV −1 t\n(\nR\n√\n2 log\n(\ndet(Vt) 1/2 det(λI)−1/2\nδ\n)\n+ λ1/2 S\n)\n. (19)\nNow, ∥ ∥ ∥Vt(θ̂t − θ∗) ∥ ∥ ∥ 2\nV −1 t\n= ∥ ∥ ∥θ̂t − θ∗ ∥ ∥ ∥ 2\nVt and therefore either\n∥ ∥ ∥θ̂t − θ∗ ∥ ∥ ∥\nVt = 0, in which case the con-\nclusion holds, or we can divide both sides of (19) by ∥ ∥ ∥θ̂t − θ∗ ∥ ∥ ∥\nVt to obtain the desired result.\nRemark 11. In fact, the theorem and the corollary are equivalent. To see this note that x⊤(θ̂t−θ∗) = (θ̂t − θ∗)⊤V 1/2t V −1/2t x, thus\nsup x 6=0 |x⊤(θ̂t − θ∗)| ‖x‖V −1\nt\n= ∥ ∥ ∥θ̂t − θ∗ ∥ ∥ ∥\nVt .\nRemark 12. The above bound could be compared with a similar bound of Dani et al. (2008) whose bound, under identical conditions, states that (with appropriate initialization) with probability 1−δ,\nfor all t large enough, ∥ ∥ ∥θ̂t − θ∗ ∥ ∥ ∥\nVt ≤ Rmax\n{ √\n128 d log(t) log\n(\nt2\nδ\n)\n, 8\n3 log\n(\nt2\nδ\n)\n}\n, (20)\nwhere large enough means that t satisfies 0 < δ < t2e−1/16. Denote by √\nβt(δ) the right-hand side in the above bound. The restriction on t comes from the fact that βt(δ) ≥ 2d(1 + 2 log(t)) is needed in the proof of the last inequality of their Theorem 5.\nOn the other hand, Theorem 2 gives rise to the following result: For any fixed t ≥ 2, for any 0 < δ < 1, with probability at least 1− δ,\n∥ ∥ ∥θ̂t − θ∗ ∥ ∥ ∥\nVt ≤ 2 κ2R\n√ log t √ d log(t) + log(1/δ) + λ1/2S ,\nwhere κ is as in Theorem 2. To get a uniform bound one can use a union bound with δt = δ/t 2. Then ∑∞\nt=2 δt = δ( π2 6 − 1) ≤ δ. This thus gives that for any 0 < δ < 1, with probability at least 1− δ,\nfor all t ≥ 2, ∥ ∥ ∥θ̂t − θ∗ ∥ ∥ ∥\nVt ≤ 2 κ2R\n√ log t √ d log(t) + log(t2/δ) + λ1/2S ,\nThis looks tighter than (20), but is still lagging beyond the result of Corollary 10."
    }, {
      "heading" : "5.1 The Linear Bandit Problem",
      "text" : "We now turn our attention to the linear bandit problem. Assume the actions lie in D ⊂ Rd and for any x ∈ D, ‖x‖2 ≤ L. Assume the reward of taking action x ∈ D has the form of\nht(x) = θ ⊤ ∗ x+ ηt\nand assume ∀x ∈ D, θ⊤∗ x ∈ [−1, 1]. Define the regret by\nR(T ) =\nT ∑\nt=1\n(θ⊤∗ x∗ − θ⊤∗ xt),\nwhere x∗ is the optimal action (x∗ = argmaxx∈D θ ⊤ ∗ x). Define the confidence set\nCt(δ) = { θ : (θ − θ̂t)⊤Vt(θ − θ̂t) ≤ βt(δ) } , (21)\nwhere\nβt(δ) =\n(\nR\n√\n2 log\n(\ndet(Vt) 1/2 det(λI)−1/2\nδ\n)\n+ λ1/2 S\n)2\n.\nConsider the ConfidenceBall algorithm of Dani et al. (2008). We use the confidence intervals (21)\nand change the action selection rule accordingly. Hence, at time t, we define θ̃t and xt by the following equation:\n(θ̃t, xt) = argmax (θ,x)∈Ct(δ)×D\nθ⊤x. (22)\nThe algorithm is shown in Table 1.\nTheorem 13. With probability at least 1 − δ, the regret of the Linear Bandit Algorithm shown in Table 1 satisfies\n∀T ≥ 1, R(T ) ≤ 4 √ Td log(λ+ TL/d) ( λ1/2S +R √ 2 log 1/δ + d log(1 + TL/(λd)) ) .\nProof. Lets decompose the instantaneous regret as follows:\nrt = θ ⊤ ∗ x∗ − θ⊤∗ xt\n≤ θ̃⊤t xt − θ⊤∗ xt = (θ̃t − θ∗)⊤xt = (θ̂t − θ∗)⊤xt + (θ̃t − θ̂t)⊤xt ≤ √\nβt(δ) ‖xt‖V −1 t , (23)\nwhere the last step holds by Cauchy-Schwarz. Using (23) and the fact that rt ≤ 2, we get that rt ≤ 2min( √\nβt(δ) ‖xt‖2V −1 t , 1) ≤ 2 √ βt(δ)min(‖xt‖2V −1 t , 1).\nThus, with probability at least 1− δ, ∀T ≥ 1\nR(T ) ≤\n√ √ √ √T T ∑\nt=1\nr2t ≤\n√ √ √ √8βTT T ∑\nt=1\nmin(w2t , 1) ≤ 4 √ βTT log(det(VT ))\n≤ 4 √ Td log(λ+ tL/d) ( λ1/2S +R √ 2 log 1/δ + d log(1 + tL/(λd)) ) .\nwhere the last two steps follow from Lemma 4."
    }, {
      "heading" : "5.2 Saving Computation",
      "text" : "The action selection rule (22) is NP-hard in general (Dani et al., 2008). In this section, we show that we essentially need to solve this problem only O(log t) times up to time t and hence saving computations. Algorithm 2 achieves this objective by changing its policy only when the volume of the confidence set is halved and still enjoyes almost the same regret bound as for Algorithm 1.\nTheorem 14. With probability at least 1 − δ, ∀T ≥ 1, the regret of the Linear Bandit Algorithm shown in Table 2 satisfies\nR(T ) ≤ 4 √ 2Td log(λ+ TL/d) ( λ1/2S +R √ 2 log 1/δ + d log(1 + TL/(λd)) ) + 4 √ d log(T/d).\nFirst, we prove the following lemma:\nLemma 15. Let A, B and C be positive semi-definite matrices such that A = B + C. Then, we have that\nsup x 6=0\nx⊤Ax\nx⊤Bx ≤ det(A) det(B) .\nProof. We consider first a simple case. Let A = B + mm⊤, B positive definite. Let x 6= 0 be an arbitrary vector. Using the Cauchy-Schwartz inequality, we get\n(x⊤m)2 = (x⊤B1/2B−1/2m)2 ≤ ∥ ∥ ∥B1/2x ∥ ∥ ∥ 2 ∥ ∥ ∥B−1/2m ∥ ∥ ∥ 2\n= ‖x‖2B ‖m‖ 2 B−1 .\nThus,\nx⊤(B +mm⊤)x ≤ x⊤Bx+ ‖x‖2B ‖m‖ 2 B−1 = (1 + ‖m‖ 2 B−1) ‖x‖ 2 B\nand so\nx⊤Ax x⊤Bx ≤ 1 + ‖m‖2B−1 .\nWe also have that\ndet(A) = det(B +mm⊤) = det(B) det(I +B−1/2m(B−1/2m)⊤) = det(B)(1 + ‖m‖2B−1),\nthus finishing the proof of this case. If A = B +m1m ⊤ 1 + · · ·+mt−1m⊤t−1, then define Vs = B +m1m⊤1 + · · ·+ms−1m⊤s−1 and use\nx⊤Ax x⊤Bx = x⊤Vtx x⊤Vt−1x x⊤Vt−1x x⊤Vt−2x . . . x⊤V2x x⊤Bx .\nBy the above argument, since all the terms are positive, we get\nx⊤Ax\nx⊤Bx ≤ det(Vt)\ndet(Vt−1)\ndet(Vt−1) det(Vt−2) . . . det(V2) det(B) = det(Vt) det(B) = det(A) det(B) .\nThis finishes the proof of this case. Now, if C is a positive definite matrix, then the eigendecomposition of C gives C = U⊤ΛU , where U is orthonormal and Λ is positive diagonal matrix. This, in fact gives that C can be written as the sum of at most d rank-one matrices, finishing the proof for the general case.\nProof of Theorem 14. Let τt be the smallest timestep ≤ t such that xt = xτt . By an argument similar to the one used in Theorem 13, we have\nrt ≤ (θ̂τt − θ∗)⊤xt + (θ̃τt − θ̂τt)⊤xt.\nWe also have that for all θ ∈ Cτt and x, ∣\n∣ ∣(θ − θ̂τt)⊤x ∣ ∣ ∣ ≤ ∥ ∥ ∥V 1/2 t (θ − θ̂τ ) ∥ ∥ ∥\n√\nx⊤V −1t x\n≤ ∥ ∥ ∥V 1/2τt (θ − θ̂τt) ∥ ∥ ∥\n√\ndet(Vt)\ndet(Vτt)\n√\nx⊤V −1t x\n≤ √ 2 ∥ ∥\n∥V 1/2τt (θ − θ̂τ ) ∥ ∥ ∥\n√\nx⊤V −1t x\n≤ √\n2βτt\n√\nx⊤V −1t x,\nwhere the second step follows from Lemma 15, and the third step follows from the fact that at time t we have det(Vt) < 2 det(Vτt). The rest of the argument is identical to that of Theorem 13. We conclude that with probability at least 1− δ, ∀T ≥ 1,\nR(T ) ≤ 4 √ 2Td log(λ+ tL/d) ( λ1/2S +R √ 2 log 1/δ + d log(1 + tL/(λd)) ) ."
    }, {
      "heading" : "5.3 Problem Dependent Bound (∆ > 0)",
      "text" : "Let ∆ be as defined in (Dani et al., 2008). In this section we assume that ∆ > 0. This includes the case when the action set is a polytope. First we state a matrix perturbation theorem from Stewart and Sun (1990) that will be used later.\nTheorem 16 (Stewart and Sun (1990), Corollary 4.9). Let A be a symmetric matrix with eigenvalues ν1 ≥ ν2 ≥ . . . ≥ νd, E be a symmetric matrix with eigenvalues e1 ≥ e2 ≥ . . . ≥ ed, and V = A+E denote a symmetric perturbation of A such that the eigenvalues of V are ν̃1 ≥ ν̃2 ≥ . . . ≥ ν̃d. Then, for i = 1, . . . , d, ν̃i ∈ [νi + ed, νi + e1]. Theorem 17. Assume that ∆ > 0 for the gap ∆ defined in (Dani et al., 2008). Further assume that λ ≥ 1 and S ≥ 1. With probability at least 1 − δ, ∀T ≥ 1, the regret of the algorithm shown in Table 1 satisfies\nR(T ) = 16R2λS2\n∆\n(\nlog(LT ) + (d− 1) log 64R 2λS2L\n∆2 + 2(d− 1) log\n(\nd log dλ+ TL2\nd + 2 log(1/δ)\n)\n+ 2 log(1/δ)\n)2\n.\nProof. First we bound the regret in terms of log det(VT ). We have that\nR(T ) =\nT ∑\nt=1\nrt ≤ T ∑\nt=1\nr2t ∆ ≤ 16βT ∆ log(det(VT )), (24)\nwhere the first inequality follows from the fact that either rt = 0 or ∆ < rt, and the second inequality can be extracted from the proof of Theorem 13. Let bt be the number of times we have played a suboptimal action (an action xs for which θ ⊤ ∗ x∗ − θ⊤∗ xs ≥ ∆) up to time t. Next we bound log det(Vt) in terms of bt. We bound the eigenvalues of Vt by using Theorem 16. Let Et =\n∑t s:xs 6=x∗ xsx ⊤ s and At = Vt − Et = (t − bt)x∗x⊤∗ . The only non-zero eigenvalue of\n(t− bt)x∗x⊤∗ is (t− bt)L∗, where L∗ = x⊤∗ x∗ ≤ L. Let the eigenvalues of Vt and Et be λ1 ≥ · · · ≥ λd and e1 ≥ · · · ≥ ed respectively. By Theorem 16, we have that\nλ1 ∈ [(t− bt)L∗ + ed, (t− bt)L∗ + e1] and ∀i ∈ {2, . . . , d}, λi ∈ [ed, e1]. Thus,\ndet(Vt) =\nd ∏\ni\nλi ≤ ((t− bt)L∗ + e1)ed−11 ≤ ((t− bt)L+ e1)ed−11 .\nTherefore, log det(Vt) ≤ log((t− bt)L + e1) + (d− 1) log e1. Because trace(E) = ∑t\ns:xs 6=x∗ trace(xsx ⊤ s ) ≤ Lbt, we conclude that e1 ≤ Lbt. Thus,\nlog det(Vt) ≤ log((t− bt)L+ Lbt) + (d− 1) log(Lbt) = log(Lt) + (d− 1) log(Lbt). (25)\nWith some calculations, we can show that\nβt log detVt ≤ 4R2λS2(2 log(1/δ) + log detVt)2 ≤ 4R2λS2 ( d log dλ+ tL2\nd + 2 log\n1\nδ\n)2\n, (26)\nwhere the second inequality follows from Lemma 4. Hence,\nbt ≤ 16βt ∆2 log(det(Vt)) ≤ 64R2λS2 ∆2\n(\nd log dλ+ tL2\nd + 2 log\n1\nδ\n)2\n, (27)\nwhere the first inequality follows from R(t) ≥ bt∆. Thus, with probability 1− δ, ∀T ≥ 1,\nR(T ) ≤ 16βT ∆ log(det(VT ))\n≤ 64R 2λS2\n∆ (log(det(VT )) + 2 log(1/δ))\n2\n≤ 16R 2λS2\n∆ (log(LT ) + (d− 1) log(LbT ) + 2 log(1/δ))2\n≤ 16R 2λS2\n∆\n(\nlog(LT ) + (d− 1) log 64R 2λS2L\n∆2 + 2(d− 1) log\n(\nd log dλ+ TL2\nd + 2 log(1/δ)\n)\n+ 2 log(1/δ)\n)2\n,\nwhere the first step follows from (24), the second step follows from the first inequality in (26), the third step follows from (25), and the last step follows from the second inequality in (27).\nRemark 18. The problem dependent regret of (Dani et al., 2008) scales like O(d 2 ∆ log 3 T ), while our bound scales like O( 1∆(log 2 T + d logT + d2 log logT ))."
    } ],
    "references" : [ {
      "title" : "Active learning in heteroscedastic noise",
      "author" : [ "A. Antos", "V. Grover", "Cs. Szepesvári" ],
      "venue" : "Theoretical Computer Science,",
      "citeRegEx" : "Antos et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Antos et al\\.",
      "year" : 2010
    }, {
      "title" : "Online optimization in X-armed bandits",
      "author" : [ "S. Bubeck", "R. Munos", "G. Stoltz", "Cs. Szepesvári" ],
      "venue" : "Learning Research,",
      "citeRegEx" : "Bubeck et al\\.,? \\Q2003\\E",
      "shortCiteRegEx" : "Bubeck et al\\.",
      "year" : 2003
    }, {
      "title" : "Stochastic linear optimization under bandit feedback",
      "author" : [ "V. Dani", "T.P. Hayes", "S.M. Kakade" ],
      "venue" : "Annals of Probability,",
      "citeRegEx" : "Dani et al\\.,? \\Q2006\\E",
      "shortCiteRegEx" : "Dani et al\\.",
      "year" : 2006
    }, {
      "title" : "Self-normalized processes: Limit theory and Statistical Applications",
      "author" : [ "V.H. de la Peña", "T.L. Lai", "Q.-M. Shao" ],
      "venue" : "The Annals of Probability,",
      "citeRegEx" : "Peña et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Peña et al\\.",
      "year" : 2009
    }, {
      "title" : "Asymptotically efficient adaptive allocation rules",
      "author" : [ "T.L. Lai", "H. Robbins" ],
      "venue" : "Advances in Applied Mathematics,",
      "citeRegEx" : "Lai and Robbins.,? \\Q2008\\E",
      "shortCiteRegEx" : "Lai and Robbins.",
      "year" : 2008
    }, {
      "title" : "Strong consistency of least squares estimates in multiple regression",
      "author" : [ "T.L. Lai", "H. Robbins", "C.Z. Wei" ],
      "venue" : "Proceedings of the National Academy of Sciences,",
      "citeRegEx" : "Lai et al\\.,? \\Q1979\\E",
      "shortCiteRegEx" : "Lai et al\\.",
      "year" : 1979
    } ],
    "referenceMentions" : [ {
      "referenceID" : 2,
      "context" : "In the case of linear bandits (Dani et al., 2008), we improve the problem dependent bound in the dimension and number of time steps. Furthermore, as opposed to the previous result, we prove that our bound holds for small sample sizes, and at the same time the worst case bound is improved by a logarithmic factor and the constant is improved. 1 Introduction The least squares method forms a cornerstone of statistics and machine learning. It is used as the main component of many stochastic sequential decision problems, such as multi-armed bandit, linear bandits, and other linear control problems. However, the analysis of least squares in these online settings is non-trivial because of the correlations between data points. Fortunately, there is a connection between online least squares estimation and the area of self-normalized processes. Study of self-normalized processes has a long history that goes back to Student and is treated in detail in recent book by de la Peña et al. (2009). Using these tools we provide a proof of a bound on the deviation for vector-valued martingales.",
      "startOffset" : 31,
      "endOffset" : 994
    }, {
      "referenceID" : 2,
      "context" : "In the case of linear bandits (Dani et al., 2008), we improve the problem dependent bound in the dimension and number of time steps. Furthermore, as opposed to the previous result, we prove that our bound holds for small sample sizes, and at the same time the worst case bound is improved by a logarithmic factor and the constant is improved. 1 Introduction The least squares method forms a cornerstone of statistics and machine learning. It is used as the main component of many stochastic sequential decision problems, such as multi-armed bandit, linear bandits, and other linear control problems. However, the analysis of least squares in these online settings is non-trivial because of the correlations between data points. Fortunately, there is a connection between online least squares estimation and the area of self-normalized processes. Study of self-normalized processes has a long history that goes back to Student and is treated in detail in recent book by de la Peña et al. (2009). Using these tools we provide a proof of a bound on the deviation for vector-valued martingales. A less general version of the bound can be found already in de la Peña et al. (2004, 2009). Additionally our proof, based on the method of mixtures, is new, simpler and self-contained. The bound improves the previous bound of Rusmevichientong and Tsitsiklis (2010) and it is applicable to virtually any online least squares problem.",
      "startOffset" : 31,
      "endOffset" : 1356
    }, {
      "referenceID" : 2,
      "context" : "In the case of linear bandits (Dani et al., 2008), we improve the problem dependent bound in the dimension and number of time steps. Furthermore, as opposed to the previous result, we prove that our bound holds for small sample sizes, and at the same time the worst case bound is improved by a logarithmic factor and the constant is improved. 1 Introduction The least squares method forms a cornerstone of statistics and machine learning. It is used as the main component of many stochastic sequential decision problems, such as multi-armed bandit, linear bandits, and other linear control problems. However, the analysis of least squares in these online settings is non-trivial because of the correlations between data points. Fortunately, there is a connection between online least squares estimation and the area of self-normalized processes. Study of self-normalized processes has a long history that goes back to Student and is treated in detail in recent book by de la Peña et al. (2009). Using these tools we provide a proof of a bound on the deviation for vector-valued martingales. A less general version of the bound can be found already in de la Peña et al. (2004, 2009). Additionally our proof, based on the method of mixtures, is new, simpler and self-contained. The bound improves the previous bound of Rusmevichientong and Tsitsiklis (2010) and it is applicable to virtually any online least squares problem. The bound that we derive, gives immediately rise to tight confidence sets for the online least squares estimate that can replace the confidence sets in existing algorithms. In particular, the confidence sets can be used in the UCB algorithm for the multi-armed bandit problem, the ConfidenceBall algorithm of Dani et al. (2008) for the linear bandit problem, and LinRel algorithm of Auer (2003) for the associative reinforcement learning problem.",
      "startOffset" : 31,
      "endOffset" : 1752
    }, {
      "referenceID" : 2,
      "context" : "In the case of linear bandits (Dani et al., 2008), we improve the problem dependent bound in the dimension and number of time steps. Furthermore, as opposed to the previous result, we prove that our bound holds for small sample sizes, and at the same time the worst case bound is improved by a logarithmic factor and the constant is improved. 1 Introduction The least squares method forms a cornerstone of statistics and machine learning. It is used as the main component of many stochastic sequential decision problems, such as multi-armed bandit, linear bandits, and other linear control problems. However, the analysis of least squares in these online settings is non-trivial because of the correlations between data points. Fortunately, there is a connection between online least squares estimation and the area of self-normalized processes. Study of self-normalized processes has a long history that goes back to Student and is treated in detail in recent book by de la Peña et al. (2009). Using these tools we provide a proof of a bound on the deviation for vector-valued martingales. A less general version of the bound can be found already in de la Peña et al. (2004, 2009). Additionally our proof, based on the method of mixtures, is new, simpler and self-contained. The bound improves the previous bound of Rusmevichientong and Tsitsiklis (2010) and it is applicable to virtually any online least squares problem. The bound that we derive, gives immediately rise to tight confidence sets for the online least squares estimate that can replace the confidence sets in existing algorithms. In particular, the confidence sets can be used in the UCB algorithm for the multi-armed bandit problem, the ConfidenceBall algorithm of Dani et al. (2008) for the linear bandit problem, and LinRel algorithm of Auer (2003) for the associative reinforcement learning problem.",
      "startOffset" : 31,
      "endOffset" : 1819
    }, {
      "referenceID" : 2,
      "context" : "In the case of linear bandits (Dani et al., 2008), we improve the problem dependent bound in the dimension and number of time steps. Furthermore, as opposed to the previous result, we prove that our bound holds for small sample sizes, and at the same time the worst case bound is improved by a logarithmic factor and the constant is improved. 1 Introduction The least squares method forms a cornerstone of statistics and machine learning. It is used as the main component of many stochastic sequential decision problems, such as multi-armed bandit, linear bandits, and other linear control problems. However, the analysis of least squares in these online settings is non-trivial because of the correlations between data points. Fortunately, there is a connection between online least squares estimation and the area of self-normalized processes. Study of self-normalized processes has a long history that goes back to Student and is treated in detail in recent book by de la Peña et al. (2009). Using these tools we provide a proof of a bound on the deviation for vector-valued martingales. A less general version of the bound can be found already in de la Peña et al. (2004, 2009). Additionally our proof, based on the method of mixtures, is new, simpler and self-contained. The bound improves the previous bound of Rusmevichientong and Tsitsiklis (2010) and it is applicable to virtually any online least squares problem. The bound that we derive, gives immediately rise to tight confidence sets for the online least squares estimate that can replace the confidence sets in existing algorithms. In particular, the confidence sets can be used in the UCB algorithm for the multi-armed bandit problem, the ConfidenceBall algorithm of Dani et al. (2008) for the linear bandit problem, and LinRel algorithm of Auer (2003) for the associative reinforcement learning problem. We show that this leads to improved performance of these algorithms. Our hope is that the new confidence sets can be used to improve the performance of other similar linear decision problems. The multi-armed bandit problem, introduced by Robbins (1952), is a game between the learner and the environment.",
      "startOffset" : 31,
      "endOffset" : 2124
    }, {
      "referenceID" : 3,
      "context" : "Lai and Robbins (1985) prove a ( ∑ i6=i∗ 1/D(pj, pi∗) − o(1)) logT lower bound on the expected regret of any algorithm, where T is the number of time steps, pi∗ and pi are the reward distributions of the optimal arm and arm i respectively, and D is the KL-divergence.",
      "startOffset" : 0,
      "endOffset" : 23
    }, {
      "referenceID" : 3,
      "context" : "Lai and Robbins (1985) prove a ( ∑ i6=i∗ 1/D(pj, pi∗) − o(1)) logT lower bound on the expected regret of any algorithm, where T is the number of time steps, pi∗ and pi are the reward distributions of the optimal arm and arm i respectively, and D is the KL-divergence. Auer et al. (2002) designed the UCB algorithm and proved a finite-time logarithmic bound on its regret.",
      "startOffset" : 0,
      "endOffset" : 287
    }, {
      "referenceID" : 3,
      "context" : "Lai and Robbins (1985) prove a ( ∑ i6=i∗ 1/D(pj, pi∗) − o(1)) logT lower bound on the expected regret of any algorithm, where T is the number of time steps, pi∗ and pi are the reward distributions of the optimal arm and arm i respectively, and D is the KL-divergence. Auer et al. (2002) designed the UCB algorithm and proved a finite-time logarithmic bound on its regret. He used Hoeffding’s inequality to construct confidence intervals and obtained a O((K log T )/∆) bound on the expected regret, where ∆ is the difference between the expected rewards of the best and the second best action. We modify UCB so that it uses our new confidence sets and we show a stronger result. Namely, we show that with probability 1 − δ, the regret of the modified algorithm is O(K log(1/δ)/∆). Seemingly, this result contradicts the lower bound of Lai and Robbins (1985), however our algorithm depends on δ which it receives as an input.",
      "startOffset" : 0,
      "endOffset" : 857
    }, {
      "referenceID" : 2,
      "context" : "Dani et al. (2008) proposed theConfidenceBall algorithm and showed that its regret is at mostO(d log(T ) √ T log(T/δ)) with probability at most 1 − δ.",
      "startOffset" : 0,
      "endOffset" : 19
    }, {
      "referenceID" : 2,
      "context" : "Dani et al. (2008) proposed theConfidenceBall algorithm and showed that its regret is at mostO(d log(T ) √ T log(T/δ)) with probability at most 1 − δ. We modify their algorithm so that it uses our new confidence sets and we show that its regret is at most O(d log(T ) √ T + √ dT log(T/δ)). Additionally, constants in our bound are smaller, and our bound holds for all T ≥ 1, as opposed the previous one which holds only for sufficiently large T . Dani et al. (2008) prove also a problem dependent regret bound.",
      "startOffset" : 0,
      "endOffset" : 466
    }, {
      "referenceID" : 2,
      "context" : "Most of this argument can be extracted from the paper of Dani et al. (2008). However, the idea goes back at least to Lai et al.",
      "startOffset" : 57,
      "endOffset" : 76
    }, {
      "referenceID" : 2,
      "context" : "Most of this argument can be extracted from the paper of Dani et al. (2008). However, the idea goes back at least to Lai et al. (1979), Lai and Wei (1982) (a similar argument is used around Theorem 11.",
      "startOffset" : 57,
      "endOffset" : 135
    }, {
      "referenceID" : 2,
      "context" : "Most of this argument can be extracted from the paper of Dani et al. (2008). However, the idea goes back at least to Lai et al. (1979), Lai and Wei (1982) (a similar argument is used around Theorem 11.",
      "startOffset" : 57,
      "endOffset" : 155
    }, {
      "referenceID" : 2,
      "context" : "Most of this argument can be extracted from the paper of Dani et al. (2008). However, the idea goes back at least to Lai et al. (1979), Lai and Wei (1982) (a similar argument is used around Theorem 11.7 in the book by Cesa-Bianchi and Lugosi (2006)).",
      "startOffset" : 57,
      "endOffset" : 249
    }, {
      "referenceID" : 2,
      "context" : "Most of this argument can be extracted from the paper of Dani et al. (2008). However, the idea goes back at least to Lai et al. (1979), Lai and Wei (1982) (a similar argument is used around Theorem 11.7 in the book by Cesa-Bianchi and Lugosi (2006)). Note that Lemmas B.9–B.11 of Rusmevichientong and Tsitsiklis (2010) also give a bound on ∑t k=1 ‖mk−1‖ 2 V −1 k−1 , with an essentially identical argument.",
      "startOffset" : 57,
      "endOffset" : 319
    }, {
      "referenceID" : 2,
      "context" : "Most of this argument can be extracted from the paper of Dani et al. (2008). However, the idea goes back at least to Lai et al. (1979), Lai and Wei (1982) (a similar argument is used around Theorem 11.7 in the book by Cesa-Bianchi and Lugosi (2006)). Note that Lemmas B.9–B.11 of Rusmevichientong and Tsitsiklis (2010) also give a bound on ∑t k=1 ‖mk−1‖ 2 V −1 k−1 , with an essentially identical argument. Alternatively, one can use the bounding technique of Auer (2003) (see the proof of Lemma 13 there on pages 412–413) to derive a bound like ∑t k=1 ‖mk−1‖ 2 V −1 k−1 ≤ Cd log t for a suitable chosen constant C > 0.",
      "startOffset" : 57,
      "endOffset" : 472
    }, {
      "referenceID" : 3,
      "context" : "Note that the log(t) factor cannot be removed, as shown by Problem 3, page 203 in the book by de la Peña et al. (2009). 3 Optional Skipping Consider the case when d = 1, mk = εk ∈ {0, 1}, i.",
      "startOffset" : 100,
      "endOffset" : 119
    }, {
      "referenceID" : 1,
      "context" : ", the paper of Bubeck et al. (2008)), we would get, for any 0 < δ < 1, t ≥ 2, with probability 1− δ, ∀s ∈ {0, .",
      "startOffset" : 15,
      "endOffset" : 36
    }, {
      "referenceID" : 1,
      "context" : "in the paper of Bubeck et al. (2008) to improve the computational complexity of the HOO algorithm.",
      "startOffset" : 16,
      "endOffset" : 37
    }, {
      "referenceID" : 1,
      "context" : "in the paper of Bubeck et al. (2008) to improve the computational complexity of the HOO algorithm. Also, the coefficient of the leading term in (11) under the square root is 1, whereas in (12) it is 2. Instead of a union bound, it is possible to use a “peeling device” to replace the conservative log t factor in the above bound by essentially log log t. This is done e.g. in Garivier and Moulines (2008) in their Theorem 22.",
      "startOffset" : 16,
      "endOffset" : 405
    }, {
      "referenceID" : 0,
      "context" : "By using Lemma 8 of Antos et al. (2010), we get that Ni,s ≤ 3 + 16 ∆i log 2K ∆iδ .",
      "startOffset" : 20,
      "endOffset" : 40
    }, {
      "referenceID" : 3,
      "context" : "Lai and Robbins (1985) prove that for any suboptimal arm j, E [Ni,t] ≥ log t D(pj , p∗) , where, p∗ and pj are the reward density of the optimal arm and arm j respectively, and D is the KD-divergence.",
      "startOffset" : 0,
      "endOffset" : 23
    }, {
      "referenceID" : 2,
      "context" : "5 Application to Least Squares Estimation and Linear Bandit Problem In this section we first apply Theorem 3 to derive confidence intervals for least-squares estimation, where the covariate process is an arbitrary process and then use these confidence intervals to improve the regret bound of Dani et al. (2008) for the linear bandit problem.",
      "startOffset" : 293,
      "endOffset" : 312
    }, {
      "referenceID" : 2,
      "context" : "The above bound could be compared with a similar bound of Dani et al. (2008) whose bound, under identical conditions, states that (with appropriate initialization) with probability 1−δ, for all t large enough, ∥",
      "startOffset" : 58,
      "endOffset" : 77
    }, {
      "referenceID" : 2,
      "context" : "Consider the ConfidenceBall algorithm of Dani et al. (2008). We use the confidence intervals (21) and change the action selection rule accordingly.",
      "startOffset" : 41,
      "endOffset" : 60
    }, {
      "referenceID" : 2,
      "context" : "3 Problem Dependent Bound (∆ > 0) Let ∆ be as defined in (Dani et al., 2008). In this section we assume that ∆ > 0. This includes the case when the action set is a polytope. First we state a matrix perturbation theorem from Stewart and Sun (1990) that will be used later.",
      "startOffset" : 58,
      "endOffset" : 247
    }, {
      "referenceID" : 2,
      "context" : "3 Problem Dependent Bound (∆ > 0) Let ∆ be as defined in (Dani et al., 2008). In this section we assume that ∆ > 0. This includes the case when the action set is a polytope. First we state a matrix perturbation theorem from Stewart and Sun (1990) that will be used later. Theorem 16 (Stewart and Sun (1990), Corollary 4.",
      "startOffset" : 58,
      "endOffset" : 307
    } ],
    "year" : 2011,
    "abstractText" : "We improve the regret bound of the Upper Confidence Bound (UCB) algorithm of Auer et al. (2002) and show that its regret is with high-probability a problem dependent constant. In the case of linear bandits (Dani et al., 2008), we improve the problem dependent bound in the dimension and number of time steps. Furthermore, as opposed to the previous result, we prove that our bound holds for small sample sizes, and at the same time the worst case bound is improved by a logarithmic factor and the constant is improved.",
    "creator" : "LaTeX with hyperref package"
  }
}