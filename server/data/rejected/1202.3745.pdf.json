{
  "name" : "1202.3745.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Order-of-Magnitude Influence Diagrams",
    "authors" : [ "Radu Marinescu", "Nic Wilson" ],
    "emails" : [ "radu.marinescu@ie.ibm.com", "n.wilson@4c.ucc.ie" ],
    "sections" : [ {
      "heading" : null,
      "text" : "In this paper, we develop a qualitative theory of influence diagrams that can be used to model and solve sequential decision making tasks when only qualitative (or imprecise) information is available. Our approach is based on an orderof-magnitude approximation of both probabilities and utilities and allows for specifying partially ordered preferences via sets of utility values. We also propose a dedicated variable elimination algorithm that can be applied for solving order-of-magnitude influence diagrams."
    }, {
      "heading" : "1 INTRODUCTION",
      "text" : "Influence diagrams have been widely used for the past three decades as a graphical model to formulate and solve decision problems under uncertainty. The standard formulation of an influence diagram consists of two types of information: qualitative information that defines the structure of the problem eg, the set of (discrete) chance variables describing the set of possible world configurations, the set of available decisions, as well as the dependencies between the variables, and quantitative information (also known as the parametric structure) that, together with the qualitative information, defines the model. The parametric structure is composed of the conditional probability distributions as well as the utility functions describing the decision maker’s preferences. In general, the solution to an influence diagram depends on both types of information. Quite often, however, we may have precise knowledge of the qualitative information but only very rough (or imprecise) estimates of the quantitative parameters. In such cases, the standard solution techniques cannot be applied directly, unless the missing information is accounted for.\nIn this paper, we propose a qualitative theory for influence\n∗This work was supported in part by the Science Foundation Ireland under grant no. 08/PI/I1912\ndiagrams in which such partially specified sequential decision problems can be modeled and solved. In particular, we introduce the order-of-magnitude influence diagram model that uses an order-of-magnitude representation of the probabilities and utilities. The model allows the decision maker to specify partially ordered preferences via finite sets of utility values. In this case, there will typically not be a unique maximal value of the expected utility, but rather a set of them. To compute this set and also the corresponding decision policy we propose a dedicated variable elimination algorithm that performs efficient operations on sets of utility values. Numerical experiments on selected classes of influence diagrams show that as the quantitative information becomes more precise, the qualitative decision process becomes closer to the standard one.\nThe paper is organized as follows. Section 2 gives background on influence diagrams. In Section 3 we present the order-of-magnitude calculus as a representation framework for imprecise probabilities and utilities. Sections 4 and 5 describe the main operations over sets of order-ofmagnitude values and introduce the order-of-magnitude influence diagram model. In Section 6 we present the results of our empirical evaluation. Section 7 overviews related work, while Section 8 provides concluding remarks."
    }, {
      "heading" : "2 INFLUENCE DIAGRAMS",
      "text" : "An influence diagram is defined by a tuple 〈X,D,U, G〉, where X = {X1, . . . , Xn} is a set of oval-shaped nodes labeled by the chance variables which specify the uncertain decision environment, D = {D1, . . . , Dm} is a set of rectangle-shaped nodes labeled by the decision variables which specify the possible decisions to be made in the domain, U = {U1, . . . , Ur} are diamond-shaped nodes labeled by the utility functions which represent the preferences of the decision maker, and G is a directed acyclic graph containing all the nodes X ∪ D ∪ U. As in belief networks, each chance variable Xi ∈ X is associated with a conditional probability table (CPT) Pi = P (Xi|pa(Xi)), where pa(Xi) ⊆ X ∪ D \\ {Xi} are the parents of Xi in\nG. Similarly, each decision variable Dk ∈ D has a parent set pa(Dk) ⊆ X ∪D \\ {Dk} in G, denoting the variables whose values will be known at the time of the decision and may affect directly the decision. Non-forgetting is typically assumed for an influence diagram, meaning that a decision node and its parents are parents to all subsequent decisions. Finally, each utility node Uj ∈ U is associated with a utility function that depends only on the parents pa(Uj) of Uj .\nThe decision variables in an influence diagram are typically assumed to be temporally ordered. Let D1, D2, ..., Dm be the order in which the decisions are to be made. The chance variables can be partitioned into a collection of disjoint sets I0, I1, . . . , Im. For each k, where 0 < k < m, Ik is the set of chance variables that are observed between Dk and Dk+1. I0 is the set of initial evidence variables that are observed before the first D1. Im is the set of chance variables left unobserved when the last decision Dm is made. This induces a partial order ≺ over X ∪ D, as follows: I0 ≺ D1 ≺ I1 ≺ · · · ≺ Dm ≺ Im [5].\nA decision policy (or strategy) for an influence diagram is a list of decision rules ∆ = (δ1, . . . , δm) consisting of one rule for each decision variable. A decision rule for the decision Dk ∈ D is a mapping δk : Ωpa(Dk) → ΩDk , where for a set S ⊆ X ∪ D, ΩS is the Cartesian product of the individual domains of the variables in S. Solving an influence diagram is to find the optimal decision policy that maximizes the expected utility. The maximum expected utility (MEU) is equal to:\n∑\nI0\nmax D1\n· · · ∑\nIm−1\nmax Dm\n∑\nIm\n\n\nn ∏\ni=1\nPi × r ∑\nj=1\nUj\n\n (1)\nExample 1 For illustration, consider the influence diagram displayed in Figure 1 which is based on the classic oil wildcatter decision problem [9]. An oil wildcatter must decide either to drill or not to drill for oil at a specific site.\nThe wildcatter could do a seismic test that will help determine the geological structure of the site. The test results can show a closed reflection pattern (indication of significant oil), an open pattern (indication of some oil), or a diffuse pattern (almost no hope of oil). The probabilistic knowledge consists of the CPTs P (O) and P (S|O, T ), while the utility function is the sum of U1(T ) and U2(D,O). The optimal policy is to perform the seismic test and to drill only if the test results show an open or a closed pattern. The maximum expected utility of this policy is 42.75.\nVariable Elimination Several exact methods have been proposed over the past decades for solving influence diagrams using local computations [10, 13, 11, 5, 3, 8]. These methods adapted classical variable elimination techniques, which compute a type of marginalization over a combination of local functions, in order to handle the multiple types of information (probabilities and utilities), marginalization ( ∑\nand max) and combination (× for probabilities, + for utilities) involved in influence diagrams. Since the alternation of ∑\nand max in Eq. 1 does not commute in general, it prevents the solution technique from eliminating variables in any ordering. Therefore, the computation dictated by Eq. 1 must be performed along a legal elimination ordering that respects ≺, namely the reverse of the elimination ordering is some extension of ≺ to a total order [5, 3]."
    }, {
      "heading" : "3 FOUNDATIONS",
      "text" : "Our approach towards a qualitative theory for influence diagrams is based on the qualitative decision theory proposed by Wilson [14]. Wilson’s theory defines a set of abstract quantities called extended reals, denoted by R∗, that are used to represent qualitative probabilities and utilities. Each extended real is a rational function p/q where p and q are polynomials in ǫ with coefficients in the rationals, where ǫ is a very small but unknown quantity so that the extended reals can be used to represent information up to ǫ precision. For example, quantities such as 1−ǫ and ǫ might be used for qualitative probabilities likely and unlikely respectively, and ǫ−1 for a high utility. These quantities can then be combined using standard arithmetic operations between polynomials for computing expected qualitative utilities. The resulting utilities are then compared among each other by means of a total order on R∗ that is defined in [14]."
    }, {
      "heading" : "3.1 ORDER-OF-MAGNITUDE CALCULUS",
      "text" : "Rather than using extended reals explicitly, we adopt a simpler calculus that allows us to reason about the “order of magnitude” of the extended reals [14]. We start with the definition of an order-of-magnitude value that represents a qualitative probability or utility value.\nDEFINITION 1 An order-of-magnitude value is a pair\n〈σ, n〉, where σ ∈ {+,−,±} is called the sign and n ∈ Z is called the order of magnitude, respectively.\nIntuitively, for each integer n we have an element 〈+, n〉 meaning “of order ǫn”, and an element 〈−, n〉 meaning “of order −ǫn”. Moreover, if we add something of order ǫn to something of order −ǫn then the result can be of order ±ǫm, for any m ≥ n. To ensure closure of the calculus under addition, we therefore add the element 〈±, n〉 representing this set of possibilities. In the following, we also define O = {〈σ, n〉 | n ∈ Z, σ ∈ {+,−,±}} ∪ {〈±,∞〉}, O± = {〈±, n〉 | n ∈ Z ∪ {∞}} and O+ = {〈+, n〉 | n ∈ Z∪{∞}}. The element 〈±,∞〉 will sometimes be written as 0, element 〈+, 0〉 as 1, and element 〈−, 0〉 as -1.\nStandard arithmetic operations such as multiplication (×) and addition (+) follow from the semantics of the order-ofmagnitude values [14] and are defined next.\nDEFINITION 2 (multiplication) Let a, b ∈ O be such that a = 〈σ,m〉 and b = 〈τ, n〉. We define a × b = 〈σ ⊗ τ,m+ n〉, where ∞+ n = n+∞ = ∞ for n ∈ Z∪ {∞} and ⊗ is the natural multiplication of signs, namely it is the commutative operation on {+,−,±} such that +⊗− = −, +⊗+ = −⊗− = +, and ∀σ ∈ {+,−,±}, σ ⊗± = ±.\nThis multiplication is associative and commutative, and ∀a ∈ O, a × 0 = 0 and a × 1 = a, respectively. Furthermore, for b ∈ O \\ O±, we define b−1 to be the multiplicative inverse of b, namely 〈σ,m〉−1 = 〈σ,−m〉 for σ ∈ {+,−}. Given a ∈ O, we define a/b = a× b−1.\nDEFINITION 3 (addition) Let a, b ∈ O be such that a = 〈σ,m〉 and b = 〈τ, n〉. We define a + b to be: (1) 〈σ,m〉 if m < n; (2) 〈τ, n〉 if m > n; (3) 〈σ ⊕ τ,m〉 if m = n, where +⊕+ = +, −⊕− = −, and otherwise, σ⊕τ = ±.\nAddition is associative and commutative, and a + 0 = a, ∀a ∈ O. For a, b ∈ O, let −b = −1 × b and a − b = a+(−b). Clearly, we can write −〈σ,m〉 = 〈−σ,m〉, where −(+) = −, −(−) = + and −(±) = ±. We also have the distributivity: ∀a, b, c ∈ O, (a+ b)× c = a× c+ b× c."
    }, {
      "heading" : "3.2 ORDERING ON SETS OF",
      "text" : "ORDER-OF-MAGNITUDE VALUES\nWe will use the following ordering over the elements of O, which is slightly stronger than that defined in [14].\nDEFINITION 4 (ordering) Let a, b ∈ O be such that a = 〈σ,m〉 and b = 〈τ, n〉. We define the binary relation < on O by a < b if and only if either: (1) σ = + and τ = + and m ≤ n; or (2) σ = + and τ = ± and m ≤ n; or (3) σ = + and τ = −; or (4) σ = ± and τ = − and m ≥ n; or (5) σ = − and τ = − and m ≥ n.\nGiven a, b ∈ O, if a < b then we say that a dominates b. For A,B ⊆ O, we say that A < B if every element of\nB is dominated by some element of A (so that A contains as least as large elements as B), namely if for all b ∈ B there exists a ∈ A with a < b. As usual, we write a ≻ b if and only if a < b and it is not the case that b < a. It is easy to see that < is a partial order on O and the following monotonicity property holds:\nPROPOSITION 1 Let a, b, c ∈ O. If a < b then a + c < b+ c, and if a < b and c ∈ O+ then a× c < b× c.\nAny finite set of order-of-magnitude values can therefore be represented by its maximal elements with respect to <.\nDEFINITION 5 (maximal set) Given a finite set A ⊆ O, we define the maximal set of A, denoted by max<(A), to be the set consisting of the undominated elements in A, namely max<(A) = {a ∈ A | ∄b ∈ A such that b ≻ a}."
    }, {
      "heading" : "4 OPERATIONS ON SETS OF",
      "text" : "ORDER-OF-MAGNITUDE VALUES\nWe introduce now the main operations that can be performed over partially ordered finite sets of order-ofmagnitude values. In particular, we extend the addition (+) and multiplication (×) operations from singleton to sets of order-of-magnitude values as well as define a maximization operation over such sets."
    }, {
      "heading" : "4.1 ADDITION, MULTIPLICATION AND MAXIMIZATION",
      "text" : "Given two finite sets A,B ⊆ O and q ∈ O+, we define the summation and multiplication operations as A + B = {a + b | a ∈ A, b ∈ B} and q × A = {q × a | a ∈ A}, respectively. The maximization operation is defined by max(A,B) = max<(A ∪B).\nIn order to use the order-of-magnitude calculus to define a qualitative version of influence diagrams we need to be sure that each of +, × and max is commutative and associative, and also to give sufficient conditions such that the following distributivity properties hold:\n∀q, q1, q2 ∈ O+ and ∀A,B,C ⊆ O\nD1 q × (A+B) = (q ×A) + (q ×B)\nD2 (q1 + q2)×A = (q1 ×A) + (q2 ×A)\nD3 max(A,B) + C = max(A,C) + max(B,C)\nIt is easy to see that +, × and max are commutative and associative, and the distributivity properties (D1) and (D3) hold as well. Unfortunately, the distributivity property (D2) does not always hold for sets of order-of-magnitude values. To give a simple example, let q1 = 〈+, 2〉, q2 = 〈+, 3〉 and let A = {〈±, 1〉, 〈±, 4〉}. Then, (q1+q2)×A yields the set\n{〈±, 3〉, 〈±, 6〉}, whereas (q1 × A) + (q2 × A) is equal to {〈±, 3〉, 〈±, 4〉, 〈±, 6〉}. This property does however hold for convex sets, as we will show next."
    }, {
      "heading" : "4.2 CONVEX SETS AND CONVEX CLOSURE",
      "text" : "Based on Definition 5, every element of a finite set A ⊆ O is dominated by some maximal element in A. We can therefore define an equivalence relation between finite sets of order-of-magnitude values, as follows.\nDEFINITION 6 (relation ≈) Given two finite sets A,B ⊆ O, we say that A is ≈-equivalent with B, denoted by A ≈ B, if and only if A < B and B < A.\nClearly, ≈ is an equivalence relation, namely it is reflexive, symmetric and transitive. We then have that:\nPROPOSITION 2 Let A,B,C ⊆ O be finite sets and let q ∈ O+. The following properties hold: (1) A ≈ B if and only if max<(A) = max<(B); (2) if A ≈ B then A+ C ≈ B + C and q ×A ≈ q ×B.\nWe introduce next the notions of convex sets and convex closure of sets of order-of-magnitude values.\nDEFINITION 7 A set A ⊆ O is said to be convex if ∀q1, q2 ∈ O+ with q1 + q2 = 1, and ∀a, b ∈ A, we have that (q1 × a) + (q2 × b) ∈ A. The convex closure C(A) of a set A ⊆ O is defined to consist of every element of the form ∑k\ni=1(qi × ai), where k is an arbitrary natural\nnumber, each ai ∈ A, each qi ∈ O+ and ∑k i=1 qi = 1.\nConsider two elements 〈σ,m〉 and 〈τ, n〉 in O, where we can assume without loss of generality that m ≤ n. Any convex combination of these two elements is of the form 〈θ, l〉 where l ∈ [m,n] and if l < n then θ = σ; if l = n then θ = σ⊕τ or θ = τ . This implies that the convex combination of a finite number of non-zero elements is finite (since every element a in the convex combination has its order restricted to be within a finite range), and so, in particular can be represented by its maximal set. In fact, this property holds even if we allow the zero element 〈±,∞〉. We can define now the following equivalence relation:\nDEFINITION 8 (relation ≡) Given the finite sets A,B ⊆ O, we say that A is ≡-equivalent with B, denoted by A ≡ B, if and only if C(A) ≈ C(B).\nTherefore, two sets of order-of-magnitude values are considered equivalent if, for every convex combination of elements of one, there is a convex combination of elements of the other which is at least as good.\nPROPOSITION 3 Let A,B,C ⊆ O be finite sets and let q ∈ O+. The following properties hold: (1) A ≡ B if and only if max<(C(A)) = max<(C(B)); (2) if A ≡ B then A+ C ≡ B + C, q ×A ≡ q ×B, and A ∪ C ≡ B ∪ C.\nWe can show now that any finite subset of O is in fact ≡- equivalent with a set of order-of-magnitude values containing one or two elements, namely:\nTHEOREM 1 Let A be any finite subset of O. Then either A ≡ {a} for some a ∈ O, or ∃ m,n ∈ Z with m < n and σ ∈ {+,−,±} such that A ≡ {〈±,m〉, 〈σ, n〉}."
    }, {
      "heading" : "4.3 OPERATIONS ON EQUIVALENT SETS OF",
      "text" : "ORDER-OF-MAGNITUDE VALUES\nTheorem 1 allows us to efficiently perform the required operations (ie, summation, multiplication and maximization) on sets of order-of-magnitude values. We assume that the subsets O are either singleton sets or are of the form {〈±,m〉, 〈σ, n〉}, where m < n. We need to ensure that the outputs are of this form as well. For a given a ∈ O, we use the notation σ(a) and â to denote the sign and the order of magnitude of a, respectively,\nMultiplication Given A ⊆ O of the required form, and q ∈ O+, we need to generate a set A′ that is ≡-equivalent with q ×A. Write q as 〈+, l〉. If A = {〈σ,m〉} then q ×A is just equal to the singleton set {〈σ, l+m〉}. Otherwise, A is of the form {〈±,m〉, 〈σ, n〉}, where m < n. Then q×A equals {〈±, l + m〉, 〈σ, l + n〉}, which is of the required form, since l +m < l + n.\nMaximization Given the sets A1, A2, . . . , Ak ⊆ O, each of them having the required form, we want to compute a set A′ that is ≡-equivalent to max(A1, . . . , Ak). Let A = A1 ∪ · · · ∪ Ak and, for σ ∈ {+,−,±}, we define mσ and nσ as follows: if there exists no element a ∈ A with σ(a) = σ then we say that mσ and nσ are both undefined; otherwise we have that mσ = min{l : 〈σ, l〉 ∈ A} and nσ = max{l : 〈σ, l〉 ∈ A}, respectively. The set A′ is computed as follows: (1) if m+ and m± are both undefined (there are only negative elements) then A′ = {〈−, n−〉}; (2) if m+ is defined and either m+ ≤ m± or m± is undefined then A′ = {〈+,m+〉}; (3) if m+ > m± (and both are defined) then A′ = {〈±,m±〉, 〈+,m+〉}; (4) if m+ is undefined (no positive elements) and either n± ≥ n− or n− is undefined then A′ = {〈±,m±〉, 〈±, n±〉} ; and (5) if m+ is undefined (there are no positive elements) and n± < n− then A′ = {〈±,m±〉, 〈−, n−〉}.\nSummation Given the sets A1, A2, . . . , Ak ⊆ O of required form as before, we want to compute a set A′ that is ≡-equivalent to (A1 + · · · + Ak). We can write Ai as {ai, bi} where if ai 6= bi then σ(ai) = ± and âi < b̂i. Then, (A1 + · · ·+Ak) ≡ {a, b} where a = a1 + · · ·+ ak and b = b1 + · · · + bk. We can write b more explicitly as 〈σ(b), b̂〉 where b̂ = min(b̂1, . . . , b̂k), and σ(b) = + if and only if all bi with minimum b̂i have σ(bi) = +; else σ(b) = − if all bi with minimum b̂i have σ(bi) = −; else σ(b) = ±. Similarly for a. If σ(a) 6= ± then {a, b} reduces to a singleton because a = b.\nExample 2 Consider the sets A1 = {〈±, 3〉, 〈±, 4〉} and A2 = {〈±, 3〉, 〈±, 6〉}. To generate A′ ≡ max(A1, A2), we first compute m± = 3 and n± = 6, and then we have that A′ = {〈±, 3〉, 〈±, 6〉} which corresponds to the extreme points of the input sets. Similarly, we can compute the set A′′ ≡ (A1 +A2) as {〈±, 3〉, 〈±, 4〉}."
    }, {
      "heading" : "4.4 DISTRIBUTIVITY PROPERTIES REVISITED",
      "text" : "In summary, we can show now that all three distributivity properties hold with respect to the ≡-equivalence relation between finite sets of order-of-magnitude values.\nTHEOREM 2 ∀q, q1, q2 ∈ O+ and ∀A,B,C ⊆ O finite sets we have that: (D1) q× (A+B) ≡ (q×A)+ (q×B); and (D2) (q1 + q2)×A ≡ (q1 ×A) + (q2 ×A); and (D3) max(A,B) + C ≡ max(A,C) + max(B,C)."
    }, {
      "heading" : "5 ORDER-OF-MAGNITUDE INFLUENCE DIAGRAMS",
      "text" : "In this section, we introduce a new qualitative version of the influence diagram model based on an order-of-magnitude representation of the probabilities and utilities."
    }, {
      "heading" : "5.1 THE QUALITATIVE DECISION MODEL",
      "text" : "An order-of-magnitude influence diagram (OOM-ID) is a qualitative counterpart of the standard influence diagram graphical model. The graphical structure of an OOM-ID is identical to that of a standard ID, namely it is a directed acyclic graph containing chance nodes (circles) for the random discrete variables X, decision nodes (rectangles) for the decision variables D, and utility nodes (diamonds) for the local utility functions U of the decision maker. The directed arcs in the OOM-ID represent the same dependencies between the variables as in the standard model. Each chance node Xi ∈ X is associated with a conditional probability distribution P oi that maps every configuration of its scope to a positive order-of-magnitude probability value, namely P oi : ΩXi∪pa(Xi) → O+. The utility functions Uoj ∈ U represent partially ordered preferences which are expressed by finite sets of order-of-magnitude values, namely Uoj : ΩQj → 2 O, where Qj is the scope of Uj .\nSolving an order-of-magnitude influence diagram is to find the optimal policy ∆ = (δ1, . . . , δm) that maximizes the order-of-magnitude expected utility ∏n\ni=1 P o i ×\n∑r\nj=1 U o j .\nWe define the optimal policies set of an order-of-magnitude influence diagram to be the set of all policies having the same maximum order-of-magnitude expected utility."
    }, {
      "heading" : "5.2 AN EXAMPLE",
      "text" : "Figure 2 displays the order-of-magnitude probability and utility functions of an OOM-ID corresponding to the oil\nwildcatter decision problem from Example 1. For our purpose, we used an extension of Spohn’s mapping from the original probability distributions and utility functions to their corresponding order-of-magnitude approximation [12, 2]. Specifically, given a small positive ǫ < 1, the order-of-magnitude approximation of a probability value p ∈ (0, 1] is 〈+, k〉 such that k ∈ Z and ǫk+1 < p ≤ ǫk, while the order-of-magnitude approximation of a positive utility value u > 0 is 〈+,−k〉 such that ǫ−k ≤ u < ǫ−(k+1) (the case of negative utilities is symmetric). For example, if we consider ǫ = 0.1 then the probability P (S = closed|O = dry, T = yes) = 0.01 is mapped to 〈+, 2〉, while the utilities U2(O = dry,D = yes) = −70 and U2(O = soaking,D = yes) = 200 are mapped to 〈−,−1〉 and 〈+,−2〉, respectively.\nTable 1 shows the optimal policies sets (including the maximum order-of-magnitude expected utility) obtained for the order-of-magnitude influence diagrams corresponding to ǫ ∈ {0.1, 0.01, 0.001}. When ǫ = 0.1, we can see that there are two optimal policies having the same maximum order-of-magnitude expected utility, namely ∆1 (for T = yes) and ∆2 (for T = no). Therefore, if the seismic test is performed (T = yes) then drilling is to be done only if the test results show an open or closed pattern. Otherwise (T = no), the wildcatter will drill regardless of the test results. Ties like these at the decision variables are expected given that the order-of-magnitude probabilities and utilities represent abstractions of the real values. The expected utilities of ∆1 and ∆2 in the original influence diagram are\n42.75 and 20.00, respectively.\nWhen ǫ = 0.01, we also see that both drilling options are equally possible if the seismic test is performed and the test results show a diffuse pattern. In this case, there are four optimal policies having the same maximum order-ofmagnitude expected utility. Finally, when ǫ = 0.001, we can see that all decision options are possible and the corresponding optimal policies set contains 128 policies. The explanation is that the order-of-magnitude influence diagram contains in this case only trivial order-of-magnitude values such as 〈+, 0〉, 〈−, 0〉 and 〈+,∞〉, respectively."
    }, {
      "heading" : "5.3 VARIABLE ELIMINATION",
      "text" : "Theorem 2 ensures the soundness and correctness of a variable elimination procedure using the summation (+), multiplication (×) and maximization (max) operations over partially ordered sets of order-of-magnitude values, for solving order-of-magnitude influence diagrams.\nTherefore, a variable elimination algorithm that computes the optimal policy of an order-of-magnitude influence diagram (and also the maximum order-of-magnitude expected utility) is described by Algorithm 1. The algorithm, called ELIM-OOM-ID, is based on Dechter’s bucket elimination framework for standard influence diagrams [3] and uses a bucket structure constructed along a legal elimination ordering o = Y1, . . . Yt of the variables in X∪D. The bucket data-structure, called buckets, associates each bucket with a single variable. The bucket of Yp contains all input probability and utility functions whose highest variable is Yp.\nThe algorithm processes each bucket, top-down from the last to the first, by a variable elimination procedure that computes new probability (denoted by λ) and utility (denoted by θ) components which are then placed in corresponding lower buckets (lines 1–11). The λp of a chance bucket is generated by multiplying all probability components and eliminating by summation the bucket variable. The θp of a chance bucket is computed as the average utility of the bucket, normalized by the bucket’s compiled λp. For a decision variable, we compute the λp and θp components in a similar manner and eliminate the bucket variable by maximization. In this case, the product of the probability components in the bucket is a constant when viewed as a function of the bucket’s decision variable [5, 15] and therefore, the compiled λp is a constant as well.\nIn the second, bottom-up phase, the algorithm computes an optimal policy. The decision buckets are processed in reverse order, from the first variable to the last. Each decision rule is generated by taking the argument of the maximization operator applied over the combination of the probability and utility components in the respective bucket, for each configuration of the variables in the bucket’s scope (ie, the union of the scopes of all functions in that bucket minus the\nAlgorithm 1: ELIM-OOM-ID Data: An OOM-ID 〈X,D,U, G〉, bucket structure along a legal\nelimination ordering of the variables o Result: An optimal policy ∆ // top-down phase for p = t downto 1 do1 let Λp = {λ1, ..., λj} and Θp = {θ1, ..., θk} be the2 probability and utility components in buckets[p] if Yp is a chance variable then3\nλp ← ∑\nYp\n∏j i=1 λi4\nθp ← (λp)−1 × ∑ Yp (( ∏j i=1 λi)× ( ∑k j=1 θj))5 else if Yp is a decision variable then6 if Λp = ∅ then θp ← maxYp ∑k j=1 θj7 else8 λp ← maxYp ∏j i=1 λi9\nθp ← maxYp(( ∏j i=1 λi)× ( ∑k j=1 θj))10\nplace each λp and θp in the bucket of the highest-index11 variable in its scope\n// bottom-up phase for p = 1 to t do12 if Yp is a decision variable then13 δp ← argmaxYp(( ∏j i=1 λi)× ( ∑k j=1 θj))14 ∆ ← ∆ ∪ δp15\nreturn ∆16\nbucket variable Yp).\nTHEOREM 3 (complexity) Given an OOM-ID with n variables, algorithm ELIM-OOM-ID is time and space O(n · kw ∗\no ), where w∗o is the treewidth of the legal elimination ordering o and k bounds the domain size of the variables."
    }, {
      "heading" : "6 EXPERIMENTS",
      "text" : "In this section, we evaluate empirically the quality of the decision policies obtained for order-of-magnitude influence diagrams. All experiments were carried out on a 2.4GHz quad-core processor with 8GB of RAM.\nMethodology We experimented with random influence diagrams described by the parameters 〈nc, nd, k, p, r, a〉, where nc is the number of chance variables, nd is the number of decision variables, k is the maximum domain size, p is the number of parents in the graph for each variable, r is the number of root nodes and a is the arity of the utility functions. The structure of the influence diagram is created by randomly picking nc + nd − r variables out of nc + nd and, for each, selecting p parents from their preceding variables, relative to some ordering, whilst ensuring that the decision variables are connected by a directed path. A single utility node with a parents picked randomly from the chance and decision nodes is then added to the graph.\nWe generated two classes of random problems with parameters 〈n, 5, 2, 2, 5, 5〉 and having either positive utilities only or mixed (positive and negative) utilities. They are\ndenoted by P : 〈n, 5, 2, 2, 5, 5〉 and M : 〈n, 5, 2, 2, 5, 5〉, respectively. In each case, 75% of the chance nodes were assigned extreme CPTs which were populated with numbers drawn uniformly at random between 10−5 and 10−4, whilst ensuring that the table is normalized. The remaining CPTs were randomly filled using a uniform distribution between 0 and 1. For class P , the utilities are of the form 10u, where u is an integer uniformly distributed between 0 and 5. For class M , the utilities are of the form +10u or −10u, where u is between 0 and 5, as before, and we have an equal number of positive and negative utility values. Each influence diagram instance was then converted into a corresponding order-of-magnitude influence diagram using the mapping of the probabilities and utilities described in Section 5.2, for some ǫ < 1. Intuitively, the smaller ǫ is, the coarser the order-of-magnitude approximation of the exact probability and utility values (ie, more information is lost).\nMeasures of Performance To measure how close the decision policies derived from the optimal policy set of an order-of-magnitude influence diagram are to the optimal policy of the corresponding standard influence diagram, we use two relative errors, defined as follows. Let I be an influence diagram and let Iǫ be the corresponding order-ofmagnitude approximation, for some ǫ value. We sample s different policies, uniformly at random, from the optimal policies set of Iǫ, and for each sampled policy we compute its expected utility in I. Let ∆med be a policy corresponding to the median expected utility vmed amongst the samples. We define the relative error ηmed = |(v − vmed)/v|, where v is the maximum expected utility of the optimal policy in I. Similarly, we define ηmax = |(v − vmax)/v|, where ∆max is the best policy having the highest expected utility vmax amongst the samples.\nResults Figure 3 displays the distribution of the relative errors ηmed (top) and ηmax (bottom) obtained on orderof-magnitude influence diagrams derived from class P (ie, positive utilities), as a function of the problem size (given by the number of variables), for ǫ ∈ {0.5, 0.05, 0.005}. Each data point and corresponding error bar represents the 25th, median and 75th percentiles obtained over 30 random problem instances generated for the respective problem size. We can see that ηmed is the smallest (less than 10%) for ǫ = 0.5. However, as ǫ decreases, the loss of information due to the order-of-magnitude abstraction increases and the corresponding relative errors ηmed increase significantly. Notice that the best policy ∆max derived from the order-of-magnitude influence diagram was almost identical to that of the corresponding standard influence diagram, for all ǫ (ie, the error ηmax is virtually zero).\nFigure 4 shows the distribution of ηmed (top) and ηmax (bottom) obtained on order-of-magnitude influence diagrams from class M (ie, mixed utilities). The pattern of the results is similar to that from the previous case. However, in this case, the errors span over two or three orders of\nmagnitude, especially for ǫ = 0.05 and 0.005. This is because the sampled policy space includes policies which are quite different from each other and, although they have the same maximum order-of-magnitude expected utility, their expected utility in the corresponding standard influence diagram is significantly different. For this reason, we looked in more detail at the distribution of the expected utility values of 100 policies sampled uniformly at random from the optimal policies set of a class M OOM-ID instance with 45 variables, for ǫ ∈ {0.5, 0.05, 0.005}. As expected, we observed that the smallest sample variance is obtained for ǫ = 0.5. For ǫ = 0.05 and ǫ = 0.005, the samples are spread out even more from the mean, and the variance of the expected utility is significantly larger. This explains the large variations of the relative errors ηmed and ηmax, especially for smaller ǫ values (eg, ǫ = 0.05 and ǫ = 0.005)."
    }, {
      "heading" : "7 RELATED WORK",
      "text" : "Several extensions of the standard influence diagram model have been proposed in recent years to deal with imprecise probabilistic and utility information. Garcia and Sabbadin [4] introduced possibilistic influence diagrams to model and solve decision making problems under qualitative uncertainty in the framework of possibilistic theory. Pralet et al [8] considered a generalized influence diagram system\nwhich allows for some qualitative uncertainty formalisms to be used together with totally ordered utility values only. Lopez and Rodriguez [7] proposed an influence diagram model based on random fuzzy variables to represent imprecise information. Kikuti et al [6] allow credal sets of probabilities to represent imprecise probabilistic information and focus on precise utility. The work that is closest to ours is that by Bonet and Pearl [1] who consider qualitative MDPs and POMDPs based also on an order-of-magnitude approximation of probabilities and totally ordered utilities."
    }, {
      "heading" : "8 CONCLUSION",
      "text" : "The paper presents a qualitative influence diagram formalism that allows reasoning with imprecise probabilities and partially ordered imprecise utility values. Our proposed order-of-magnitude influence diagram model is based on an order-of-magnitude representation of the probabilities and utilities. We also described a dedicated variable elimination algorithm that performs efficient operations on partially ordered sets of utilities for solving this model.\nWe considered a straightforward variable elimination algorithm. One way to improve it is to efficiently exploit constraints (zero values of the uncertainty and utility functions), building, for instance, on work by [8]. We also plan to investigate other formalisms for reasoning with imprecise information, such as interval-valued utilities and multi-\nattribute utility allowing trade-offs."
    } ],
    "references" : [ {
      "title" : "Qualitative MDPs and POMDPs: an order-of-magnitude approximation",
      "author" : [ "B. Bonet", "J. Pearl" ],
      "venue" : "UAI, pages 61–68",
      "citeRegEx" : "1",
      "shortCiteRegEx" : null,
      "year" : 2002
    }, {
      "title" : "On the relation between kappa calculus and probabilistic reasoning",
      "author" : [ "A. Darwiche", "M. Goldszmidt" ],
      "venue" : "UAI, pages 145–153",
      "citeRegEx" : "2",
      "shortCiteRegEx" : null,
      "year" : 1994
    }, {
      "title" : "A new perspective on algorithms for optimizing policies under uncertainty",
      "author" : [ "R. Dechter" ],
      "venue" : "AIPS, pages 72–81",
      "citeRegEx" : "3",
      "shortCiteRegEx" : null,
      "year" : 2000
    }, {
      "title" : "Complexity results and algorithms for possibilistic influence diagrams",
      "author" : [ "L. Garcia", "R. Sabbadin" ],
      "venue" : "Artificial Intelligence, 172(1):1018–1044",
      "citeRegEx" : "4",
      "shortCiteRegEx" : null,
      "year" : 2008
    }, {
      "title" : "From influence diagrams to junction trees",
      "author" : [ "F. Jensen", "V. Jensen", "S. Dittmer" ],
      "venue" : "UAI, pages 367–363",
      "citeRegEx" : "5",
      "shortCiteRegEx" : null,
      "year" : 1994
    }, {
      "title" : "Sequential decision making with partially ordered preferences",
      "author" : [ "D. Kikuti", "F. Cozman", "R. Filho" ],
      "venue" : "Artificial Intelligence, in press",
      "citeRegEx" : "6",
      "shortCiteRegEx" : null,
      "year" : 2011
    }, {
      "title" : "Influence diagrams with super value nodes involving imprecise information",
      "author" : [ "M. Lopez-Diaz", "L. Rodriquez-Muniz" ],
      "venue" : "European Journal of Operational Research, 179(1):203–219",
      "citeRegEx" : "7",
      "shortCiteRegEx" : null,
      "year" : 2007
    }, {
      "title" : "Sequential decision making problems - representation and solution",
      "author" : [ "C. Pralet", "T. Schiex", "G. Verfaillie" ],
      "venue" : "Wiley",
      "citeRegEx" : "8",
      "shortCiteRegEx" : null,
      "year" : 2009
    }, {
      "title" : "Decision analysis",
      "author" : [ "H. Raiffa" ],
      "venue" : "Addison-Wesley, Reading, MA",
      "citeRegEx" : "9",
      "shortCiteRegEx" : null,
      "year" : 1968
    }, {
      "title" : "Evaluating influence diagrams",
      "author" : [ "R. Shachter" ],
      "venue" : "Operations Research, 34(6):871–882",
      "citeRegEx" : "10",
      "shortCiteRegEx" : null,
      "year" : 1986
    }, {
      "title" : "Valuation-based systems for Bayesian decision analysis",
      "author" : [ "P. Shenoy" ],
      "venue" : "Operations Research, 40(1):463–484",
      "citeRegEx" : "11",
      "shortCiteRegEx" : null,
      "year" : 1992
    }, {
      "title" : "Ordinal conditional functions: a dynamic theory of epistemic states",
      "author" : [ "W. Spohn" ],
      "venue" : "Causation in decision, belief change and statistics, 2:105–134",
      "citeRegEx" : "12",
      "shortCiteRegEx" : null,
      "year" : 1987
    }, {
      "title" : "Dynamic programming and influence diagrams",
      "author" : [ "J. Tatman", "R. Shachter" ],
      "venue" : "IEEE Transactions on Systems, Man, and Cybernetics, 20(1):365–379",
      "citeRegEx" : "13",
      "shortCiteRegEx" : null,
      "year" : 1990
    }, {
      "title" : "An order of magnitude calculus",
      "author" : [ "N. Wilson" ],
      "venue" : "UAI, pages 548–555",
      "citeRegEx" : "14",
      "shortCiteRegEx" : null,
      "year" : 1995
    }, {
      "title" : "An axiomatic framework for influence diagram computation with partially ordered utilities",
      "author" : [ "N. Wilson", "R. Marinescu" ],
      "venue" : "Technical report, University College Cork, Ireland",
      "citeRegEx" : "15",
      "shortCiteRegEx" : null,
      "year" : 2011
    } ],
    "referenceMentions" : [ {
      "referenceID" : 4,
      "context" : "This induces a partial order ≺ over X ∪ D, as follows: I0 ≺ D1 ≺ I1 ≺ · · · ≺ Dm ≺ Im [5].",
      "startOffset" : 86,
      "endOffset" : 89
    }, {
      "referenceID" : 8,
      "context" : "Example 1 For illustration, consider the influence diagram displayed in Figure 1 which is based on the classic oil wildcatter decision problem [9].",
      "startOffset" : 143,
      "endOffset" : 146
    }, {
      "referenceID" : 9,
      "context" : "Variable Elimination Several exact methods have been proposed over the past decades for solving influence diagrams using local computations [10, 13, 11, 5, 3, 8].",
      "startOffset" : 140,
      "endOffset" : 161
    }, {
      "referenceID" : 12,
      "context" : "Variable Elimination Several exact methods have been proposed over the past decades for solving influence diagrams using local computations [10, 13, 11, 5, 3, 8].",
      "startOffset" : 140,
      "endOffset" : 161
    }, {
      "referenceID" : 10,
      "context" : "Variable Elimination Several exact methods have been proposed over the past decades for solving influence diagrams using local computations [10, 13, 11, 5, 3, 8].",
      "startOffset" : 140,
      "endOffset" : 161
    }, {
      "referenceID" : 4,
      "context" : "Variable Elimination Several exact methods have been proposed over the past decades for solving influence diagrams using local computations [10, 13, 11, 5, 3, 8].",
      "startOffset" : 140,
      "endOffset" : 161
    }, {
      "referenceID" : 2,
      "context" : "Variable Elimination Several exact methods have been proposed over the past decades for solving influence diagrams using local computations [10, 13, 11, 5, 3, 8].",
      "startOffset" : 140,
      "endOffset" : 161
    }, {
      "referenceID" : 7,
      "context" : "Variable Elimination Several exact methods have been proposed over the past decades for solving influence diagrams using local computations [10, 13, 11, 5, 3, 8].",
      "startOffset" : 140,
      "endOffset" : 161
    }, {
      "referenceID" : 4,
      "context" : "1 must be performed along a legal elimination ordering that respects ≺, namely the reverse of the elimination ordering is some extension of ≺ to a total order [5, 3].",
      "startOffset" : 159,
      "endOffset" : 165
    }, {
      "referenceID" : 2,
      "context" : "1 must be performed along a legal elimination ordering that respects ≺, namely the reverse of the elimination ordering is some extension of ≺ to a total order [5, 3].",
      "startOffset" : 159,
      "endOffset" : 165
    }, {
      "referenceID" : 13,
      "context" : "Our approach towards a qualitative theory for influence diagrams is based on the qualitative decision theory proposed by Wilson [14].",
      "startOffset" : 128,
      "endOffset" : 132
    }, {
      "referenceID" : 13,
      "context" : "The resulting utilities are then compared among each other by means of a total order on R that is defined in [14].",
      "startOffset" : 109,
      "endOffset" : 113
    }, {
      "referenceID" : 13,
      "context" : "Rather than using extended reals explicitly, we adopt a simpler calculus that allows us to reason about the “order of magnitude” of the extended reals [14].",
      "startOffset" : 151,
      "endOffset" : 155
    }, {
      "referenceID" : 13,
      "context" : "Standard arithmetic operations such as multiplication (×) and addition (+) follow from the semantics of the order-ofmagnitude values [14] and are defined next.",
      "startOffset" : 133,
      "endOffset" : 137
    }, {
      "referenceID" : 13,
      "context" : "We will use the following ordering over the elements of O, which is slightly stronger than that defined in [14].",
      "startOffset" : 107,
      "endOffset" : 111
    }, {
      "referenceID" : 11,
      "context" : "For our purpose, we used an extension of Spohn’s mapping from the original probability distributions and utility functions to their corresponding order-of-magnitude approximation [12, 2].",
      "startOffset" : 179,
      "endOffset" : 186
    }, {
      "referenceID" : 1,
      "context" : "For our purpose, we used an extension of Spohn’s mapping from the original probability distributions and utility functions to their corresponding order-of-magnitude approximation [12, 2].",
      "startOffset" : 179,
      "endOffset" : 186
    }, {
      "referenceID" : 2,
      "context" : "The algorithm, called ELIM-OOM-ID, is based on Dechter’s bucket elimination framework for standard influence diagrams [3] and uses a bucket structure constructed along a legal elimination ordering o = Y1, .",
      "startOffset" : 118,
      "endOffset" : 121
    }, {
      "referenceID" : 4,
      "context" : "In this case, the product of the probability components in the bucket is a constant when viewed as a function of the bucket’s decision variable [5, 15] and therefore, the compiled λ is a constant as well.",
      "startOffset" : 144,
      "endOffset" : 151
    }, {
      "referenceID" : 14,
      "context" : "In this case, the product of the probability components in the bucket is a constant when viewed as a function of the bucket’s decision variable [5, 15] and therefore, the compiled λ is a constant as well.",
      "startOffset" : 144,
      "endOffset" : 151
    }, {
      "referenceID" : 3,
      "context" : "Garcia and Sabbadin [4] introduced possibilistic influence diagrams to model and solve decision making problems under qualitative uncertainty in the framework of possibilistic theory.",
      "startOffset" : 20,
      "endOffset" : 23
    }, {
      "referenceID" : 7,
      "context" : "Pralet et al [8] considered a generalized influence diagram system",
      "startOffset" : 13,
      "endOffset" : 16
    }, {
      "referenceID" : 6,
      "context" : "Lopez and Rodriguez [7] proposed an influence diagram model based on random fuzzy variables to represent imprecise information.",
      "startOffset" : 20,
      "endOffset" : 23
    }, {
      "referenceID" : 5,
      "context" : "Kikuti et al [6] allow credal sets of probabilities to represent imprecise probabilistic information and focus on precise utility.",
      "startOffset" : 13,
      "endOffset" : 16
    }, {
      "referenceID" : 0,
      "context" : "The work that is closest to ours is that by Bonet and Pearl [1] who consider qualitative MDPs and POMDPs based also on an order-of-magnitude approximation of probabilities and totally ordered utilities.",
      "startOffset" : 60,
      "endOffset" : 63
    }, {
      "referenceID" : 7,
      "context" : "One way to improve it is to efficiently exploit constraints (zero values of the uncertainty and utility functions), building, for instance, on work by [8].",
      "startOffset" : 151,
      "endOffset" : 154
    } ],
    "year" : 2011,
    "abstractText" : "In this paper, we develop a qualitative theory of influence diagrams that can be used to model and solve sequential decision making tasks when only qualitative (or imprecise) information is available. Our approach is based on an orderof-magnitude approximation of both probabilities and utilities and allows for specifying partially ordered preferences via sets of utility values. We also propose a dedicated variable elimination algorithm that can be applied for solving order-of-magnitude influence diagrams.",
    "creator" : "dvips(k) 5.98 Copyright 2009 Radical Eye Software"
  }
}