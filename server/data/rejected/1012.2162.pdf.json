{
  "name" : "1012.2162.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Nondeterministic fuzzy automata",
    "authors" : [ "Yongzhi Caoa", "Yoshinori Ezawac" ],
    "emails" : [ ],
    "sections" : [ {
      "heading" : null,
      "text" : "Fuzzy automata have long been accepted as a generalization of nondeterministic finite automata. A closer examination, however, shows that the fundamental property—nondeterminism—in nondeterministic finite automata has not been well embodied in the generalization. In this paper, we introduce nondeterministic fuzzy automata with or without -moves and fuzzy languages recognized by them. Furthermore, we prove that (deterministic) fuzzy automata, nondeterministic fuzzy automata, and nondeterministic fuzzy automata with -moves are all equivalent in the sense that they recognize the same class of fuzzy languages.\nKeywords: Fuzzy automata, nondeterministic finite automata, nondeterministic fuzzy automata, nondeterministic fuzzy automata with -moves, fuzzy language"
    }, {
      "heading" : "1. Introduction",
      "text" : "Finite automata (also called finite-state automata or finite-state machines) are probably best known computational devices and are used to model operations of many systems in practice. Automata theory is closely related to formal language theory as the automata are often classified by the class of formal languages they are able to recognize [15]. A finite automaton gives a finite representation of a regular language that may be an infinite set. It is widely known that finite automata are significant in many different areas, including computer science, linguistics, mathematics, electrical engineering, philosophy, and biology.\nTo deal with imprecision due to fuzziness in modeling some systems, fuzzy automata and fuzzy languages have been proposed as a reasonable extension of classical automata and formal language theory. The mathematical formulation of fuzzy automata was first proposed by Wee in 1967 [36]. The basic idea in the formulation is that, unlike the classical case, a fuzzy automaton can switch from one state to another one to a certain possibility degree, and thus it is capable of capturing the uncertainty appearing in states or state transitions of a system. A fuzzy language over an alphabet Σ, originally introduced in [18, 25], is defined as a fuzzy subset of Σ∗, where Σ∗ stands for the Kleene closure of Σ. In this sense, a fuzzy language L allows for strings in Σ∗ that are not completely in or out the language; rather each string s has a membership grade L(s), which measures its degree of membership in L.\nIn the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39]. In terms of fuzzy transition functions, fuzzy automata may be broadly classified into three types: The first type [1, 3, 6, 7, 9, 11, 12, 13, 16, 21, 22, 23, 27, 28, 32, 33, 35, 37, 39] uses fuzzy transition functions like δ : Q × Σ −→ F (Q), where Q represents the state set, Σ is the input alphabet, and F (Q) is the set of all fuzzy subsets of Q. Note that such a fuzzy transition function can be equivalently converted into δ′ : Q × Σ × Q −→ [0, 1] and can also be represented by fuzzy states and fuzzy transition matrices. Frequently the interval [0, 1] has been replaced by a lattice or other suitable algebraic structure. The second type [5, 24, 34] employs the same transition function as that of a deterministic finite automaton\nEmail addresses: caoyz@pku.edu.cn (Yongzhi Cao), ezawa@res.kutc.kansai-u.ac.jp (Yoshinori Ezawa)\nPreprint submitted to Elsevier December 13, 2010\nar X\niv :1\n01 2.\n21 62\nv1 [\ncs .A\nI] 1\n0 D\nec 2\n01 0\nand encodes the fuzziness by fuzzy initial state(s) and fuzzy final states. The third type [4, 8, 10, 17, 20, 38] adds more parameters or components to the first type.\nAlthough fuzzy automata include nondeterministic finite automata as a special case, it is worth noting that to the best of our knowledge, all fuzzy transition functions of the fuzzy automata in the existing literature are deterministic in the sense that an automaton in its current state and with the symbol currently read gives rise to a unique next (crisp or fuzzy) state. It turns out that the fundamental property—nondeterminism—in nondeterministic finite automata has not been fully embodied in the extension from finite automata to fuzzy automata. As is well known, nondeterminism is, however, essential for modeling scheduling freedom, implementation freedom, the external environment, and incomplete information (see, for example, [14]). In fact, nondeterminism implicitly appears in the earlier work of Wee and Fu [37], where they formulated a learning composite fuzzy automaton operating alternatively between next two states. Unfortunately, nondeterminism has been largely ignored in the area of fuzzy automata over the past 40 years.\nThe present paper is mainly concerned with fuzzy automata with nondeterminism. The main driving idea for it is that the presence of fuzziness should not hide the underlying nondeterminism, but rather gives more information. We introduce nondeterministic fuzzy automata, nondeterministic fuzzy automata with -moves, and fuzzy languages recognized by them. Note that the term of nondeterministic fuzzy automata has already been used by some authors (for example, [3, 19, 22]), but it takes on a different meaning. In fact, it corresponds exactly to the notion of deterministic fuzzy automata here. Following the study of nondeterministic finite automata [29], we show that conventional fuzzy automata, nondeterministic fuzzy automata, and nondeterministic fuzzy automata with -moves are all equivalent in the sense that they recognize the same class of fuzzy languages.\nThe remainder of this paper is structured as follows. We review some basic facts on fuzzy sets, fuzzy automata, and fuzzy languages in Section 2. After a closer examination of nondeterministic finite automata, the notions of nondeterministic fuzzy automata and fuzzy languages accepted by them are introduced in Section 3 and are extended to nondeterministic fuzzy automata with -moves in Section 4. We establish the equivalence among deterministic fuzzy automata, nondeterministic fuzzy automata, and nondeterministic fuzzy automata with -moves in Section 5 and conclude the paper in Section 6."
    }, {
      "heading" : "2. Preliminaries",
      "text" : "In this section, we briefly recall a few basic facts on fuzzy sets, fuzzy automata, and fuzzy languages. Let us begin with the notion of fuzzy sets initiated by Zadeh [40]. Suppose that X is a universal set. A fuzzy set A, or rather a fuzzy subset A of X, is defined by a function assigning to each element x of X a value A(x) in the real unit closed interval [0, 1]. Such a function is called a membership function, which is a generalization of the characteristic function associated to a crisp subset of X. The value A(x) characterizes the degree of membership of x in A. In light of this, a fuzzy subset of X can be viewed as a possibility distribution on X.\nWe denote by F (X) the set of all fuzzy subsets of X and by P(X) the power set of X. For any A, B ∈ F (X), we say that A is contained in B (or B contains A), denoted by A ⊆ B, if A(x) ≤ B(x) for all x ∈ X. We say that A = B if and only if A ⊆ B and B ⊆ A.\nThe support of a fuzzy set A is a crisp set defined by\nsupp(A) = {x ∈ X | A(x) > 0}.\nA fuzzy set is said to be empty if its support is empty, that is, its membership function is identically zero on X. We use Φ to denote the empty fuzzy set. Whenever supp(A) is finite, say supp(A) = {x1, x2, . . . , xn}, we may write A in Zadeh’s notation as\nA = A(x1)\nx1 + A(x2) x2 + · · · + A(xn) xn .\nWith this notation, 1/x is a singleton in X, i.e., the fuzzy subset of X with membership 1 at x and with zero membership for all the other elements of X.\nFor any family λi, i ∈ I, of elements of [0, 1], we write ∨i∈Iλi or ∨{λi | i ∈ I} for the supremum of {λi | i ∈ I}, and ∧i∈Iλi or ∧{λi | i ∈ I} for the infimum. In particular, if I is finite, then ∨i∈Iλi and ∧i∈Iλi are the greatest element and the least element of {λi | i ∈ I}, respectively. For any A ∈ F (X), the height of A is defined as\nheight(A) = ∨x∈XA(x).\nGiven A, B ∈ F (X), the union of A and B, denoted A ∪ B, is defined by the membership function\n(A ∪ B)(x) = A(x) ∨ B(x)\nfor all x ∈ X; the intersection of A and B, denoted A ∩ B, is given by the membership function\n(A ∩ B)(x) = A(x) ∧ B(x)\nfor all x ∈ X. Let λ ∈ [0, 1] and A ∈ F (X). The scale product λ · A of λ and A is defined by\n(λ · A)(x) = λ ∧ A(x)\nfor every x ∈ X; this is again a fuzzy subset of X. We now turn to the concept of fuzzy automata. According to the compositional inference methods used in a fuzzy automaton, one may classify fuzzy automata into several types, such as max-min automata, min-max automata, max-product automata, and so on [26]. For each fuzzy finite state automaton, there are two different, but essentially equivalent, presentations. One is to encode the fuzziness of an automaton by fuzzy state vectors and fuzzy transition matrices. In this case, both state set itself and transition function are crisp. The other is to encode the fuzziness by a fuzzy transition function. For our purpose, we pursue the latter and restrict ourselves to the max-min automaton model for simplicity.\nDefinition 1. A fuzzy automaton M is a five-tuple (Q,Σ, δ, q0, F), where (1) Q is a finite, nonempty set of states. (2) Σ is a finite input alphabet. (3) δ : Q × Σ −→ F (Q) is a fuzzy transition function. (4) q0 in Q is the initial state. (5) F in F (Q) is the fuzzy set of final states.\nThe fuzzy transition function δ takes a state in Q and an input symbol in Σ as arguments and returns a possibility distribution on Q (i.e., fuzzy subset of Q). For each q ∈ Q, F(q) indicates intuitively the degree to which q is a final state.\nThe notion of this fuzzy automaton is usually based upon the following premises: The fuzzy automaton can stay in some crisp states simultaneously, to a certain possibility degree in each. Those degrees are defined by a state membership function. More concretely, for any p, q ∈ Q and a ∈ Σ, we can interpret δ(q, a)(p) as the possibility degree to which the automaton in state q and with input a may enter state p. If we had encoded the fuzziness of the automaton by fuzzy state vectors and fuzzy transition matrices, the result of inputting a at state q would be a fuzzy state vector having those possibility degrees as components. Therefore, from this point of view, the fuzzy automaton is deterministic in the sense that the automaton in state q and with input a gives rise to a unique possibility distribution on Q, and thus, we will refer to the fuzzy automaton in Definition 1 as deterministic fuzzy automaton.\nFor clarity, we sometimes use the more suggestive notation q a−→ µ to denote δ(q, a) = µ. Note that the above fuzzy transition function δ is defined as a function from Q × Σ × Q to [0, 1] in some references. In fact, both these representations mean the same thing because in the obvious way, each function δ : Q × Σ −→ F (Q) is exactly corresponding to a function δ′ : Q × Σ × Q −→ [0, 1].\nWe end this section with the notion of fuzzy languages. Denote by Σ∗ the set of all finite strings constructed by concatenation of elements of Σ, including the empty string . To describe what happens when we start in any state and follow any sequence of inputs, we extend the fuzzy transition function to strings by using max-min compositional inference method.\nDefinition 2. Let M = (Q,Σ, δ, q0, F) be a deterministic fuzzy automaton. (1) The extended fuzzy transition function from Q×Σ∗ to F (Q), denoted by the same notation δ, is defined inductively\nas follows:\nδ(q, ) = 1 q\nδ(q, sa) = ∪p∈Q [ δ(q, s)(p) · δ(p, a)]\nfor all q ∈ Q, s ∈ Σ∗, and a ∈ Σ, where 1/q is a singleton in Q and δ(q, s)(p) · δ(p, a) stands for the scale product of the membership δ(q, s)(p) and the fuzzy set δ(p, a).\n(2) The language L(M) accepted by M is a fuzzy subset of Σ∗ with the membership function defined by\nL(M)(s) = height(δ(q0, s) ∩ F)\nfor all s ∈ Σ∗. The membership L(M)(s) is the degree to which s is accepted by M."
    }, {
      "heading" : "3. Nondeterministic fuzzy automata",
      "text" : "This section is devoted to the notions of nondeterministic fuzzy automata (without -moves) and fuzzy languages accepted by them.\nWe start with the following observation. In the literature, the concept of (deterministic) fuzzy automata has long been accepted as a generalization of nondeterministic finite automata. Indeed, it is like this. What we want to point out is that the fundamental property—nondeterminism—in nondeterministic finite automata has not been fully embodied in the generalization. To see this, let us review the definition of nondeterministic finite automata.\nA nondeterministic finite automaton M is a five-tuple (Q,Σ, δ, q0, F), where Q is a finite nonempty set of states, Σ is a finite input alphabet, δ is a mapping of Q × Σ into subsets of Q, q0 in Q is the initial state, and F ⊆ Q is the set of final states.\nAs is well known, the important difference between the nondeterministic and deterministic case is that δ(q, a) is a (possibly empty) set of states rather than a single state. For δ(q, a) = {p1, p2, . . . , pk}, there are at least two kinds of interpretations: One is that M, in state q, scanning a on its input tape, chooses any one of p1, p2, . . . , pk as the next state. The other is that M, in state q, splits itself into k many copies where each of them moves along one of the k transitions from q labeled with a.\nOne can view a nondeterministic finite automaton M = (Q,Σ, δ, q0, F) as a deterministic fuzzy automaton M̂ in the following natural way, which might be the only one. The deterministic fuzzy automaton M̂ is defined as (Q,Σ, δ̂, q0, F̂), where the components different from those in M are given by\nδ̂(q, a)(p) = {\n1, if p ∈ δ(q, a) 0, otherwise and F̂(q) = { 1, if q ∈ F 0, otherwise\nfor any p, q ∈ Q and a ∈ Σ. In light of this, deterministic fuzzy automata are certainly a generalization of nondeterministic finite automata. It should be noted that M̂, in state q, has only one transition labeled with a, i.e., q\na−→ δ̂(q, a), and thus, no nondeterminism arises.\nThe above observation motivates us to consider fuzzy automata with nondeterminism, formalized in the following central definition.\nDefinition 3. A nondeterministic fuzzy automaton M is a five-tuple (Q,Σ, δ, q0, F), where (1) Q is a finite nonempty set of states. (2) Σ is a finite input alphabet. (3) δ : Q × Σ −→ P(F (Q)) is a fuzzy transition function which for each q ∈ Q and a ∈ Σ gives a set δ(q, a) of\npossibility distributions on Q. (4) q0 in Q is the initial state. (5) F in F (Q) is the fuzzy set of final states.\nWe use q a−→ µ to denote that µ ∈ δ(q, a), and refer to q a−→ µ as a transition. Following the interpretations of transitions in nondeterministic finite automata, for δ(q, a) = {µi | i ∈ I}, we may say that the nondeterministic fuzzy automaton M, in state q, scanning a on its input tape, chooses any one of possibility distributions in δ(q, a), say µi, and then enters every state p with possibility degree µi(p). For each state q, the outgoing transitions q\na−→ µ represent the nondeterministic alternatives in the state q. We may also think that M, in state q, splits itself into |I|1 many copies where each of them moves along one of the |I| transitions like q a−→ µi.\n1The notation |I| denotes the cardinality of I, which may be infinite.\nIn contrast with Definition 1, the unique difference between a nondeterministic fuzzy automaton and a deterministic one lies in the fuzzy transition function. For each a ∈ Σ, every state q in a deterministic fuzzy automaton always has exactly one transition (possibly q\na−→ Φ) labeled by a. In other words, a deterministic fuzzy automaton does not allow nondeterministic choices between transitions involving the same input symbol, that is, if q\na−→ µ and q a−→ µ′, then µ = µ′. As opposed to this, in a nondeterministic fuzzy automaton there could be states that have none, one, or more transitions labeled by the same input symbol. Clearly, deterministic fuzzy automata arise as a special case of nondeterministic fuzzy automata by identifying each fuzzy transition function δ : Q × Σ −→ F (Q) with a fuzzy transition function δ′ : Q × Σ −→ P(F (Q)), where δ′ is defined by\nδ′(q, a) = {δ(q, a)}.\nWe now show how to view a nondeterministic finite automaton M = (Q,Σ, δ, q0, F) as a nondeterministic fuzzy automaton. One way of looking at it is to view M as a deterministic fuzzy automaton M̂ and then view M̂ as a nondeterministic fuzzy automaton. As argued prior to Definition 3, this way fails to transfer the nondeterminism. A better way is to view directly M as a nondeterministic fuzzy automaton M′ = (Q,Σ, δ′, q0, F′), where the components different from those in M are given by\nδ′(q, a) = {\n1 p ∣∣∣∣∣ p ∈ δ(q, a)} and F′(q) = { 1, if q ∈ F0, otherwise for any q ∈ Q and a ∈ Σ. For example, δ′(q, a) = { 1 p1 , 1p2 , . . . , 1 pk } if δ(q, a) = {p1, p2, . . . , pk}. In this way, we keep the nondeterminism in the extension from nondeterministic finite automata to nondeterministic fuzzy automata. As usual, we can visualize a nondeterministic fuzzy automaton M = (Q,Σ, δ, q0, F) by a transition diagram. The states of M are circled in the diagram, and in particular, whenever F(q) > 0, we mark the state q by a double circle and write the value F(q) around the double circle. The initial state has an in-going arrow without a source. For any transition, if it has Φ as the possibility distribution, then it is trivial and thus we omit it in the diagram. Otherwise, the transition is depicted via two parts: an arrow for input symbol and a bunch of arrows for the possibility degrees of entering next states. Note that this transition diagram representation will also be applied to deterministic fuzzy automata in the sequel.\nTo understand the definition, let us look at an example.\nExample 1. Consider the nondeterministic fuzzy automaton M = (Q,Σ, δ, q0, F), where Q = {q0, q1, . . . , q4}, Σ = {a, b}, δ is given in Table 1, and F = 0.5q2 + 0.9 q4 . The transition diagram of M is depicted in Figure 1.\nWe are now in the position to define the fuzzy language accepted by a nondeterministic fuzzy automaton. To this end, we need to extend the fuzzy transition function to strings.\nBefore stating the definition, let us fix a notational convention: if Φ ∈ δ(q, a), then we identify δ(q, a) with δ(q, a) − {Φ}, since Φ has no contribution to the fuzzy language.\nDefinition 4. Let M = (Q,Σ, δ, q0, F) be a nondeterministic fuzzy automaton.\n(1) The extended fuzzy transition function from Q × Σ∗ to P(F (Q)), denoted by the same notation δ, is defined inductively as follows:\nδ(q, ) = {\n1 q } δ(q, sa) = { µs(p) · µp\n∣∣∣ µs ∈ δ(q, s), p ∈ Q, µp ∈ δ(p, a)} for all q ∈ Q, s ∈ Σ∗, and a ∈ Σ.\n(2) The language L(M) accepted by M is a fuzzy subset of Σ∗ with the membership function defined by\nL(M)(s) = ∨ {height(µ ∩ F) | µ ∈ δ(q0, s)} for all s ∈ Σ∗. The membership L(M)(s) is the degree to which s is accepted by M.\nFollowing the notion of fuzzy languages for deterministic fuzzy automata, max-min operator has been adopted in the above definition. There is no difficulty to check that this definition is consistent with that of fuzzy languages for deterministic fuzzy automata in the sense that viewing a deterministic fuzzy automaton M as a deterministic fuzzy automaton and using the above definition to compute L(M) give the same result as directly using the definition of fuzzy languages for deterministic fuzzy automata.\nExample 2. Let us revisit Example 1. By definition, we have that\nδ(q0, ) = {\n1 q0\n} ,\nδ(q0, a) = { µ (p) · µp ∣∣∣ µ ∈ δ(q0, ), p ∈ Q, µp ∈ δ(p, a)} =\n{ 0.9 q1 + 0.2 q2 , 0.2 q2 + 0.9 q3 } ,\nδ(q0, aa) = { µa(p) · µp ∣∣∣ µa ∈ δ(q0, a), p ∈ Q, µp ∈ δ(p, a)} =\n{ 0.2 q4 } ,\nδ(q0, ab) = { µa(p) · µp ∣∣∣ µa ∈ δ(q0, a), p ∈ Q, µp ∈ δ(p, b)} =\n{ 0.1 q1 + 0.7 q4 , 0.7 q2 + 0.1 q4 , 0.1 q3 + 0.7 q4 } .\nTherefore,\nL(M)( ) = ∨ {height(µ ∩ F) | µ ∈ δ(q0, )} = 0, L(M)(a) = ∨ {height(µ ∩ F) | µ ∈ δ(q0, a)} = 0.2, L(M)(aa) = ∨ {height(µ ∩ F) | µ ∈ δ(q0, aa)} = 0.2, L(M)(ab) = ∨ {height(µ ∩ F) | µ ∈ δ(q0, ab)} = 0.7.\nWe end this section with a lemma, which will be needed later on.\nLemma 1. Let M = (Q,Σ, δ, q0, F) be a nondeterministic fuzzy automaton. Then L(M)(s) = ∨ {height(µ ∩ F) | µ ∈ δ(q0, s)} = height [(∪µ∈δ(q0,s)µ) ∩ F] for all s ∈ Σ∗.\nProof. For any given s ∈ Σ∗, assume that δ(q0, s) = {µi | i ∈ I}. Then we only need to verify that\n∨ {height(µi ∩ F) | i ∈ I} = height [(∪i∈Iµi) ∩ F] . (1) By definition, we have that\n∨ {height(µi ∩ F) | i ∈ I} = ∨i∈Iheight(µi ∩ F) = ∨i∈I ∨q∈Q [ µi(q) ∧ F(q)\n] = ∨q∈Q ∨i∈I [ µi(q) ∧ F(q)\n] = ∨q∈Q {[∨i∈Iµi(q)] ∧ F(q)} = ∨q∈Q {(∪i∈Iµi)(q) ∧ F(q)} = height [ (∪i∈Iµi) ∩ F ] .\nThis proves Eq. (1), as desired."
    }, {
      "heading" : "4. Nondeterministic fuzzy automata with -moves",
      "text" : "In this section, we extend the concepts of nondeterministic fuzzy automata and fuzzy languages accepted by them to nondeterministic fuzzy automata with -moves. The notion of nondeterministic fuzzy automata with -moves is also a generalization of nondeterministic finite automata with -moves. Recall that represents the empty string. The -move is sometimes called a silent move or silent transition. As for finite automata, -moves can be regarded as internal transitions of a fuzzy automaton.\nA nondeterministic fuzzy automaton with -moves replaces the fuzzy transition function in a nondeterministic fuzzy automaton with one that allows the empty string as a possible input. More concretely, we have the following definition.\nDefinition 5. A nondeterministic fuzzy automaton M with -moves is a five-tuple (Q,Σ, δ, q0, F), where the components Q,Σ, q0, F are the same as those in Definition 3 and the fuzzy transition function δ is a function from Q×(Σ ∪ { }) to P(F (Q)).\nWe now turn our attention to the fuzzy language accepted by a nondeterministic fuzzy automaton with -moves. Like Definition 4, we need to extend the fuzzy transition function to strings. To this end, it is convenient to introduce the following notations.\nLet M = (Q,Σ, δ, q0, F) be a nondeterministic fuzzy automaton with -moves. Following Definition 4, we define a function δ : Q × { }∗ −→ P(F (Q)) as follows:\nδ (q, ) = {\n1 q\n} ∪ δ(q, )\nδ (q, n ) = { µ n (p) · µp ∣∣∣ µ n ∈ δ (q, n), p ∈ Q, µp ∈ δ (p, )} for all q ∈ Q and n ∈ N.\nFurther, for any q ∈ Q, we set ∆ (q) = ∪n∈Nδ (q, n)\nand call it the -closure of q. For any µ ∈ F (Q), the -closure of µ is defined as\n∆ (µ) = {µ} ∪ {µ(q) · η | q ∈ Q, η ∈ ∆ (q)} .\nDefinition 6. Let M = (Q,Σ, δ, q0, F) be a nondeterministic fuzzy automaton with -moves. (1) The extended fuzzy transition function from Q × Σ∗ to P(F (Q)), denoted by δ̂, is defined inductively as follows:\nδ̂(q, ) = ∆ (q) δ̂(q, sa) = ∪ { ∆ ( µs(p) · µp ) ∣∣∣ µs ∈ δ̂(q, s), p ∈ Q, µp ∈ δ(p, a)} for all q ∈ Q, s ∈ Σ∗, and a ∈ Σ.\n(2) The language L(M ) accepted by M is a fuzzy subset of Σ∗ with the membership function defined by\nL(M )(s) = ∨ { height(µ ∩ F) | µ ∈ δ̂(q0, s) } for all s ∈ Σ∗.\nNote that in general, it does not hold that δ̂(q, a) = δ(q, a), because the -moves have been involved. In the same way, it is not necessary that δ̂(q, ) = δ(q, ).\nWe illustrate the above notions by an example.\nExample 3. Let us augment the nondeterministic fuzzy automaton M in Example 1 with -moves. The corresponding fuzzy transition function is defined in Table 2 and the nondeterministic fuzzy automaton M with -moves is shown in\nδ (q0, ) =\nδ (q0, ) =\nBy the same token, we find that δ (q0, n) = {\n1 q0 , 0.7q2\n} for any n ∈ N, and thus, ∆ (q0) = { 1 q0 , 0.7q2 } . Similarly, we get that\n∆ (q1) = {\n1 q1 , 0.8q4\n} , ∆ (q2) = { 1 q2 } , ∆ (q3) = { 1 q3 , 0.5q4 } , and ∆ (q4) = { 1 q4 } .\nFurther, a routine computation shows that δ̂(q0, ) = ∆ (q0) = {\n1 q0 , 0.7 q2\n} ,\nδ̂(q0, a) = ∪ { ∆ ( µ (p) · µp ) ∣∣∣ µ ∈ δ̂(q0, ), p ∈ Q, µp ∈ δ(p, a)} = ∆\n( 0.9 q1 + 0.2 q2 ) ∪ ∆ ( 0.2 q2 + 0.9 q3 ) ∪ ∆ ( 0.5 q4 ) =\n{ 0.9 q1 + 0.2 q2 , 0.2 q2 + 0.9 q3 , 0.9 q1 , 0.2 q2 , 0.9 q3 , 0.5 q4 , 0.8 q4 } .\nSimilarly, we can obtain that\nδ̂(q0, b) = δ̂(q1, a) = δ̂(q2, b) = δ̂(q3, a) = δ̂(q4, a) = δ̂(q4, b) = ∅, δ̂(q1, b) = {\n0.1 q1 + 0.7 q4 , 0.7 q2 + 0.1 q4 , 0.1 q1 , 0.7 q2 , 0.1 q4 , 0.7 q4\n} ,\nδ̂(q2, a) = {\n0.5 q4\n} ,\nδ̂(q3, b) = {\n0.7 q2 + 0.1 q4 , 0.1 q3 + 0.7 q4 , 0.7 q2 , 0.1 q3 , 0.1 q4 , 0.7 q4\n} .\nHence,\nL(M )( ) = ∨ { height(µ ∩ F) | µ ∈ δ̂(q0, ) } = 0.5,\nL(M )(a) = ∨ { height(µ ∩ F) | µ ∈ δ̂(q0, a) } = 0.8,\nL(M )(b) = ∨ { height(µ ∩ F) | µ ∈ δ̂(q0, b) } = 0."
    }, {
      "heading" : "5. Equivalences",
      "text" : "It is well known that for any nondeterministic finite automaton with or without -moves, there exists an equivalent deterministic finite automaton such that both of them accept the same language [15]. In this section, we would like to extend this equivalence to fuzzy automata.\nLet us first establish the following theorem, which shows that nondeterministic fuzzy automata without -moves and deterministic fuzzy automata accept the same class of fuzzy languages.\nTheorem 1. For any nondeterministic fuzzy automaton M, there exists a deterministic fuzzy automaton M′ such that L(M) = L(M′).\nProof. Let M = (Q,Σ, δ, q0, F). We construct M′ = (Q′,Σ′, δ′, q′0, F ′) as follows: All the components are the same as those in M but the fuzzy transition function δ′ : Q′ × Σ′ −→ F (Q′), which is defined by\nδ′(q, a) =  ∪µ∈δ(q,a)µ, if δ(q, a) , ∅ Φ, otherwise\nfor any q ∈ Q = Q′ and a ∈ Σ = Σ′. Clearly, this construction gives rise to a deterministic fuzzy automaton M′. It remains to check that L(M) = L(M′). By Lemma 1, for any s ∈ Σ∗ we have that\nL(M)(s) = height [( ∪µ∈δ(q0,s)µ ) ∩ F ] .\nOn the other hand, it follows from Definition 2 that for any s ∈ Σ∗, L(M′)(s) = height (δ′(q0, s) ∩ F′) = height (δ′(q0, s) ∩ F) . Therefore, to prove L(M) = L(M′), it is sufficient to show that\nδ′(q, s) = ∪µ∈δ(q,s)µ (2)\nfor any q ∈ Q = Q′ and s ∈ Σ∗ = Σ′∗. This will be proved by induction on the length of the string s. The basis step is for strings of length 0, namely, s = . In this case, it follows from definition that δ(q, ) = {1/q} and thus δ′(q, ) =\n1 q = ∪µ∈δ(q, )µ.\nTherefore, the basis step is true. The induction hypothesis is that Eq. (2) holds for all strings s with length n. We now show that for any a ∈ Σ = Σ′,\nδ′(q, sa) = ∪µ∈δ(q,sa)µ. (3)\nIn fact, we get by Definition 2 and the induction hypothesis that\nδ′(q, sa) = ∪p∈Q [ δ′(q, s)(p) · δ′(p, a)]\n= ∪p∈Q [( ∪µs∈δ(q,s)µs ) (p) · δ′(p, a) ] = ∪p∈Q [( ∨µs∈δ(q,s)µs(p) ) · δ′(p, a)\n] = ∪p∈Q [ ∪µs∈δ(q,s)µs(p) · δ′(p, a)\n] = ∪p∈Q ∪µs∈δ(q,s) [ µs(p) · ( ∪µp∈δ(p,a)µp\n)] = ∪p∈Q ∪µs∈δ(q,s) [ ∪µp∈δ(p,a) ( µs(p) · µp\n)] = ∪µs∈δ(q,s) ∪p∈Q ∪µp∈δ(p,a) ( µs(p) · µp\n) = ∪ { µs(p) · µp\n∣∣∣ µs ∈ δ(q, s), p ∈ Q, µp ∈ δ(p, a)} = ∪δ(q, sa) = ∪µ∈δ(q,sa)µ.\nHence, Eq. (3) holds. This completes the proof of the theorem.\nAs an example, let us convert the nondeterministic fuzzy automation in Example 1 into a deterministic one by the construction introduced in the above proof.\nExample 4. Consider the nondeterministic fuzzy automation M in Example 1. Following the construction in the proof of Theorem 1, we set M′ = (Q,Σ, δ′, q0, F), where δ′ is defined in Table 3 and the transition diagram of M′ is depicted in Figure 3.\nTo establish a theorem like Theorem 1 for nondeterministic fuzzy automata with -moves, we need two lemmas.\nLemma 2. Let M = (Q,Σ, δ, q0, F) be a nondeterministic fuzzy automaton with -moves. Then L(M )(s) = ∨ { height(µ ∩ F) | µ ∈ δ̂(q0, s) } = height [( ∪µ∈̂δ(q0,s)µ ) ∩ F ] for all s ∈ Σ∗.\nProof. It is similar to that of Lemma 1, and thus we omit it here.\nThe following lemma, which gives another expression of the extended fuzzy transition function, is useful to prove the next theorem.\nLemma 3. Let M = (Q,Σ, δ, q0, F) be a nondeterministic fuzzy automaton with -moves. Then δ̂(q, sa) = ∪ { ∆ ( µs(p) · µp ) ∣∣∣ µs ∈ δ̂(q, s), p ∈ Q, µp ∈ δ(p, a)} = {µs(p) · µp ∣∣∣ µs ∈ δ̂(q, s), p ∈ Q, µp ∈ δ̂(p, a)} (4) for any q ∈ Q, s ∈ Σ∗, and a ∈ Σ.\nProof. To prove Eq. (4), it suffices to verify that ∪µs∈̂δ(q,s) ∪p∈Q ∪µp∈δ(p,a) ∆ ( µs(p) · µp ) = ∪µs∈̂δ(q,s) ∪p∈Q ∪µp∈̂δ(p,a) { µs(p) · µp } . (5)\nLet α ∈ ∪µs∈̂δ(q,s) ∪p∈Q ∪µp∈δ(p,a)∆ ( µs(p) · µp ) . Then there exist µ1 ∈ δ̂(q, s), p′ ∈ Q, and µ2 ∈ δ(p′, a) such that\nα ∈ ∆ ( µ1(p′) · µ2 ) = { µ1(p′) · µ2 } ∪ {[µ1(p′) ∧ µ2(q′)] · η | q′ ∈ Q, η ∈ ∆ (q′)} . Therefore, we see that either α = µ1(p′) · µ2, or α = [ µ1(p′) ∧ µ2(q′)\n] · η for some q′ ∈ Q and η ∈ δ (q′, k) ⊆ ∆ (q′). For the first case, it follows immediately that α belongs to the right of Eq. (5). For the second case, take µs = µ1, p = p′, and µp = µ2(q′) · η. Noting that µp = µ2(q′) · η ∈ δ̂(p, a), we also find that α belongs to the right of Eq. (5). Consequently, ∪µs∈̂δ(q,s) ∪p∈Q ∪µp∈δ(p,a)∆ ( µs(p) · µp ) ⊆ ∪µs∈̂δ(q,s) ∪p∈Q ∪µp∈̂δ(p,a) { µs(p) · µp } .\nConversely, suppose that α belongs to the right of Eq. (5). Then there are µ1 ∈ δ̂(q, s), p′ ∈ Q, and µ2 ∈ δ̂(p′, a) such that α = µ1(p′) · µ2. Because δ̂(p′, a) = ∪µ ∈̂δ(p′, ) ∪r∈Q ∪µr∈δ(r,a)∆ (µ (r) · µr), there exist µ ∈ δ̂(p\n′, ), r ∈ Q, and µr ∈ δ(r, a) such that\nµ2 ∈ ∆ (µ (r) · µr) = {µ (r) · µr} ∪ {[ µ (r) ∧ µr(q′) ] · η | q′ ∈ Q, η ∈ ∆ (q′)} . We thus get that either µ2 = µ (r) · µr, or µ2 = [ µ (r) ∧ µr(q′)\n] · η for some q′ ∈ Q and η ∈ δ (q′, k) ⊆ ∆ (q′). For both of the cases, take µs = µ1(p′) · µ , p = r, and µp = µr. Since µs = µ1(p′) · µ ∈ δ̂(q, s), we see that α belongs to the left of Eq. (5) in either case. Hence, Eq. (5) holds, finishing the proof of the lemma.\nWith the above lemmas, we can now show that both nondeterministic fuzzy automata with -moves and nondeterministic fuzzy automata without -moves accept the same class of fuzzy languages.\nTheorem 2. For any nondeterministic fuzzy automaton M with -moves, there exists a nondeterministic fuzzy automaton M′ such that L(M ) = L(M′).\nProof. Let M = (Q,Σ, δ, q0, F). We construct a nondeterministic fuzzy automaton M′ = (Q′,Σ′, δ′, q′0, F ′) as follows: Q′ = Q, Σ′ = Σ, q′0 = q0, and δ ′ : Q′ × Σ′ −→ P(F (Q′)) and F′ are defined by\nδ′(q, a) = δ̂(q, a), F′(q) = height [( ∪µ∈∆ (q)µ ) ∩ F ] for any q ∈ Q′ = Q and a ∈ Σ′ = Σ, where δ̂ is the extended fuzzy transition function introduced in Definition 6. Clearly, M′ is a nondeterministic fuzzy automaton without -moves. It remains to check that L(M ) = L(M′), i.e., L(M )(s) = L(M′)(s) for every s ∈ Σ∗. We prove it by induction on the length of s.\nFor s = , we get by Lemma 2 that L(M )( ) = height [( ∪µ∈̂δ(q0, )µ ) ∩ F ] = height [( ∪µ∈∆ (q0)µ ) ∩ F ] .\nOn the other hand, it follows from Lemma 1 and the construction of M′ that\nL(M′)( ) = height [( ∪µ∈δ′(q0, )µ ) ∩ F′ ] = F′(q0) = height [( ∪µ∈∆ (q0)µ ) ∩ F ] .\nWhence, we obtain that L(M )( ) = L(M′)( ), which establishes the basis step. For the induction step, suppose that L(M )(s) = L(M′)(s) for every s ∈ Σ∗ with length less than or equal to n. Then it follows from Lemmas 1 and 2 that\n∨z∈Q ∨µs∈̂δ(q0,s) [ µs(z) ∧ F(z) ] = ∨z∈Q ∨µs∈δ′(q0,s) ∨η∈∆ (z) ∨y∈Q [ µs(z) ∧ η(y) ∧ F(y) ] . (6)\nTo consider sa, we first prove the following claim: For any q ∈ Q and w ∈ Σ∗ with w , ,\nδ′(q,w) = δ̂(q,w). (7)\nAgain, we use induction on the length of w. In the basis step, namely, w ∈ Σ, the claim follows directly from the definition of δ′. The induction hypothesis is that δ′(q,w) = δ̂(q,w) for all strings w with length less than or equal to n. We now prove the same for strings of the form wa. By Definition 4, we have that\nδ′(q,wa) = { µw(p) · µp ∣∣∣ µw ∈ δ′(q,w), p ∈ Q, µp ∈ δ′(p, a)} , and by Lemma 3 we see that\nδ̂(q,wa) = { µw(p) · µp ∣∣∣ µw ∈ δ̂(q,w), p ∈ Q, µp ∈ δ̂(p, a)} . Therefore, we obtain by the basis step and the induction hypothesis that δ′(q,wa) = δ̂(q,wa). This proves the claim.\nWe are ready to verify that L(M )(sa) = L(M′)(sa). By using Lemmas 1 and 2 and Eq. (6), we have that L(M′)(sa) = ∨z∈Q ∨µ∈δ′(q0,sa) [ µ(z) ∧ F′(z)]\n= ∨z∈Q ∨µ∈δ′(q0,sa) { µ(z) ∧ [ ∨y∈Q ∨η∈∆ (z) [ η(y) ∧ F(y)]]}\n= ∨z∈Q ∨µ∈δ′(q0,sa) ∨y∈Q ∨η∈∆ (z) [ µ(z) ∧ η(y) ∧ F(y)]\n= ∨z∈Q ∨µs∈δ′(q0,s) ∨p∈Q ∨µp∈δ′(p,a) ∨y∈Q ∨η∈∆ (z) [ µs(p) ∧ µp(z) ∧ η(y) ∧ F(y) ] = ∨z∈Q ∨µs∈δ′(q0,s) ∨p∈Q ∨µp∈δ′(p,a) [ µs(p) ∧ µp(z) ∧ F(z)\n] = ∨z∈Q ∨µs∈̂δ(q0,s) ∨p∈Q ∨µp∈̂δ(p,a) [ µs(p) ∧ µp(z) ∧ F(z)\n] = ∨z∈Q ∨µ∈̂δ(q0,sa) [ µ(z) ∧ F(z)] = L(M )(sa),\nnamely, L(M )(sa) = L(M′)(sa). This completes the proof of the theorem.\nTo illustrate the construction in the above theorem, we examine an example.\nExample 5. Consider the nondeterministic fuzzy automaton M with -moves in Example 3. Using the construction in the proof of Theorem 2, the corresponding nondeterministic fuzzy automaton is M′ = (Q,Σ, δ′, q0, F′), where δ′ is specified by Table 4 and F′ is defined as follows:\nF′(q0) = height [( ∪µ∈∆ (q0)µ ) ∩ F ] = 0.5,\nF′(q1) = height [( ∪µ∈∆ (q1)µ ) ∩ F ] = 0.8,\nF′(q2) = height [( ∪µ∈∆ (q2)µ ) ∩ F ] = 0.5,\nF′(q3) = height [( ∪µ∈∆ (q3)µ ) ∩ F ] = 0.5,\nF′(q4) = height [( ∪µ∈∆ (q4)µ ) ∩ F ] = 0.9.\nSince the transition diagram of M′ is complicated, we omit it here.\nSummarizing Theorems 1 and 2, we get immediately the following corollary.\nCorollary 1. Let L be a fuzzy language. Then the following statements are equivalent: (1) There exists a deterministic fuzzy automaton M such that L(M) = L. (2) There exists a nondeterministic fuzzy automaton M′ such that L(M′) = L. (3) There exists a nondeterministic fuzzy automaton M with -moves such that L(M ) = L."
    }, {
      "heading" : "6. Conclusion",
      "text" : "In the paper, we have investigated fuzzy automata with nondeterminism by introducing nondeterministic fuzzy automata and nondeterministic fuzzy automata with -moves. Like the relationship among deterministic finite automata, nondeterministic finite automata, and nondeterministic finite automata with -moves, we have shown that deterministic fuzzy automata, nondeterministic fuzzy automata, and nondeterministic fuzzy automata with -moves are equivalent in the sense that they accept the same class of fuzzy languages. As an application of nondeterministic fuzzy automata, we are currently using them to model and specify nondeterministic fuzzy discrete-event systems."
    }, {
      "heading" : "Acknowledgements",
      "text" : "This work was supported by the National Natural Science Foundation of China under Grants 60873061, 60973004, and 70890080 and by the National Basic Research Program of China (973 Program) under Grants 2007CB311003, 2009CB320701, and 2010CB328103."
    } ],
    "references" : [ {
      "title" : "Fuzzy automata with -moves compute fuzzy measures between strings",
      "author" : [ "J.J. Astrain", "J.R.G. de Mendivil", "J.R. Garitagoitia" ],
      "venue" : "Fuzzy Sets Syst.,",
      "citeRegEx" : "1",
      "shortCiteRegEx" : "1",
      "year" : 2006
    }, {
      "title" : "A bibliography on fuzzy automata",
      "author" : [ "P.R.J. Asveld" ],
      "venue" : "grammars and lanuages. Bull. Eur. Assoc. Theoret. Comput. Sci., 58: 187–196",
      "citeRegEx" : "2",
      "shortCiteRegEx" : null,
      "year" : 1996
    }, {
      "title" : "Algebraic aspects of families of fuzzy languages",
      "author" : [ "P.R.J. Asveld" ],
      "venue" : "Theoret. Comput. Sci., 293: 417–445",
      "citeRegEx" : "3",
      "shortCiteRegEx" : null,
      "year" : 2003
    }, {
      "title" : "Pattern recognition using temporal fuzzy automata",
      "author" : [ "G. Bailador", "G. Trivino" ],
      "venue" : "Fuzzy Sets Syst.,",
      "citeRegEx" : "4",
      "shortCiteRegEx" : "4",
      "year" : 2010
    }, {
      "title" : "Determinism and fuzzy automata",
      "author" : [ "R. Bělohlávek" ],
      "venue" : "Inform. Sci.,",
      "citeRegEx" : "5",
      "shortCiteRegEx" : "5",
      "year" : 2002
    }, {
      "title" : "Supervisory control of fuzzy discrete event systems",
      "author" : [ "Y. Cao", "M. Ying" ],
      "venue" : "IEEE Trans. Syst., Man, Cybern. B, Cybern.,",
      "citeRegEx" : "6",
      "shortCiteRegEx" : "6",
      "year" : 2005
    }, {
      "title" : "Retraction and generalized extension of computing with words",
      "author" : [ "Y. Cao", "M. Ying", "G. Chen" ],
      "venue" : "IEEE Trans. Fuzzy Syst.,",
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 2007
    }, {
      "title" : "New directions in fuzzy automata",
      "author" : [ "M. Doostfatemeh", "S.C. Kremer" ],
      "venue" : "Int. J. Approx. Reason., 38(2): 175–214",
      "citeRegEx" : "8",
      "shortCiteRegEx" : null,
      "year" : 2005
    }, {
      "title" : "Fuzzy Sets and Systems: Theory and Applications",
      "author" : [ "D. Dubois", "H. Prade" ],
      "venue" : "Academic, New York",
      "citeRegEx" : "9",
      "shortCiteRegEx" : null,
      "year" : 1980
    }, {
      "title" : "Fuzzy tree automata",
      "author" : [ "Z. Esik", "G. Liu" ],
      "venue" : "Fuzzy Sets Syst.,",
      "citeRegEx" : "10",
      "shortCiteRegEx" : "10",
      "year" : 2007
    }, {
      "title" : "Parameter identification of recurrent fuzzy systems with fuzzy finite-state automata representation",
      "author" : [ "C.A. Gama", "A.G. Evsukoff", "P. Weber", "N.F.F. Ebecken" ],
      "venue" : "IEEE Trans. Fuzzy Syst.,",
      "citeRegEx" : "11",
      "shortCiteRegEx" : "11",
      "year" : 2008
    }, {
      "title" : "Deformed fuzzy automata for correcting imperfect strings of fuzzy symbols",
      "author" : [ "J.R. Garitagoitia", "J.R.G. de Mendivil", "J. Echanobe", "J.J. Astrain", "F. Farina" ],
      "venue" : "IEEE Trans. Fuzzy Syst.,",
      "citeRegEx" : "12",
      "shortCiteRegEx" : "12",
      "year" : 2003
    }, {
      "title" : "Encoding nondeterministic fuzzy tree automata into recursive neural networks",
      "author" : [ "M. Gori", "A. Petrosino" ],
      "venue" : "IEEE Trans. Neur. Net.,",
      "citeRegEx" : "13",
      "shortCiteRegEx" : "13",
      "year" : 2004
    }, {
      "title" : "Communicating Sequential Processes",
      "author" : [ "C.A.R. Hoare" ],
      "venue" : "Prentice-Hall, Englewood Cliffs, NJ",
      "citeRegEx" : "14",
      "shortCiteRegEx" : null,
      "year" : 1985
    }, {
      "title" : "Introduction to Automata Theory",
      "author" : [ "J.E. Hopcroft", "J.D. Ullman" ],
      "venue" : "Languages, and Computation. Reading, MA: Addison-Wesley Publishing",
      "citeRegEx" : "15",
      "shortCiteRegEx" : null,
      "year" : 1979
    }, {
      "title" : "Fuzzy Switching and Automata: Theory and Applications",
      "author" : [ "A. Kandel", "S.C. Lee" ],
      "venue" : "Crane Russak, New York",
      "citeRegEx" : "16",
      "shortCiteRegEx" : null,
      "year" : 1979
    }, {
      "title" : "Fuzzy ω-automata",
      "author" : [ "K. Krithivasan", "K. Sharda" ],
      "venue" : "Inform. Sci.,",
      "citeRegEx" : "17",
      "shortCiteRegEx" : "17",
      "year" : 2001
    }, {
      "title" : "Note on fuzzy languages",
      "author" : [ "E.T. Lee", "L.A. Zadeh" ],
      "venue" : "Inform. Sci., 1: 421–434",
      "citeRegEx" : "18",
      "shortCiteRegEx" : null,
      "year" : 1969
    }, {
      "title" : "Approximation and robustness of fuzzy finite automata",
      "author" : [ "Y.M. Li" ],
      "venue" : "Int. J. Approx. Reason., 47(2): 247–257",
      "citeRegEx" : "19",
      "shortCiteRegEx" : null,
      "year" : 2008
    }, {
      "title" : "Fuzzy Turing machines: variants and universality",
      "author" : [ "Y.M. Li" ],
      "venue" : "IEEE Trans. Fuzzy Syst.,",
      "citeRegEx" : "20",
      "shortCiteRegEx" : "20",
      "year" : 2008
    }, {
      "title" : "Fuzzy finite automata and fuzzy regular expressions with membership values in lattice-ordered monoids",
      "author" : [ "Y.M. Li", "W. Pedrycz" ],
      "venue" : "Fuzzy Sets Syst.,",
      "citeRegEx" : "21",
      "shortCiteRegEx" : "21",
      "year" : 2005
    }, {
      "title" : "The relationships among several types of fuzzy automata",
      "author" : [ "Z.H. Li", "P. Li", "Y.M. Li" ],
      "venue" : "Inform. Sci.,",
      "citeRegEx" : "22",
      "shortCiteRegEx" : "22",
      "year" : 2006
    }, {
      "title" : "Modeling and control of fuzzy discrete event systems",
      "author" : [ "F. Lin", "H. Ying" ],
      "venue" : "IEEE Trans. Syst., Man, Cybern. B, Cybern.,",
      "citeRegEx" : "23",
      "shortCiteRegEx" : "23",
      "year" : 2002
    }, {
      "title" : "On fuzzy regular languages",
      "author" : [ "D.S. Malik", "J.N. Mordeson", "M.K. Sen" ],
      "venue" : "Inform. Sci., 88: 263–273",
      "citeRegEx" : "24",
      "shortCiteRegEx" : null,
      "year" : 1996
    }, {
      "title" : "Some considerations on fuzzy automata",
      "author" : [ "M. Mizumoto", "J. Toyoda", "K. Tanaka" ],
      "venue" : "J. Comput. Syst. Sci., 3(4): 409–422",
      "citeRegEx" : "25",
      "shortCiteRegEx" : null,
      "year" : 1969
    }, {
      "title" : "Fuzzy Automata and Languages: Theory and Applications",
      "author" : [ "J.N. Mordeson", "D.S. Malik" ],
      "venue" : "Chapman N Hall/CRC, Boca Raton, FL",
      "citeRegEx" : "26",
      "shortCiteRegEx" : null,
      "year" : 2002
    }, {
      "title" : "Characterizations of fuzzy finite automata",
      "author" : [ "D.W. Qiu" ],
      "venue" : "Fuzzy Sets Syst.,",
      "citeRegEx" : "27",
      "shortCiteRegEx" : "27",
      "year" : 2004
    }, {
      "title" : "Supervisory control of fuzzy discrete event systems: A formal approach",
      "author" : [ "D.W. Qiu" ],
      "venue" : "IEEE Trans. Syst., Man, Cybern. B, Cybern.,",
      "citeRegEx" : "28",
      "shortCiteRegEx" : "28",
      "year" : 2005
    }, {
      "title" : "Finite automata and their decision problems",
      "author" : [ "M.O. Rabin", "D. Scott" ],
      "venue" : "IBM J. Res. Devel., 3(2): 115–125",
      "citeRegEx" : "29",
      "shortCiteRegEx" : null,
      "year" : 1959
    }, {
      "title" : "Fuzzy state automata and applications to mobile robot control",
      "author" : [ "L.M. Reyneri", "D. Morano" ],
      "venue" : "Intell. Autom. Soft Comput., 11(2): 111–121",
      "citeRegEx" : "30",
      "shortCiteRegEx" : null,
      "year" : 2005
    }, {
      "title" : "Fuzzy stochastic automata for intelligent vehicle control",
      "author" : [ "G.G. Rigatos" ],
      "venue" : "IEEE Trans. Indust. Elect.,",
      "citeRegEx" : "31",
      "shortCiteRegEx" : "31",
      "year" : 2003
    }, {
      "title" : "Fault detection and isolation based on fuzzy automata",
      "author" : [ "G.G. Rigatos" ],
      "venue" : "Inform. Sci.,",
      "citeRegEx" : "32",
      "shortCiteRegEx" : "32",
      "year" : 2009
    }, {
      "title" : "Fuzzy automata and languages",
      "author" : [ "E.S. Santos" ],
      "venue" : "Inform. Sci., 10(3): 193–197",
      "citeRegEx" : "33",
      "shortCiteRegEx" : null,
      "year" : 1976
    }, {
      "title" : "Clinical monitoring with fuzzy automata",
      "author" : [ "F. Steimann", "K.P. Adlassnig" ],
      "venue" : "Fuzzy Sets Syst.,",
      "citeRegEx" : "34",
      "shortCiteRegEx" : "34",
      "year" : 1994
    }, {
      "title" : "Fuzzy automata with fuzzy relief",
      "author" : [ "J. Virant", "N. Zimic" ],
      "venue" : "IEEE Trans. Fuzzy Syst.,",
      "citeRegEx" : "35",
      "shortCiteRegEx" : "35",
      "year" : 1995
    }, {
      "title" : "On generalizations of adaptive algorithm and application of the fuzzy sets concept to pattern classification",
      "author" : [ "W.G. Wee" ],
      "venue" : "Ph.d. thesis, Purdue University",
      "citeRegEx" : "36",
      "shortCiteRegEx" : null,
      "year" : 1967
    }, {
      "title" : "A formulation of fuzzy automata and its application as a model of learning systems",
      "author" : [ "W.G. Wee", "K.S. Fu" ],
      "venue" : "IEEE Trans. Syst. Sci. Cybern., 5(3): 215–223",
      "citeRegEx" : "37",
      "shortCiteRegEx" : null,
      "year" : 1969
    }, {
      "title" : "Fuzzy pushdown automata",
      "author" : [ "H.Y. Xing" ],
      "venue" : "Fuzzy Sets Syst.,",
      "citeRegEx" : "38",
      "shortCiteRegEx" : "38",
      "year" : 2007
    }, {
      "title" : "A fuzzy discrete event system approach to determining optimal HIV/AIDS treatment regimens",
      "author" : [ "H. Ying", "F. Lin", "R.D. MacArthur", "J.A. Cohn", "D.C. Barth-Jones", "H. Ye", "L.R. Crane" ],
      "venue" : "IEEE Trans. Inform. Techn. Biomed.,",
      "citeRegEx" : "39",
      "shortCiteRegEx" : "39",
      "year" : 2006
    }, {
      "title" : "Fuzzy sets",
      "author" : [ "L.A. Zadeh" ],
      "venue" : "Inform. Contr., 8: 338–353",
      "citeRegEx" : "40",
      "shortCiteRegEx" : null,
      "year" : 1965
    } ],
    "referenceMentions" : [ {
      "referenceID" : 14,
      "context" : "Automata theory is closely related to formal language theory as the automata are often classified by the class of formal languages they are able to recognize [15].",
      "startOffset" : 158,
      "endOffset" : 162
    }, {
      "referenceID" : 35,
      "context" : "The mathematical formulation of fuzzy automata was first proposed by Wee in 1967 [36].",
      "startOffset" : 81,
      "endOffset" : 85
    }, {
      "referenceID" : 17,
      "context" : "A fuzzy language over an alphabet Σ, originally introduced in [18, 25], is defined as a fuzzy subset of Σ∗, where Σ∗ stands for the Kleene closure of Σ.",
      "startOffset" : 62,
      "endOffset" : 70
    }, {
      "referenceID" : 24,
      "context" : "A fuzzy language over an alphabet Σ, originally introduced in [18, 25], is defined as a fuzzy subset of Σ∗, where Σ∗ stands for the Kleene closure of Σ.",
      "startOffset" : 62,
      "endOffset" : 70
    }, {
      "referenceID" : 1,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 135,
      "endOffset" : 190
    }, {
      "referenceID" : 5,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 135,
      "endOffset" : 190
    }, {
      "referenceID" : 6,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 135,
      "endOffset" : 190
    }, {
      "referenceID" : 7,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 135,
      "endOffset" : 190
    }, {
      "referenceID" : 8,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 135,
      "endOffset" : 190
    }, {
      "referenceID" : 9,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 135,
      "endOffset" : 190
    }, {
      "referenceID" : 15,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 135,
      "endOffset" : 190
    }, {
      "referenceID" : 16,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 135,
      "endOffset" : 190
    }, {
      "referenceID" : 21,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 135,
      "endOffset" : 190
    }, {
      "referenceID" : 22,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 135,
      "endOffset" : 190
    }, {
      "referenceID" : 25,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 135,
      "endOffset" : 190
    }, {
      "referenceID" : 26,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 135,
      "endOffset" : 190
    }, {
      "referenceID" : 27,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 135,
      "endOffset" : 190
    }, {
      "referenceID" : 32,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 135,
      "endOffset" : 190
    }, {
      "referenceID" : 37,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 135,
      "endOffset" : 190
    }, {
      "referenceID" : 0,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 279,
      "endOffset" : 333
    }, {
      "referenceID" : 3,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 279,
      "endOffset" : 333
    }, {
      "referenceID" : 10,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 279,
      "endOffset" : 333
    }, {
      "referenceID" : 11,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 279,
      "endOffset" : 333
    }, {
      "referenceID" : 12,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 279,
      "endOffset" : 333
    }, {
      "referenceID" : 19,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 279,
      "endOffset" : 333
    }, {
      "referenceID" : 20,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 279,
      "endOffset" : 333
    }, {
      "referenceID" : 29,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 279,
      "endOffset" : 333
    }, {
      "referenceID" : 30,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 279,
      "endOffset" : 333
    }, {
      "referenceID" : 31,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 279,
      "endOffset" : 333
    }, {
      "referenceID" : 33,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 279,
      "endOffset" : 333
    }, {
      "referenceID" : 34,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 279,
      "endOffset" : 333
    }, {
      "referenceID" : 36,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 279,
      "endOffset" : 333
    }, {
      "referenceID" : 38,
      "context" : "In the literature up to now, various variants of fuzzy automata have been proposed in different modeling situations (see, for example, [2, 6, 7, 8, 9, 10, 16, 17, 22, 23, 26, 27, 28, 33, 38]) and the notions of fuzzy automata and fuzzy languages have proved useful in many areas [1, 4, 11, 12, 13, 20, 21, 30, 31, 32, 34, 35, 37, 39].",
      "startOffset" : 279,
      "endOffset" : 333
    }, {
      "referenceID" : 0,
      "context" : "In terms of fuzzy transition functions, fuzzy automata may be broadly classified into three types: The first type [1, 3, 6, 7, 9, 11, 12, 13, 16, 21, 22, 23, 27, 28, 32, 33, 35, 37, 39] uses fuzzy transition functions like δ : Q × Σ −→ F (Q), where Q represents the state set, Σ is the input alphabet, and F (Q) is the set of all fuzzy subsets of Q.",
      "startOffset" : 114,
      "endOffset" : 185
    }, {
      "referenceID" : 2,
      "context" : "In terms of fuzzy transition functions, fuzzy automata may be broadly classified into three types: The first type [1, 3, 6, 7, 9, 11, 12, 13, 16, 21, 22, 23, 27, 28, 32, 33, 35, 37, 39] uses fuzzy transition functions like δ : Q × Σ −→ F (Q), where Q represents the state set, Σ is the input alphabet, and F (Q) is the set of all fuzzy subsets of Q.",
      "startOffset" : 114,
      "endOffset" : 185
    }, {
      "referenceID" : 5,
      "context" : "In terms of fuzzy transition functions, fuzzy automata may be broadly classified into three types: The first type [1, 3, 6, 7, 9, 11, 12, 13, 16, 21, 22, 23, 27, 28, 32, 33, 35, 37, 39] uses fuzzy transition functions like δ : Q × Σ −→ F (Q), where Q represents the state set, Σ is the input alphabet, and F (Q) is the set of all fuzzy subsets of Q.",
      "startOffset" : 114,
      "endOffset" : 185
    }, {
      "referenceID" : 6,
      "context" : "In terms of fuzzy transition functions, fuzzy automata may be broadly classified into three types: The first type [1, 3, 6, 7, 9, 11, 12, 13, 16, 21, 22, 23, 27, 28, 32, 33, 35, 37, 39] uses fuzzy transition functions like δ : Q × Σ −→ F (Q), where Q represents the state set, Σ is the input alphabet, and F (Q) is the set of all fuzzy subsets of Q.",
      "startOffset" : 114,
      "endOffset" : 185
    }, {
      "referenceID" : 8,
      "context" : "In terms of fuzzy transition functions, fuzzy automata may be broadly classified into three types: The first type [1, 3, 6, 7, 9, 11, 12, 13, 16, 21, 22, 23, 27, 28, 32, 33, 35, 37, 39] uses fuzzy transition functions like δ : Q × Σ −→ F (Q), where Q represents the state set, Σ is the input alphabet, and F (Q) is the set of all fuzzy subsets of Q.",
      "startOffset" : 114,
      "endOffset" : 185
    }, {
      "referenceID" : 10,
      "context" : "In terms of fuzzy transition functions, fuzzy automata may be broadly classified into three types: The first type [1, 3, 6, 7, 9, 11, 12, 13, 16, 21, 22, 23, 27, 28, 32, 33, 35, 37, 39] uses fuzzy transition functions like δ : Q × Σ −→ F (Q), where Q represents the state set, Σ is the input alphabet, and F (Q) is the set of all fuzzy subsets of Q.",
      "startOffset" : 114,
      "endOffset" : 185
    }, {
      "referenceID" : 11,
      "context" : "In terms of fuzzy transition functions, fuzzy automata may be broadly classified into three types: The first type [1, 3, 6, 7, 9, 11, 12, 13, 16, 21, 22, 23, 27, 28, 32, 33, 35, 37, 39] uses fuzzy transition functions like δ : Q × Σ −→ F (Q), where Q represents the state set, Σ is the input alphabet, and F (Q) is the set of all fuzzy subsets of Q.",
      "startOffset" : 114,
      "endOffset" : 185
    }, {
      "referenceID" : 12,
      "context" : "In terms of fuzzy transition functions, fuzzy automata may be broadly classified into three types: The first type [1, 3, 6, 7, 9, 11, 12, 13, 16, 21, 22, 23, 27, 28, 32, 33, 35, 37, 39] uses fuzzy transition functions like δ : Q × Σ −→ F (Q), where Q represents the state set, Σ is the input alphabet, and F (Q) is the set of all fuzzy subsets of Q.",
      "startOffset" : 114,
      "endOffset" : 185
    }, {
      "referenceID" : 15,
      "context" : "In terms of fuzzy transition functions, fuzzy automata may be broadly classified into three types: The first type [1, 3, 6, 7, 9, 11, 12, 13, 16, 21, 22, 23, 27, 28, 32, 33, 35, 37, 39] uses fuzzy transition functions like δ : Q × Σ −→ F (Q), where Q represents the state set, Σ is the input alphabet, and F (Q) is the set of all fuzzy subsets of Q.",
      "startOffset" : 114,
      "endOffset" : 185
    }, {
      "referenceID" : 20,
      "context" : "In terms of fuzzy transition functions, fuzzy automata may be broadly classified into three types: The first type [1, 3, 6, 7, 9, 11, 12, 13, 16, 21, 22, 23, 27, 28, 32, 33, 35, 37, 39] uses fuzzy transition functions like δ : Q × Σ −→ F (Q), where Q represents the state set, Σ is the input alphabet, and F (Q) is the set of all fuzzy subsets of Q.",
      "startOffset" : 114,
      "endOffset" : 185
    }, {
      "referenceID" : 21,
      "context" : "In terms of fuzzy transition functions, fuzzy automata may be broadly classified into three types: The first type [1, 3, 6, 7, 9, 11, 12, 13, 16, 21, 22, 23, 27, 28, 32, 33, 35, 37, 39] uses fuzzy transition functions like δ : Q × Σ −→ F (Q), where Q represents the state set, Σ is the input alphabet, and F (Q) is the set of all fuzzy subsets of Q.",
      "startOffset" : 114,
      "endOffset" : 185
    }, {
      "referenceID" : 22,
      "context" : "In terms of fuzzy transition functions, fuzzy automata may be broadly classified into three types: The first type [1, 3, 6, 7, 9, 11, 12, 13, 16, 21, 22, 23, 27, 28, 32, 33, 35, 37, 39] uses fuzzy transition functions like δ : Q × Σ −→ F (Q), where Q represents the state set, Σ is the input alphabet, and F (Q) is the set of all fuzzy subsets of Q.",
      "startOffset" : 114,
      "endOffset" : 185
    }, {
      "referenceID" : 26,
      "context" : "In terms of fuzzy transition functions, fuzzy automata may be broadly classified into three types: The first type [1, 3, 6, 7, 9, 11, 12, 13, 16, 21, 22, 23, 27, 28, 32, 33, 35, 37, 39] uses fuzzy transition functions like δ : Q × Σ −→ F (Q), where Q represents the state set, Σ is the input alphabet, and F (Q) is the set of all fuzzy subsets of Q.",
      "startOffset" : 114,
      "endOffset" : 185
    }, {
      "referenceID" : 27,
      "context" : "In terms of fuzzy transition functions, fuzzy automata may be broadly classified into three types: The first type [1, 3, 6, 7, 9, 11, 12, 13, 16, 21, 22, 23, 27, 28, 32, 33, 35, 37, 39] uses fuzzy transition functions like δ : Q × Σ −→ F (Q), where Q represents the state set, Σ is the input alphabet, and F (Q) is the set of all fuzzy subsets of Q.",
      "startOffset" : 114,
      "endOffset" : 185
    }, {
      "referenceID" : 31,
      "context" : "In terms of fuzzy transition functions, fuzzy automata may be broadly classified into three types: The first type [1, 3, 6, 7, 9, 11, 12, 13, 16, 21, 22, 23, 27, 28, 32, 33, 35, 37, 39] uses fuzzy transition functions like δ : Q × Σ −→ F (Q), where Q represents the state set, Σ is the input alphabet, and F (Q) is the set of all fuzzy subsets of Q.",
      "startOffset" : 114,
      "endOffset" : 185
    }, {
      "referenceID" : 32,
      "context" : "In terms of fuzzy transition functions, fuzzy automata may be broadly classified into three types: The first type [1, 3, 6, 7, 9, 11, 12, 13, 16, 21, 22, 23, 27, 28, 32, 33, 35, 37, 39] uses fuzzy transition functions like δ : Q × Σ −→ F (Q), where Q represents the state set, Σ is the input alphabet, and F (Q) is the set of all fuzzy subsets of Q.",
      "startOffset" : 114,
      "endOffset" : 185
    }, {
      "referenceID" : 34,
      "context" : "In terms of fuzzy transition functions, fuzzy automata may be broadly classified into three types: The first type [1, 3, 6, 7, 9, 11, 12, 13, 16, 21, 22, 23, 27, 28, 32, 33, 35, 37, 39] uses fuzzy transition functions like δ : Q × Σ −→ F (Q), where Q represents the state set, Σ is the input alphabet, and F (Q) is the set of all fuzzy subsets of Q.",
      "startOffset" : 114,
      "endOffset" : 185
    }, {
      "referenceID" : 36,
      "context" : "In terms of fuzzy transition functions, fuzzy automata may be broadly classified into three types: The first type [1, 3, 6, 7, 9, 11, 12, 13, 16, 21, 22, 23, 27, 28, 32, 33, 35, 37, 39] uses fuzzy transition functions like δ : Q × Σ −→ F (Q), where Q represents the state set, Σ is the input alphabet, and F (Q) is the set of all fuzzy subsets of Q.",
      "startOffset" : 114,
      "endOffset" : 185
    }, {
      "referenceID" : 38,
      "context" : "In terms of fuzzy transition functions, fuzzy automata may be broadly classified into three types: The first type [1, 3, 6, 7, 9, 11, 12, 13, 16, 21, 22, 23, 27, 28, 32, 33, 35, 37, 39] uses fuzzy transition functions like δ : Q × Σ −→ F (Q), where Q represents the state set, Σ is the input alphabet, and F (Q) is the set of all fuzzy subsets of Q.",
      "startOffset" : 114,
      "endOffset" : 185
    }, {
      "referenceID" : 0,
      "context" : "Note that such a fuzzy transition function can be equivalently converted into δ′ : Q × Σ × Q −→ [0, 1] and can also be represented by fuzzy states and fuzzy transition matrices.",
      "startOffset" : 96,
      "endOffset" : 102
    }, {
      "referenceID" : 0,
      "context" : "Frequently the interval [0, 1] has been replaced by a lattice or other suitable algebraic structure.",
      "startOffset" : 24,
      "endOffset" : 30
    }, {
      "referenceID" : 4,
      "context" : "The second type [5, 24, 34] employs the same transition function as that of a deterministic finite automaton",
      "startOffset" : 16,
      "endOffset" : 27
    }, {
      "referenceID" : 23,
      "context" : "The second type [5, 24, 34] employs the same transition function as that of a deterministic finite automaton",
      "startOffset" : 16,
      "endOffset" : 27
    }, {
      "referenceID" : 33,
      "context" : "The second type [5, 24, 34] employs the same transition function as that of a deterministic finite automaton",
      "startOffset" : 16,
      "endOffset" : 27
    }, {
      "referenceID" : 3,
      "context" : "The third type [4, 8, 10, 17, 20, 38] adds more parameters or components to the first type.",
      "startOffset" : 15,
      "endOffset" : 37
    }, {
      "referenceID" : 7,
      "context" : "The third type [4, 8, 10, 17, 20, 38] adds more parameters or components to the first type.",
      "startOffset" : 15,
      "endOffset" : 37
    }, {
      "referenceID" : 9,
      "context" : "The third type [4, 8, 10, 17, 20, 38] adds more parameters or components to the first type.",
      "startOffset" : 15,
      "endOffset" : 37
    }, {
      "referenceID" : 16,
      "context" : "The third type [4, 8, 10, 17, 20, 38] adds more parameters or components to the first type.",
      "startOffset" : 15,
      "endOffset" : 37
    }, {
      "referenceID" : 19,
      "context" : "The third type [4, 8, 10, 17, 20, 38] adds more parameters or components to the first type.",
      "startOffset" : 15,
      "endOffset" : 37
    }, {
      "referenceID" : 37,
      "context" : "The third type [4, 8, 10, 17, 20, 38] adds more parameters or components to the first type.",
      "startOffset" : 15,
      "endOffset" : 37
    }, {
      "referenceID" : 13,
      "context" : "As is well known, nondeterminism is, however, essential for modeling scheduling freedom, implementation freedom, the external environment, and incomplete information (see, for example, [14]).",
      "startOffset" : 185,
      "endOffset" : 189
    }, {
      "referenceID" : 36,
      "context" : "In fact, nondeterminism implicitly appears in the earlier work of Wee and Fu [37], where they formulated a learning composite fuzzy automaton operating alternatively between next two states.",
      "startOffset" : 77,
      "endOffset" : 81
    }, {
      "referenceID" : 2,
      "context" : "Note that the term of nondeterministic fuzzy automata has already been used by some authors (for example, [3, 19, 22]), but it takes on a different meaning.",
      "startOffset" : 106,
      "endOffset" : 117
    }, {
      "referenceID" : 18,
      "context" : "Note that the term of nondeterministic fuzzy automata has already been used by some authors (for example, [3, 19, 22]), but it takes on a different meaning.",
      "startOffset" : 106,
      "endOffset" : 117
    }, {
      "referenceID" : 21,
      "context" : "Note that the term of nondeterministic fuzzy automata has already been used by some authors (for example, [3, 19, 22]), but it takes on a different meaning.",
      "startOffset" : 106,
      "endOffset" : 117
    }, {
      "referenceID" : 28,
      "context" : "Following the study of nondeterministic finite automata [29], we show that conventional fuzzy automata, nondeterministic fuzzy automata, and nondeterministic fuzzy automata with -moves are all equivalent in the sense that they recognize the same class of fuzzy languages.",
      "startOffset" : 56,
      "endOffset" : 60
    }, {
      "referenceID" : 39,
      "context" : "Let us begin with the notion of fuzzy sets initiated by Zadeh [40].",
      "startOffset" : 62,
      "endOffset" : 66
    }, {
      "referenceID" : 0,
      "context" : "A fuzzy set A, or rather a fuzzy subset A of X, is defined by a function assigning to each element x of X a value A(x) in the real unit closed interval [0, 1].",
      "startOffset" : 152,
      "endOffset" : 158
    }, {
      "referenceID" : 0,
      "context" : "For any family λi, i ∈ I, of elements of [0, 1], we write ∨i∈Iλi or ∨{λi | i ∈ I} for the supremum of {λi | i ∈ I}, and ∧i∈Iλi or ∧{λi | i ∈ I} for the infimum.",
      "startOffset" : 41,
      "endOffset" : 47
    }, {
      "referenceID" : 0,
      "context" : "Let λ ∈ [0, 1] and A ∈ F (X).",
      "startOffset" : 8,
      "endOffset" : 14
    }, {
      "referenceID" : 25,
      "context" : "According to the compositional inference methods used in a fuzzy automaton, one may classify fuzzy automata into several types, such as max-min automata, min-max automata, max-product automata, and so on [26].",
      "startOffset" : 204,
      "endOffset" : 208
    }, {
      "referenceID" : 0,
      "context" : "Note that the above fuzzy transition function δ is defined as a function from Q × Σ × Q to [0, 1] in some references.",
      "startOffset" : 91,
      "endOffset" : 97
    }, {
      "referenceID" : 0,
      "context" : "In fact, both these representations mean the same thing because in the obvious way, each function δ : Q × Σ −→ F (Q) is exactly corresponding to a function δ′ : Q × Σ × Q −→ [0, 1].",
      "startOffset" : 174,
      "endOffset" : 180
    }, {
      "referenceID" : 14,
      "context" : "It is well known that for any nondeterministic finite automaton with or without -moves, there exists an equivalent deterministic finite automaton such that both of them accept the same language [15].",
      "startOffset" : 194,
      "endOffset" : 198
    } ],
    "year" : 2010,
    "abstractText" : "Fuzzy automata have long been accepted as a generalization of nondeterministic finite automata. A closer examination, however, shows that the fundamental property—nondeterminism—in nondeterministic finite automata has not been well embodied in the generalization. In this paper, we introduce nondeterministic fuzzy automata with or without -moves and fuzzy languages recognized by them. Furthermore, we prove that (deterministic) fuzzy automata, nondeterministic fuzzy automata, and nondeterministic fuzzy automata with -moves are all equivalent in the sense that they recognize the same class of fuzzy languages.",
    "creator" : "LaTeX with hyperref package"
  }
}