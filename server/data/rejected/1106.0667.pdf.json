{
  "name" : "1106.0667.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Reasoning within Fuzzy Description Logics",
    "authors" : [ "Umberto Straccia" ],
    "emails" : [ "straccia@iei.pi.cnr.it" ],
    "sections" : [ {
      "heading" : null,
      "text" : "In this paper we will present a fuzzy extension of ALC, combining Zadeh’s fuzzy logic with a classical DL. In particular, concepts becomes fuzzy and, thus, reasoning about imprecise concepts is supported. We will define its syntax, its semantics, describe its properties and present a constraint propagation calculus for reasoning in it.\n1. Introduction\nThe representation of uncertainty and imprecision has received a considerable attention in the Artificial Intelligence community in an attempt to extend existing knowledge representation systems to deal with the imperfect nature of real world information (which is likely the rule rather than an exception). An impressive work has been carried out in the last decades, resulting in a number of concepts being investigated, a number of problems being identified and a number of solutions being developed (Bacchus, 1990; Dubois & Prade, 1996; Kruse, Schwecke, & Heinsohn, 1991; Pearl, 1988).\nFor most knowledge representation formalisms, First-Order Logic (FOL) has been the basis: its basic units –individuals, their properties, and the relationship between them– naturally capture the way in which people encode their knowledge. Unfortunately, it is severely limited both (i) by its ability to represent our uncertainty about the world –due to lack of knowledge about the real world a fact can only estimated to be true to e.g. a probability degree; and (ii) by its ability to represent inherently imprecise knowledge– indeed, there are concepts, like hot, for which no exact definition exists and, thus, a fact like “35◦ Celsius is hot”, rather being true or false, has a truth-value in between true and false.\nIn the last decade a substantial amount of work has been carried out in the context of Description Logics (DLs).1 DLs are a logical reconstruction of the so-called frame-based knowledge representation languages, with the aim of providing a simple well-established Tarski-style declarative semantics to capture the meaning of the most popular features of structured representation of knowledge. A main point is that DLs are considered as to be\n1. Description Logics have also been referred to as Terminological Logics, Concept Logics, KL-ONE-like languages. The web page of the description logic community is found at address http://dl.kr.org/dl.\nc©2001 AI Access Foundation and Morgan Kaufmann Publishers. All rights reserved."
    }, {
      "heading" : null,
      "text" : "attractive logics in knowledge based applications as they are a good compromise between expressive power and computational complexity.\nNowadays, a whole family of knowledge representation systems has been build using DLs, which differ with respect to their expressiveness, their complexity and the completeness of their algorithms, and they have been used for building a variety of applications (Peltason, 1991; Brachman, 1992; Baader & Hollunder, 1991a; Horrocks, 1998).\nExperience in using DLs in applications has also shown that in many cases we would like to extend the representational and reasoning capabilities of them. In particular, the use of DLs in the context of Multimedia Information Retrieval (MIR) points out the necessity of extending DLs with capabilities which allow the treatment of the inherent imprecision in multimedia object representation and retrieval (Meghini & Straccia, 1996; Meghini, Sebastiani, & Straccia, 1997, 1998). In fact, classical DLs are insufficient for describing real multimedia retrieval situations, as the retrieval is usually not only a yes-no question: (i) the representations of multimedia objects’ content and queries which the system (and the logic) have access to are inherently imperfect; and (ii) the relevance of a multimedia object to a query can thus be established only up to a limited degree. Because of this, we need a logic in which, rather than deciding tout court whether a multimedia object satisfies a query or not, we are able to rank the retrieved objects according to how strongly the system believes in their relevance to a query.\nTo this end, we will extend DLs with fuzzy capabilities. The choice of fuzzy set theory as a way of endowing a DL with the capability to deal with imprecision is not uncommon (da Silva, Pereira, & Netto, 1994; Tresp & Molitor, 1998; Yen, 1991) and can be motivated\n• from a semantics point of view, as fuzzy logics capture the notion of imprecise concept, i.e. a concept for which a clear and precise definition is not possible. Fuzzy concepts play a key role in e.g. content descriptions of multimedia objects (most of human’s concepts are imprecise). For instance, in the context of images, the (semantic) content of an image region r may be described by means of a fuzzy statement like “r is about a Ferrari” and establish that this sentence has truth-value 0.8, i.e. r is likely about a Ferrari;\n• from a proof theoretical point of view, as there exist well-known techniques for reasoning in fuzzy logics (Chen & Kundu, 1996; Lee, 1972; Xiachun, Yunfei, & Xuhua, 1995).\nIn the following we will present a quite general fuzzy DL, in the sense that it is based on the DL ALC, a significant and expressive representative of the various DLs. This allows us to adapt it easily to the different DLs presented in the literature. Another important point is that we will show that the additional expressive power has no impact from a computational complexity point of view. This is certainly important as the nice tradeoff between computational complexity and expressive power of DLs contributes to their popularity.\nNote that our fuzzy extension for the management of imprecise knowledge is complementary to other DL extensions for the management of uncertainty, e.g. probabilistic extension (Heinsohn, 1994; Jäger, 1994; Koller, Levy, & Pfeffer, 1997; Sebastiani, 1994) with some exceptions like shown by Hollunder (1994) where a possibilistic DL has been considered. Even"
    }, {
      "heading" : null,
      "text" : "though these probabilistic extensions enlarge the applicability of DLs they do not address the issue of reasoning about individuals and imprecise concepts, as imprecise knowledge and uncertain knowledge are “orthogonal” (Dubois & Prade, 1994). Moreover, reasoning in a probabilistic framework is generally a harder task, from a computational point of view, than the relative non probabilistic case and in most cases a complete axiomatization is missing (Halpern, 1990; Roth, 1996). As a consequence, the computational problems have to be addressed carefully (Koller et al., 1997).\nWe will proceed as follows. In the following section we first introduce ALC. In Section 3 we extend ALC to the fuzzy case and discuss some properties in Section 4, while in Section 5 we will present a constraint propagation calculus for reasoning in it. Section 6 concludes and presents some topics for further research.\n2. A Quick Look to ALC\nThe specific DL we will extend with fuzzy capabilities is ALC, a significant representative of DLs. At first, we will introduce classical ALC, while in Section 3 our fuzzy extension of ALC will be presented.\nWe assume three alphabets of symbols, called primitive concepts (denoted by A), primitive roles (denoted by R) and individuals (denoted by a and b).2\n2.1 Concept and Role\nConcepts are expressions that collect the properties, described by means of roles, of a set of individuals. From a FOL point of view, concepts can be seen as unary predicates, whereas roles are interpreted as binary predicates.\nA concept (denoted by C or D) of the language ALC is build out of primitive concepts according to the following syntax rules:\nC,D −→ ⊤| (top concept) ⊥ | (bottom concept) A| (primitive concept)\nC ⊓D| (concept conjunction) C ⊔D| (concept disjunction)\n¬C| (concept negation) ∀R.C| (universal quantification) ∃R.C (existential quantification).\n2.2 Interpretation\nDLs have a clean, model-theoretic semantics, based on the notion of interpretation. An interpretation I is a pair I = (∆I , ·I) consisting of a non empty set ∆I (called the domain) and of an interpretation function ·I mapping different individuals into different elements of ∆I (called unique name assumption), primitive concepts into subsets of ∆I and primitive roles into subsets of ∆I × ∆I . The interpretation of complex concepts is defined as usual:\n2. Through this work we assume that every metavariable has an optional subscript or superscript."
    }, {
      "heading" : null,
      "text" : "⊤I = ∆I\n⊥I = ∅\n(C ⊓D)I = CI ∩DI\n(C ⊔D)I = CI ∪DI\n(¬C)I = ∆I \\ CI\n(∀R.C)I = {d ∈ ∆I : ∀d′.(d, d′) 6∈ RI or d′ ∈ CI}\n(∃R.C)I = {d ∈ ∆I : ∃d′.(d, d′) ∈ RI and d′ ∈ CI}.\nNote that each concept C and role R can be mapped into an equivalent open first-order formula FC(x) and FR(x, y), respectively:\nF⊤(x) = T (1)\nF⊥(x) = F (2)\nFA(x) = A(x) (3)\nFR(x, y) = R(x, y) (4)\nFC⊓D(x) = FC(x) ∧ FD(x) (5)\nFC⊔D(x) = FC(x) ∨ FD(x) (6)\nF¬C(x) = ¬FC(x) (7)\nF∀R.C(x) = ∀y.¬FR(x, y) ∨ FC(y) (8)\nF∃R.C(x) = ∃y.FR(x, y) ∧ FC(y), (9)\nwhere T and F are two formulae representing the truth-value “true” and “false”, respectively (e.g. T = p ∨ ¬p and F = p ∧ ¬p, for some letter p).\nTwo concepts C and D are said to be equivalent (denoted by C ≡ D) when CI = DI\nfor all interpretations I. Note that, e.g. ⊤ ≡ ¬ ⊥; C ⊓D ≡ ¬(¬C ⊔ ¬D), and (∃R.C) ≡ (¬∀R.¬C).\n2.3 Assertion\nAn assertion (denoted by α) is an expression of type a:C (“a is C”, also “a is an instance of C”), or an expression of type (a, b):R (“(a, b) is R”, also “(a, b) is an instance of R”). For instance, tom:Tall ⊓ Student asserts that Tom is a tall student, whereas (tim, tom):Friend asserts that Tom is a friend of Tim. A primitive assertion is either an assertion of the form a:A, where A is a primitive concept, or an assertion of the form (a, b):R. From a semantics point of view, an interpretation I satisfies a:C (resp. (a, b):R) iff aI ∈ CI (resp. (aI , bI) ∈ RI).\n2.4 Terminological Axiom\nA terminological axiom (denoted by τ) is either a concept specialisation or a concept definition. A concept specialisation is an expression of the form A<·C, where A is a primitive concept and C is a concept. A specialisation allows stating the existence of a specialisation (“more specific than”) relation between concepts. For instance, Ferrari<·SportCar ⊓"
    }, {
      "heading" : null,
      "text" : "∃Ownedby.CarFanatic states that a Ferrari is a sport car that is owned by a car fanatic. On the other hand, a concept definition is an expression of the form A: = C, where A is a primitive concept and C is a concept. A concept definition allows stating the equivalence between concepts. For instance, Tennis: = SportKind ⊓ (∃HasSportTool.⊤) ⊓ (∀HasSportTool.TennisRacket) states that tennis is identified by a kind of sport having a tennis racket as a sport tool. From a semantics point of view, an interpretation I satisfies a concept specialisation A<·C iff AI ⊆ CI . Similarly, an interpretation I satisfies a concept definition A: = C iff AI = CI .\n2.5 Knowledge Base, Entailment and Subsumption\nA finite set K of assertions and terminological axioms will be called a Knowledge Base (KB). With KA we will denote the set of assertions in K, whereas with KT we will denote the set of terminological axioms in K, also called a terminology. A KB K is purely assertional if KT = ∅. Further, we will assume that a terminology KT is such that no concept A appears more than once on the left hand side of a terminological axiom τ ∈ KT and that no cyclic definitions are present in KT .\n3\nWe will say that an interpretation I satisfies (is a model of ) a KB K iff I satisfies each element in K. A KB K entails an assertion α (denoted by K |= α) iff every model of K also satisfies α. Furthermore, let KT be a terminology and let C,D be two concepts. We will say that D subsumes C with respect to (w.r.t.) KT (denoted by C ⊑KT D) iff for every model I of KT , C\nI ⊆ DI holds.\nThe problem of determining whether K |= α is called entailment problem; the problem of determining whether C ⊑KT D is called subsumption problem; and the problem of determining whether K is satisfiable is called satisfiability problem.\nIt is well known (Buchheit, Donini, & Schaerf, 1993a; Donini, Lenzerini, Nardi, & Schaerf, 1994; Nebel, 1990) that in ALC\nK |= (a, b):R iff (a, b):R ∈ K (10)\nK |= a:C iff K ∪ {a:¬C} is not satisfiable (11)\nC ⊑∅ D iff a:C |= a:D, for a new a (12)\nC ⊑KT D iff C ′ ⊑∅ D\n′ (13)\nwhere C ′ and D′ are build from C and D by expanding the terminology KT to K ′′ T and\nsubstituting every primitive concept occurring in C or D, which is defined in K ′′T , with its defining term in K ′′T . The expansion of a KB K works as follows (Nebel, 1990).\n1. Elimination of concept specialisation: each concept specialisation A<·C ∈ KT is replaced with a concept definition A: = C ⊓ A∗, where A∗ is a new primitive concept. A∗ stands for the absent part of the definition of A. Let K ′T be the terminology, which is obtained by replacing all concept specialisation by concept definitions.\n3. We will say that A directly uses primitive concept B in KT , if there is τ ∈ KT such that A is on the left hand side of τ and B occurs in the right hand side of τ . Let uses be the transitive closure of the relation directly uses in KT . KT is cyclic iff there is A such that A uses A in KT ."
    }, {
      "heading" : null,
      "text" : "2. Expansion of K ′T : every defined concept (i.e. the first argument of a concept definition) which occurs in the defining term of a concept definition (i.e. the second argument of a concept definition) is substituted by its defining term. This process is iterated until there remain only undefined concepts in the second arguments of concept definitions. This yields a terminology K ′′T .\n3. Expansion of KA: every primitive concept occurring in KA which is defined in K ′′ T is\nsubstituted by its defining term in K ′′T . This yields K ′ A.\nThe transformation has the nice property that K |= α iff K ′A |= α ′, where α′ is obtained by\nreplacing every primitive concept occurring in α, which is defined in K ′′T , with its defining term in K ′′T . While this allows us to restrict our attention to purely assertional KBs only, it is worth noting that the expansion process can be exponential (Nebel, 1988).\nFrom (10)–(13), it follows that the above problems can be reduced to the satisfiability problem. There exists a well known technique based on constraint propagation solving this problem (Schmidt-Schauß & Smolka, 1991; Buchheit, Donini, & Schaerf, 1993b; Donini et al., 1994).\nWe conclude with an example.\nExample 1 Consider the following terminology KT .\nSportKind <· ⊤ SportTool <· ⊤ IndividualSport <· SportKind TeamSport <· SportKind Basketball <· SportTool TennisRacket <· SportTool Basket : = SportKind⊓\n(∃KindOfSport.⊤)⊓ (∀KindOfSport.TeamSport)⊓ (∃HasSportTool.⊤)⊓ (∀HasSportTool.Basketball)\nTennis : = SportKind⊓ (∃KindOfSport.⊤)⊓ (∀KindOfSport.IndividualSport)⊓ (∃HasSportTool.⊤)⊓ (∀HasSportTool.TennisRacket)\nSuppose that there are two video sequences v1, v2, which are about basket and tennis, respectively. We may represent the semantic content of them through\nKv1 = {v1:Video ⊓ ∃About.Basket} Kv2 = {v2:Video ⊓ ∃About.Tennis}.\nConsider K = KT ∪Kv1∪Kv2. If we are interested in retrieving videos about sport, we may query K through the query concept Q = Video ⊓ ∃About.SportKind and the answer will be the list containing both v1 and v2, as K |= v1:Q and K |= v2:Q hold."
    }, {
      "heading" : null,
      "text" : "On the other hand, if we are looking for individual sport videos, then, given the query concept Q′ = Video ⊓ ∃About.∃KindOfSport.IndividualSport, it follows that only video v2 will be retrieved. In fact, K 6|= v1:Q′ and K |= v2:Q′ hold. ✷\n3. A Fuzzy DL\nOur fuzzy extension directly relates to Zadeh’s work on fuzzy sets (Zadeh, 1965). A fuzzy set S with respect to an universe U is characterised by a membership function µS : U → [0, 1], assigning an S-membership degree, µS(u), to each element u in U . µS(u) gives us an estimation of the belonging of u to S. Typically, if µS(u) = 1 then u definitely belongs to S, while µS(u) = 0.8 means that u is “likely” to be an element of S. Moreover, according to Zadeh, the membership function has to satisfy three well known restrictions: for all u ∈ U and for all fuzzy sets S1, S2 with respect to U\nµS1∩S2(u) = min{µS1(u), µS2(u)} µS1∪S2(u) = max{µS1(u), µS2(u)} µ\nS1 (u) = 1 − µS1(u) ,\nwhere S1 is the complement of S1 in U . Alternative restrictions on membership functions have been proposed in the literature, but it is not our aim to investigate them here (the interested reader may consult e.g. Dubois & Prade, 1980).\nA justification of the choice of the min and the max was given by Bellman and Giertz (1973), which have shown that under certain reasonable conditions min and max are the unique possible choice for set intersection and set union, respectively.\nWhen we switch to fuzzy logics, the notion of degree of membership µS(u) of an element u ∈ U w.r.t. the fuzzy set S over U is regarded as the truth-value of the statement “u is S”. Accordingly, in our fuzzy DL, (i) a concept C, rather than being interpreted as a classical set, will be interpreted as a fuzzy set and, thus, concepts become imprecise; and, consequently, (ii) the statement “a is C”, i.e. a:C, will have a truth-value in [0, 1] given by the degree of membership of being the individual a a member of the fuzzy set C.\n3.1 Fuzzy Interpretation\nA fuzzy interpretation is now a pair I = (∆I , ·I), where ∆I is, as for the crisp case, the domain, whereas ·I is an interpretation function mapping\n1. individuals as for the crisp case, i.e. aI 6= bI , if a 6= b;\n2. a concept C into a membership function CI : ∆I → [0, 1];\n3. a role R into a membership function RI : ∆I × ∆I → [0, 1].\nIf C is a concept then CI will naturally be interpreted as the membership degree function of the fuzzy concept (set) C w.r.t. I, i.e. if d ∈ ∆I is an object of the domain ∆I then CI(d) gives us the degree of being the object d an element of the fuzzy concept C under the interpretation I. Similarly for roles. Additionally, the interpretation function ·I has to satisfy the following equations: for all d ∈ ∆I ,"
    }, {
      "heading" : null,
      "text" : "⊤I(d) = 1 ⊥I(d) = 0\n(C ⊓D)I(d) = min{CI(d), DI(d)}\n(C ⊔D)I(d) = max{CI(d), DI(d)}\n(¬C)I(d) = 1 − CI(d)\n(∀R.C)I(d) = infd′∈∆I{max{1 −R I(d, d′), CI(d′)}}\n(∃R.C)I(d) = supd′∈∆I{min{R I(d, d′), CI(d′)}}.\nThese equations are the standard interpretation of conjunction, disjunction, negation and quantification, respectively (see Lee, 1972; Tresp & Molitor, 1998).\nNote that the semantics of ∃R.C\n(∃R.C)I(d) = supd′∈∆I{min{R I(d, d′), CI(d′)}} (14)\nis the result of viewing ∃R.C as the open first order formula ∃y.FR(x, y) ∧ FC(y) (see (9)) and the existential quantifier ∃ is viewed as a disjunction over the elements of the domain. Similarly,\n(∀R.C)I(d) = infd′∈∆I{max{1 −R I(d, d′), CI(d′)}} (15)\nis related to the open first order formula ∀y.¬FR(x, y)∨FC(y) (see (8)), where the universal quantifier ∀ is viewed as a conjunction over the elements of the domain.\nWe will say that two concepts C and D are said to be equivalent (denoted by C ∼= D) when CI = DI for all interpretations I. As for the crisp non fuzzy case, dual relationships between concepts hold: e.g. ⊤ ∼= ¬ ⊥, (C ⊓D) ∼= ¬(¬C ⊔ ¬D) and (∀R.C) ∼= ¬(∃R.¬C).\n3.2 Fuzzy Assertion\nA fuzzy assertion (denoted by ψ) is an expression having one of the following form 〈α ≥ n〉 or 〈α ≤ m〉, where α is an ALC assertion, n ∈ (0, 1] and m ∈ [0, 1). From a semantics point of view, a fuzzy assertion 〈α ≤ n〉 constrains the truth-value of α to be less or equal to n (similarly for ≥). Consequently, e.g. 〈v1:Video ⊓ ∃About.Basket ≥ 0.8〉 states that video v1 is likely about basket. Formally, an interpretation I satisfies a fuzzy assertion 〈a:C ≥ n〉 (resp. 〈(a, b):R ≥ n〉) iff CI(aI) ≥ n (resp. RI(aI , bI) ≥ n). Similarly, an interpretation I satisfies a fuzzy assertion 〈a:C ≤ n〉 (resp. 〈(a, b):R ≤ n〉) iff CI(aI) ≤ n (resp. RI(aI , bI) ≤ n). Two fuzzy assertions ψ1 and ψ2 are said to be equivalent (denoted by ψ1\n∼= ψ2) iff they are satisfied by the same set of interpretations. Notice that the combination of both 〈a:C ≥ m〉 and 〈a:C ≤ n〉, with m ≤ n, restricts the truth-value of a:C in between [m,n]. Moreover, 〈a:¬C ≥ n〉 ∼= 〈a:C ≤ 1 − n〉. A primitive fuzzy assertion is a fuzzy assertion involving a primitive assertion.\nOne might wonder why we do not allow expressions of the form 〈α > n〉 or the form 〈α < n〉. The reason simply relies on the observation that it is quite hard to imagine situations in which we are able to assert such strict >,< relations. So we will leave them out for ease.4\n4. Of course, the whole can easily be extended in case we would like to consider these two types of assertions too."
    }, {
      "heading" : null,
      "text" : "Note that in the work of Straccia (1998), no fuzzy assertion of the form 〈α ≤ n〉 is allowed.\n3.3 Fuzzy Terminological Axiom\nFuzzy terminological axioms we will consider are a natural extension of classical terminological axioms to the fuzzy case. From a syntax point of view, a fuzzy terminological axiom (denoted by τ̃) is either a fuzzy concept specialisation or a fuzzy concept definition. A fuzzy concept specialisation is an expression of the form A≺·C, where A is a primitive concept and C is a concept. On the other hand, a fuzzy concept definition is an expression of the form A:≈ C, where A is a primitive concept and C is a concept. From a semantics point of view, we consider the natural extension of classical set inclusion to the fuzzy case (Zadeh, 1965). A fuzzy interpretation I satisfies a fuzzy concept specialisation A≺·C iff\n∀d ∈ ∆I , AI(d) ≤ CI(d), (16)\nwhereas I satisfies a fuzzy concept definition A:≈ C iff\n∀d ∈ ∆I , AI(d) = CI(d). (17)\nNote that in the work of Straccia (1998) a fuzzy specialisation is “non-standard”. Indeed, Straccia (1998) considered fuzzy specialisations of the form 〈A → C ≥ n〉 where (A → C)I = mind∈∆I{max{1 − A\nI(d), CI(d)}}. A drawback of this formulation is that it is not clear where the n in 〈A → C ≥ n〉 comes from, i.e. who defines the value n and how it is determined. We prefer to rely here on the standard interpretation of fuzzy subsets.\n3.4 Fuzzy Knowledge Base, Fuzzy Entailment and Fuzzy Subsumption\nA fuzzy knowledge base is a finite set of fuzzy assertions and fuzzy terminological axioms. As for the crisp case, with ΣA we will denote the set of fuzzy assertions in Σ, with ΣT we will denote the set of fuzzy terminological axioms in Σ (the terminology), if ΣT = ∅ then Σ is purely assertional, and we will assume that a terminology ΣT is such that no concept A appears more than once on the left hand side of a fuzzy terminological axiom τ̃ ∈ ΣT and that no cyclic definitions are present in ΣT .\nAn interpretation I satisfies (is a model of ) a set of fuzzy Σ iff I satisfies each element of Σ. A fuzzy KB Σ fuzzy entails a fuzzy assertion ψ (denoted by Σ|≈ψ) iff every model of Σ also satisfies ψ.\nFurthermore, let ΣT be a terminology and let C,D be two concepts. We will say that D fuzzy subsumes C w.r.t. ΣT (denoted by C ¹ΣT D) iff for every model I of ΣT , ∀d ∈ ∆I , CI(d) ≤ DI(d) holds.\nFinally, given a fuzzy KB Σ and an assertion α, it is of interest to compute α’s best lower and upper truth-value bounds. To this end we define the greatest lower bound of α w.r.t. Σ (denoted by glb(Σ, α)) to be sup{n : Σ|≈〈α ≥ n〉}. Similarly, we define the least upper bound of α with respect to Σ (denoted by lub(Σ, α)) to be inf{n : Σ|≈〈α ≤ n〉} (sup ∅ = 0, inf ∅ = 1). Determining the lub and the glb is called the Best Truth-Value Bound (BTVB) problem."
    }, {
      "heading" : null,
      "text" : "4. Some Properties\nIn this section we discuss some properties of our fuzzy logic. Several properties described by Straccia (2000b) for the propositional case are easily extended to our first order case too.\n4.1 Concept Equivalence\nThe first ones are straightforward: ¬⊤ ∼=⊥, C ⊓ ⊤ ∼= C, C ⊔ ⊤ ∼= ⊤, C⊓ ⊥∼=⊥, C⊔ ⊥∼= C, ¬¬C ∼= C, ¬(C⊓D) ∼= ¬C⊔¬D, ¬(C⊔D) ∼= ¬C⊓¬D, C1⊓(C2⊔C3) ∼= (C1⊓C2)⊔(C1⊓C3) and C1 ⊔ (C2 ⊓C3) ∼= (C1 ⊔C2)⊓ (C1 ⊔C3). For concepts involving roles, we have ∀R.C ∼= ¬∃R.¬C, ∀R.⊤ ∼= ⊤, ∃R. ⊥∼=⊥ and (∀R.C) ⊓ (∀R.D) ∼= ∀R.(C ⊓D). Please, note that we do not have C ⊓ ¬C ∼=⊥, nor we have C ⊔ ¬C ∼= ⊤ and, thus, (∃R.C) ⊓ (∀R.¬C) 6∼=⊥ and (∃R.C) ⊔ (∀R.¬C) 6∼= ⊤ hold. In general we can only say that (C ⊓ ¬C)I(d) ≤ 0.5, for any interpretation I and d ∈ ∆I and, similarly, (C ⊔ ¬C)I(d) ≥ 0.5, i.e. lub(∅, a:¬C ⊓ C) = 0.5 and glb(∅, a:¬C ⊔ C) = 0.5, respectively.\n4.2 Entailment Relation\nOf course, Σ|≈〈α ≥ n〉 iff glb(Σ, α) ≥ n, and similarly Σ|≈〈α ≤ n〉 iff lub(Σ, α) ≤ n hold. Concerning roles, note that Σ|≈〈(a, b):R ≥ n〉 iff 〈(a, b):R ≥ m〉 ∈ Σ with m ≥ n. Therefore,\nglb(Σ, R(a, b)) = max{n : 〈R(a, b) ≥ n〉 ∈ Σ} (18)\nwhile the same is not true for the ≤ case. While 〈(a, b):R ≤ m〉 ∈ Σ and m ≤ n imply Σ|≈〈(a, b):R ≤ n〉, the converse is false (e.g. {〈a:∀R.A ≥ 1〉, 〈b:A ≤ 0〉}|≈〈(a, b):R ≤ 0〉)).\nFurthermore, from Σ|≈〈a:C ≤ n〉 iff Σ|≈〈a:¬C ≥ 1 − n〉,\n1 − lub(Σ, C(a)) = 1 − inf{n : Σ|≈〈a:C ≤ n〉} = sup{1 − n : Σ|≈〈a:C ≤ n〉} = sup{n : Σ|≈〈a:C ≤ 1 − n〉} = sup{n : Σ|≈〈a:¬C ≥ n〉} = glb(Σ, a:¬C).\nfollows. Therefore,\nlub(Σ, a:C) = 1 − glb(Σ, a:¬C), (19)\ni.e. lub can be determined through glb (and vice-versa). The same reduction to glb does not hold for lub(Σ, (a, b):R) as (a, b):¬R is not an expression of our language.5\nModus ponens on concepts is supported: if m > 1−n then {〈a:C ≥ m〉, 〈a:¬C ⊔D ≥ n〉}|≈ 〈a:D ≥ n〉 holds.\nModus ponens on roles is supported: if m > 1− n then {〈(a, b):R ≥ m〉, 〈a:∀R.D ≥ n〉} |≈〈a:D ≥ n〉 and {〈a:∃R.C ≥ m〉, 〈a:∀R.D ≥ n〉} |≈〈a:∃R.(C ⊓D) ≥ min{n,m}〉 hold. Moreover, {〈a:∀R.C ≥ m〉, 〈a:∀R.D ≥ n〉} |≈〈a:∀R.(C ⊓D) ≥ min{n,m}〉 holds.\nModus ponens on specialisation is supported. The following degree bounds propagation through a taxonomy is supported. If C ¹Σ D then (i) Σ ∪ {〈a:C ≥ n〉}|≈〈a:D ≥ n〉; and (ii) Σ ∪ {〈a:D ≤ n〉}|≈〈a:C ≤ n〉 hold.\n5. Of course, lub(Σ, (a, b):R) = 1 − glb(Σ, (a, b):¬R) holds, where (¬R)I(d, d′) = 1 − RI(d, d′)."
    }, {
      "heading" : null,
      "text" : "Note that, according to Straccia (1998)\nif m > 1 − n then {〈a:A ≥ m〉, 〈A → C ≥ n〉}|≈〈a:C ≥ n〉.\nA drawback of the above property is that whatever the degree m is (as long as m > 1−n), from 〈a:A ≥ m〉 and 〈A → C ≥ n〉 we infer 〈a:C ≥ n〉, where n is a priori fixed value.\n4.3 Soundness of the Semantics\nOur fuzzy semantics is sound w.r.t. crisp semantics. In fact, let Σ be a fuzzy KB in which no 〈(a, b):R ≤ n〉 occurs. We leave these fuzzy assertions out, as role negation is not present in crisp ALC. Let us consider the following transformation ♯(·) of fuzzy assertions into assertions, where ♯(·) takes the “crisp” assertional part of a fuzzy assertion:\n♯〈α ≥ n〉 7→ α\n♯〈a:C ≤ n〉 7→ a:¬C.\nWe extend ♯(·) to fuzzy terminological axioms as follows: ♯τ̃ = τ . Finally, ♯Σ = {♯ψ : ψ ∈ Σ} ∪ {♯τ̃ : τ̃ ∈ ΣT }.\nIt is quite easily to verify that\nProposition 1 Let Σ be a fuzzy KB in which no 〈(a, b):R ≤ n〉 occurs and let ψ be a fuzzy assertion 〈α ≥ n〉. If Σ|≈〈α ≥ n〉 then ♯Σ |= ♯ψ (i.e. there cannot be fuzzy entailment without entailment in ALC). ⊣\nProof: Consider a classical interpretation I satisfying ♯Σ. I is also a fuzzy interpretation such that CI(d) ∈ {0, 1}, RI(d, d′) ∈ {0, 1} hold. By induction on the structure of a concept C it can be shown that I (classically) satisfies a:C iff CI(aI) = 1. Similarly for roles. Therefore, I is a fuzzy interpretation satisfying Σ. By hypothesis, I satisfies 〈α ≥ n〉 and n > 0. Therefore, the truth-value of α under I is 1, i.e. I satisfies α. ✷ For the general case, Σ has to be satisfiable as 〈(a, b):R ≤ n〉 may introduce an inconsistency, e.g. {〈(a, b):R ≤ 0.3〉, 〈(a, b):R ≥ 0.4〉}|≈〈a:A ≥ 1〉, but {(a, b):R} 6|= a:A}.\nThe converse of Proposition 1 does not hold in general.\nExample 2 Let Σ be the set Σ = {〈a:A ⊔B ≤ 0.6〉, 〈a:A ≥ 0.3〉}. It follows that ♯Σ = {a:¬(A ⊔B), a:A} which is unsatisfiable. Therefore, it can easily be verified that ♯Σ |= a:B, but Σ 6|≈〈a:B ≥ n〉, for all n > 0. ✷\nOnce we restrict the attention to normalised fuzzy assertions, a converse relation follows immediately (Lee, 1972; Straccia, 2000b).\nIndeed, we say that a fuzzy assertion ψ is KB-normalised iff\n1. if ψ is 〈α ≥ n〉 then n > 0.5;\n2. if ψ is 〈α ≤ n〉 then n < 0.5.\nWe say that a fuzzy assertion ψ is query-normalised iff"
    }, {
      "heading" : null,
      "text" : "1. if ψ is 〈α ≥ n〉 then n ≤ 0.5;\n2. if ψ is 〈α ≤ n〉 then n ≥ 0.5.\nNote that the definitions for KB-normalisation and query-normalisation are dual. The following proposition follows from (Lee, 1972; Straccia, 2000b) and relies on the fact that 〈α ≥ n〉 and 〈α ≤ m〉 are together inconsistent, if n > 0.5 and m < 0.5. In particular, Straccia (2000b) shows that if Σ and ψ are a normalised fuzzy propositional KB and a query-normalised fuzzy proposition, then Then Σ|≈ψ iff ♯Σ |= ♯ψ. The proof is given by showing that from a deduction proving Σ|≈ψ a deduction proving ♯Σ |= ♯ψ can be build and vice-versa. The extension to our case is straightforward as e.g. for n,m > 0.5, 〈a:∀R.C ≥ n〉,〈(a, b):R ≥ m〉|≈〈b:C ≥ n〉 iff a:∀R.C, (a, b):R |= b:C holds (the other firstorder cases involving ∀ and ∃ are similar).\nProposition 2 Let Σ be a fuzzy KB in which no 〈(a, b):R ≤ n〉 occurs and each ψ ∈ Σ is KB-normalised. Let ψ be a query-normalised fuzzy assertion. Then Σ|≈ψ iff ♯Σ |= ♯ψ. ⊣\nExample 3 Let Σ be the set Σ = {〈a:A ⊓B ≤ 0.4〉, 〈a:A ≥ 0.6〉}. Let ψ be 〈a:B ≤ 0.7〉. Each fuzzy assertion in Σ is KB-normalised and ψ is query-normalised. It follows that ♯Σ = {a:¬(A ⊓B), a:A} and ♯ψ = a:¬B. It is easily verified that Σ|≈ψ and that ♯Σ |= ♯ψ, thereby confirming Proposition 2. ✷\n4.4 Subsumption\nAt first, as for the classical case and with the same method seen before, subsumption between two concepts C and D w.r.t. a terminology ΣT , i.e. C ¹ΣT D, can be reduced to the case of an empty terminology, i.e. C ′ ¹∅ D\n′.\nExample 4 Suppose we have two images i1 and i2 each being a snapshot of the car traffic on a major street of an European city. An underlying image analysis tool recognizes, among all the recognised objects, that in image i1 there is a Ferrari, while in image i2 there is a Porsche. Furthermore, a semantic image indexing tool establishes that, to some degree n image i1 is about a Ferrari, whereas to some degree m image i2 is about a Porsche. Please note that, as a weight of a keyword in text is a quantitative description of the aboutness of the text w.r.t. the keyword, a truth-degree gives a quantitative description of the aboutness of an images w.r.t. an object, i.e. the aboutness is handled as an imprecise concept. So, let us consider\nΣ = {〈i1:∃About.Ferrari ≥ 0.6〉, 〈i2:∃About.Porsche ≥ 0.8〉, Ferrari≺·Car,Porsche≺·Car}.\nwhere the axioms specify that both a Ferrari and a Porsche are a car. According to the expansion process, Σ will be replaced by\nΣ′ = {〈i1:∃About.Ferrari ≥ 0.6〉, 〈i2:∃About.Porsche ≥ 0.8〉, Ferrari:≈ Car ⊓ Ferrari∗,Porsche:≈ Car ⊓ Porsche∗},\nwhich will be simplified to"
    }, {
      "heading" : null,
      "text" : "Σ′′ = {〈i1:∃About.(Car ⊓ Ferrari∗) ≥ 0.6〉, 〈i2:∃About.(Car ⊓ Porsche∗) ≥ 0.8〉}.\nNow, if we are looking for images which are about cars, then from Σ we may infer that Σ |≈ 〈i1:∃About.Car ≥ 0.6〉 and Σ|≈〈i2:∃About.Car ≥ 0.8〉. Furthermore, it is easily verified that Σ′′ |≈ 〈i1:∃About.Car ≥ 0.6〉 and Σ′′|≈〈i2:∃About.Car ≥ 0.8〉 hold as well. Indeed, for any fuzzy assertion ψ, Σ|≈ψ iff Σ′′|≈ψ holds. ✷\nWe conclude this section with the analogue of Example 1 for the fuzzy case..\nExample 5 Consider the terminology KT and the query concept Q in Example 1. Let us define ΣT as the fuzzy KB derived from KT in which each terminological axiom τ has been replaced with the fuzzy terminological axiom τ̃ . Moreover, let us suppose that an underlying semantic video indexing tool furnishes the following semantic descriptions of the two videos v1 and v2.\nΣv1 = {〈v1:Video ≥ 1〉, 〈v1:∃About.Basket ≥ 0.9〉} Σv2 = {〈v2:Video ≥ 1〉, 〈v2:∃About.Tennis ≥ 0.6〉},\ni.e. video v1 is about basket with degree 0.9, whereas video v2 is about tennis with degree 0.6. Let us consider Σ = ΣT ∪ Σv1 ∪ Σv2. It is easily verified that glb(Σ, v1:Q) = 0.9, whereas glb(Σ, v2:Q) = 0.6 hold. Therefore, video v1 will be ranked before video v2 after the retrieval process. ✷\n5. Decision Algorithms in Fuzzy ALC\nDeciding whether Σ|≈〈α ≥ n〉 or Σ|≈〈α ≤ m〉 requires a calculus. Without loss of generality we will consider purely assertional fuzzy KBs only.\nWe will develop a calculus in the style of the constraint propagation method, as this method is usually proposed in the context of DLs (Buchheit et al., 1993a). The calculus extends the fuzzy propositional calculus described by Chen and Kundu (1996) and by Straccia (2000b) to our fuzzy DL case. We first address the entailment problem, then the subsumption problem and finally the BTVB problem. Both the subsumption problem and the BTVB problem will be reduced to the entailment problem.\n5.1 A Decision Procedure for the Entailment Problem\nConsider a new alphabet of ALC variables. An interpretation is extended to variables by mapping these into elements of the interpretation domain. An ALC object (denoted by w) is either an individual or a variable.6\nA constraint (denoted by α) is an expression of the form w:C or (w,w′):R, where w,w′\nare objects, C is an ALC concept and R is a role. A fuzzy constraint (denoted by ψ) is an expression having one of the following four forms: 〈α ≥ n〉, 〈α > n〉, 〈α ≤ n〉, 〈α < n〉. Note that assertions and fuzzy assertions are constraints and fuzzy constraints, respectively.\n6. In the following, if there is no ambiguity, ALC variables and ALC objects are called variables and objects, respectively."
    }, {
      "heading" : null,
      "text" : "The definitions of satisfiability of a constraint, a fuzzy constraint, a set of constraints, a set of fuzzy constraints, primitive constraint and primitive fuzzy constraint are obvious.\nIt is quite easily verified that the fuzzy entailment problem can be reduced to the unsatisfiability problem of a set of fuzzy constraints:\nΣ|≈〈α ≥ n〉 iff Σ ∪ {〈α < n〉} not satisfiable (20)\nΣ|≈〈α ≤ n〉 iff Σ ∪ {〈α > n〉} not satisfiable. (21)\nOur calculus, determining whether a finite set S of fuzzy constraints is satisfiable or not, is based on a set of constraint propagation rules transforming a set S of fuzzy constraints into “simpler” satisfiability preserving sets Si until either all Si contain a clash (indicating that from all the Si no model of S can be build) or some Si is completed and clash-free, that is, no rule can be further be applied to Si and Si contains no clash (indicating that from Si a model of S can be build).\nA set of fuzzy constraints S contains a clash iff it contains either one of the constraints in Table 1 or S contains a conjugated pair of fuzzy constraints. Each entry in Table 2 says us\n〈w:⊥ ≥ n〉, where n > 0 〈w:⊤ ≤ n〉, where n < 1 〈w:⊥ > n〉, 〈w:⊤ < n〉, 〈w:C < 0〉, 〈w:C > 1〉\nTable 1: Clashes\n〈α < m〉 〈α ≤ m〉\n〈α ≥ n〉 n ≥ m n > m\n〈α > n〉 n ≥ m n ≥ m\nTable 2: Conjugated Pairs\nunder which condition the row-column pair of fuzzy constraints is a conjugated pair. Given a fuzzy constraint ψ, with ψc we indicate a conjugate of ψ (if there exists one). Notice that a conjugate of a fuzzy constraint may be not unique, as there could be infinitely many. For instance, both 〈a:C < 0.6〉 and 〈a:C ≤ 0.7〉 are conjugates of 〈a:C ≥ 0.8〉. Concerning the rules, for each connective ⊓,⊔,¬,∀,∃ there is a rule for each relation ≥, > ,≤, <, i.e. there are 20 rules. The rules have the form:\nΦ → Ψ if Γ (22)\nwhere Φ and Ψ are sequences of fuzzy constraints and Γ is a condition. A rule fires only if the condition Γ holds, if the current set S of fuzzy constraints contains fuzzy constraints matching the precondition Φ and the consequence Ψ is not already in S. After firing, the constraints from Ψ are added to S. The rules are the following:"
    }, {
      "heading" : null,
      "text" : "(¬≥) 〈w:¬C ≥ n〉 → 〈w:C ≤ 1 − n〉\n(¬>) 〈w:¬C > n〉 → 〈w:C < 1 − n〉\n(¬≤) 〈w:¬C ≤ n〉 → 〈w:C ≥ 1 − n〉\n(¬<) 〈w:¬C < n〉 → 〈w:C > 1 − n〉\n(23)\n(⊓≥) 〈w:C ⊓D ≥ n〉 → 〈w:C ≥ n〉, 〈w:D ≥ n〉\n(⊓>) 〈w:C ⊓D > n〉 → 〈w:C > n〉, 〈w:D > n〉\n(⊔≤) 〈w:C ⊔D ≤ n〉 → 〈w:C ≤ n〉, 〈w:D ≤ n〉\n(⊔<) 〈w:C ⊔D < n〉 → 〈w:C < n〉, 〈w:D < n〉\n(⊔≥) 〈w:C ⊔D ≥ n〉 → 〈w:C ≥ n〉 | 〈w:D ≥ n〉\n(⊔>) 〈w:C ⊔D > n〉 → 〈w:C > n〉 | 〈w:D > n〉\n(⊓≤) 〈w:C ⊓D ≤ n〉 → 〈w:C ≤ n〉 | 〈w:D ≤ n〉\n(⊓<) 〈w:C ⊓D < n〉 → 〈w:C < n〉 | 〈w:D < n〉\n(∀≥) 〈w1:∀R.C ≥ n〉, ψ c → 〈w2:C ≥ n〉\nif ψ is 〈(w1, w2):R ≤ 1 − n〉\n(∀>) 〈w1:∀R.C > n〉, ψ c → 〈w2:C > n〉\nif ψ is 〈(w1, w2):R < 1 − n〉\n(∃≤) 〈w1:∃R.C ≤ n〉, ψ c → 〈w2:C ≤ n〉\nif ψ is 〈(w1, w2):R ≤ n〉\n(∃<) 〈w1:∃R.C < n〉, ψ c → 〈w2:C < n〉\nif ψ is 〈(w1, w2):R < n〉\n(∃≥) 〈w:∃R.C ≥ n〉 → 〈(w, x):R ≥ n〉, 〈x:C ≥ n〉\nif x new variable and there is no w′ such that both\n〈(w,w′):R ≥ n〉 and 〈w′:C ≥ n〉 are already in the constraint set\n(∃>) 〈w:∃R.C > n〉 → 〈(w, x):R > n〉, 〈x:C > n〉\nif x new variable and there is no w′ such that both\n〈(w,w′):R > n〉 and 〈w′:C > n〉 are already in the constraint set\n(∀≤) 〈w:∀R.C ≤ n〉 → 〈(w, x):R ≥ 1 − n〉, 〈x:C ≤ n〉\nif x new variable and there is no w′ such that both\n〈(w,w′):R ≥ 1 − n〉 and 〈w′:C ≤ n〉 are already in the constraint set\n(∀<) 〈w:∀R.C < n〉 → 〈(w, x):R > 1 − n〉, 〈x:C < n〉\nif x new variable and there is no w′ such that both\n〈(w,w′):R > 1 − n〉 and 〈w′:C < n〉 are already in the constraint set"
    }, {
      "heading" : null,
      "text" : "Examples of rule instances are the following:\n(∀≥) 〈a:∀R.C ≥ 0.7〉, 〈(a, b):R ≥ 0.6〉 ⇒ 〈b:C ≥ 0.7〉 ψ is 〈(a, b):R ≤ 0.3〉 ψc = 〈(a, b):R ≥ 0.6〉 is a conjugate of ψ\n(∃<) 〈a:∃R.C < 0.8〉, 〈(a, b):R ≥ 0.9〉 ⇒ 〈b:C < 0.8〉 ψ is 〈(a, b):R < 0.8〉 ψc = 〈(a, b):R ≥ 0.9〉 is a conjugate of ψ\n(∃≥) 〈a:∃R.C ≥ 0.8〉 ⇒ 〈(w, x):R ≥ 0.8〉, 〈x:C ≥ 0.8〉 x new variable\n(∀<) 〈a:∀R.C < 0.8〉 ⇒ 〈(w, x):R > 0.2〉, 〈x:C < 0.8〉 x new variable.\nA set of fuzzy constraints S is said to be complete if no rule is applicable to it. Any complete set of fuzzy constraints S2 obtained from a set of fuzzy constraints S1 by applying the above rules (23) is called a completion of S1. Due to the rules (⊔≥), (⊔>), (⊓≤) and (⊓<), more than one completion can be obtained. These rules are called nondeterministic rules. All other rules are called deterministic rules.\nIt is easily verified that the above calculus has the termination property, i.e. any completion of a finite set of fuzzy constraints S can be obtained after a finite number of rule applications.\nExample 6 Let us consider the following fuzzy KB:\nΣ = {〈a:∃R.D ≥ 0.7〉, 〈a:∀R.C ≥ 0.4〉, 〈(a, b):R ≥ 0.5〉, 〈b:C ≥ 0.2〉, 〈b:D ≥ 0.3〉}\nLet α be the assertion a:∃R.(D ⊓ C), let ψ be the fuzzy assertion 〈α ≥ 0.4〉, whereas let ψ′ be the fuzzy assertion 〈α ≥ 0.5〉. It is easily verified that Σ|≈ψ, whereas Σ 6|≈ψ′. We show that Σ 6|≈ψ′, by verifying that there is a clash-free completion of S = Σ∪{〈a:∃R.(D ⊓ C) < 0.5〉} (precisely, there are two of them).\nBy applying rules (23), we have the following sequences.\n(1) 〈a:∃R.D ≥ 0.7〉 Hypothesis:S (2) 〈a:∀R.C ≥ 0.4〉 (3) 〈(a, b):R ≥ 0.5〉 (4) 〈b:C ≥ 0.2〉 (5) 〈b:D ≥ 0.3〉 (6) 〈a:∃R.(D ⊓ C) < 0.5〉\n(7) 〈(a, x):R ≥ 0.7〉, 〈x:D ≥ 0.7〉 (∃≥) : (1) (8) 〈x:C ≥ 0.4〉 (∀≥) : (2), (7) (9) 〈b:D ⊓ C < 0.5〉 (∃<) : (3), (6) (10) 〈x:D ⊓ C < 0.5〉 (∃<) : (6), (7)\nΩ1 | Ω2"
    }, {
      "heading" : null,
      "text" : "where the two sequences Ω1 and Ω2 are defined as follows: for Ω1 we have the two sequences\n(11) 〈b:D < 0.5〉 (⊓<) : (9)\n(12) 〈x:D < 0.5〉 (⊓<) : (10) (13) clash (7), (12)\n(14) 〈x:C < 0.5〉 (⊓<) : (10) (15) clash-free\nand for Ω2 we have the two sequences\n(16) 〈b:C < 0.5〉 (⊓<) : (9)\n(17) 〈x:D < 0.5〉 (⊓<) : (10) (18) clash (7), (17)\n(19) 〈x:C < 0.5〉 (⊓<) : (10) (20) clash-free\n✷\nExample 7 Consider Example 4 and let us prove that Σ′′|≈〈(∃About.Car)(i1) ≥ 0.6〉. We prove the above relation by verifying that all completions of S = Σ′′ ∪ {〈i1:∃About.Car < 0.6〉} contain a clash. In fact, we have the following sequence.\n(1) 〈i1:∃About.(Car ⊓ Ferrari∗) ≥ 0.6〉 Hypothesis:S (2) 〈i2:∃About.(Car ⊓ Porsche∗) ≥ 0.8〉 (3) 〈i1:∃About.Car < 0.6〉 (4) 〈(i1, x):About ≥ 0.6〉, 〈x:(Car ⊓ Ferrari∗) ≥ 0.6〉 (∃≥) : (1) (5) 〈x:Car < 0.6〉 (∃<) : (3), (4) (6) 〈x:Car ≥ 0.6〉, 〈x:Ferrari∗ ≥ 0.6〉, (⊓) : (4) (7) clash (5), (6)\n✷\nProposition 3 A finite set of fuzzy constraints S is satisfiable iff there exists a clash free completion of S. ⊣\nProof: ⇒ .) Given the termination property, it is easily verified, by case analysis, that the\nabove rules are sound, i.e. if S1 is satisfiable then there is a satisfiable completion S2 of S1 and, thus, S2 contains no clash. For instance, let us show that the (∀≥) rule is sound. Assume I is an interpretation satisfying 〈w1:∀R.C ≥ n〉 and 〈(w1, w2):R ≥ m〉, where m > 1−n. Let us show that I satisfies 〈w2:C ≥ n〉. Since I satisfies 〈w1:∀R.C ≥ n〉 it follows that max{1 − RI(w1\nI , w2 I), CI(w2\nI)} ≥ n. But, RI(w1 I , w2\nI) ≥ m and, thus, 1 − RI(w1\nI , w2 I) ≤ 1 − m < n. As a consequence, CI(w2\nI) ≥ n follows, i.e. I satisfies 〈w2:C ≥ n〉.\n⇐ .) Suppose that there exists a clash free completion S′ of S. We build from S′ an interpretation I satisfying S′ and, as S ⊆ S′, I satisfies S. I is called canonical model.\nFor any primitive constraint α ∈ S′, we collect its lower and upper bound restrictions in S′ as follows: let\nN≥[α] = {n : 〈α ≥ n〉 ∈ S′}\nN>[α] = {n : 〈α > n〉 ∈ S′}\nN≤[α] = {n : 〈α ≤ n〉 ∈ S′}\nN<[α] = {n : 〈α < n〉 ∈ S′}."
    }, {
      "heading" : null,
      "text" : "We have to define I such that for each constraint α, I satisfies the constraints collected in the sets N (·)[α]: given N≥[α], the truth value n of α under I has to be such that n ≥ maxN≥[α], whereas w.r.t. N>[α], the truth value n of α under I has to be such that n ≥ maxN>[α] + ǫ, for a ǫ > 0. Similarly, for the other cases, for instance, w.r.t. N<[α], the truth value n of α under I has to be such that n ≤ maxN>[α] − ǫ, for a ǫ > 0. The two tables below\nN≥[α] N>[α] glb[α, ǫ]\n∅ ∅ 0\n∅ 6= ∅ n′ + ǫ\n6= ∅ ∅ n\n6= ∅ 6= ∅ if n > n′ then n else n′ + ǫ\nN≤[α] N<[α] lub[α, ǫ]\n∅ ∅ 1\n∅ 6= ∅ m′ − ǫ\n6= ∅ ∅ m\n6= ∅ 6= ∅ if m < m′ then m else m′ − ǫ\ndefine for any α ∈ S′ and ǫ > 0, lub[α, ǫ] and glb[α, ǫ], the lower and upper bound constraints which I has to satisfy. In the tables, with n, n′,m,m′ we indicate maxN≥[α], maxN>[α], minN≤[α] and minN<[α], respectively. In each table we distinguish between the four cases where the sets are empty (no constraints) or not. For instance, if for a constraint w:A, only 〈w:A ≥ 0.3〉, 〈w:A > 0.4〉, 〈w:A ≤ 0.5〉 and 〈w:A < 0.6〉 are in S′, then according to the first table bellow (row 4), for a ǫ > 0, glb[w:A, ǫ] = 0.4 + ǫ, whereas lub[w:A, ǫ] = 0.5.\nWe will define I such that AI(wI) = glb[w:A, ǫ]. To make sure that glb[w:A, ǫ] ≤ AI(wI) ≤ lub[w:A, ǫ], we have to choose an ǫ > 0 small enough such that glb[w:A, ǫ] ≤ lub[w:A, ǫ], i.e. 0.4 + ǫ ≤ 0.5. The existence of such an ǫ > 0 is guaranteed by the fact that S′ is clash-free. An additional condition that the choice of such an ǫ has to satisfy concerns the case of a constraint α of type (w,w′):R. Let us show the problem with an example. Suppose S′ is {〈(w,w′):R > 0.3〉, 〈w:∀R.B ≥ 0.6〉, 〈w′:B ≤ 0.5〉}. Therefore, according to the above tables, glb[(w,w′):R, ǫ1] = 0.3 + ǫ1, lub[(w,w\n′):R, ǫ1] = 1, glb[w ′:B, ǫ2] = 0\nand lub[w′:B, ǫ2] = 0.5. So, it seems that it is sufficient to choose an ǫ1 > 0 such that 0.3 + ǫ1 ≤ 1, which is indeed not the case. In fact, 〈w:∀R.B ≥ 0.6〉 and 〈w\n′:B ≤ 0.5〉 introduces an upper bound on (w,w′):R, i.e. the truth-value of (w,w′):R under I has to be less or equal to 0.4 = 1− 0.6. That is, we have to choose an ǫ1 > 0 such that 0.3+ ǫ1 ≤ 0.4. Otherwise, the truth-value of w′:B under I has to be greater or equal to 0.6, contradicting lub[w′:B, ǫ2] = 0.5. Again, the existence of such an ǫ is guaranteed as S\n′ is clash-free. Summing up: since S′ is clash-free, it follows that for each primitive constraint α, there\nis ǫ[α] > 0 such that\nglb[α, ǫ[α]] ≤ lub[α, ǫ[α]]\nwhere if α is (w,w′):R then\nfor each 〈w:∀R.C ≥ n〉, if 〈w′:C ≥ n〉 6∈ S′ then glb[α, ǫ[α]] ≤ 1 − n; for each 〈w:∀R.C > n〉, if 〈w′:C > n〉 6∈ S′ then glb[α, ǫ[α]] < 1 − n; for each 〈w:∃R.C ≤ n〉, if 〈w′:C ≤ n〉 6∈ S′ then glb[α, ǫ[α]] ≤ n; for each 〈w:∃R.C < n〉, if 〈w′:C < n〉 6∈ S′ then glb[α, ǫ[α]] < n.\n(24)"
    }, {
      "heading" : null,
      "text" : "Now, consider the following interpretation I such that\n1. the domain ∆I is the set of objects appearing in S′;\n2. wI = w, for all w ∈ ∆I ;\n3. ⊤I(wI) = 1 and ⊥I(wI) = 0, for all w ∈ ∆I ;\n4. AI(wI) = glb[w:A, ǫ[w:A]], for all primitive concepts A and for all w ∈ ∆I ; and\n5. RI(wI , w′I) = glb[(w,w′):R, ǫ[(w,w′):R]], for all roles R and for all w,w′ ∈ ∆I .\nWe show, on induction on the structure of fuzzy constraints ψ ∈ S′, that I satisfies S′.\nCase 〈w:A > n〉: By definition, AI(wI) = glb[w:A, ǫ[w:A]] > n and, thus, I satisfies 〈w:A > n〉. The cases ≥,≤ and < are similar.\nCase 〈(w,w′):R ≥ n〉: By definition, RI(wI , w′I) = glb[(w,w′):R, ǫ[(w,w′):R]] ≥ n and, thus, I satisfies 〈(w,w′):R ≥ n〉. The cases >,≤ and < are similar.\nCase 〈w:C ⊓D ≥ n〉: From 〈w:C ⊓D ≥ n〉 ∈ S′ and S′ completed, 〈w:C ≥ n〉 ∈ S′ and 〈w:D ≥ n〉 ∈ S′ follows. By induction, I satisfies both 〈w:C ≥ n〉 and 〈w:D ≥ n〉 and, thus, I satisfies 〈w:C ⊓D ≥ n〉. The cases >,≤ and < are similar. The cases involving ¬C and C ⊔D can be shown similarly.\nCase 〈w:∀R.C ≥ n〉: Let α be (w,w′):R and consider 〈w′:C ≥ n〉. It follows that, either (i) 〈w′:C ≥ n〉 ∈ S′; or (ii) 〈w′:C ≥ n〉 6∈ S′. Case (i): by induction, I satisfies 〈w′:C ≥ n〉 and, thus, max{1 − RI(w,w′), CI(w′)} ≥ CI(w′) ≥ n. Case (ii): by construction RI(w,w′) = glb[(w,w′):R, ǫ[(w,w′):R]] and RI(w,w′) ≤ 1−n (see Equation 24). It follows that max{1− RI(w,w′), CI(w′)} ≥ 1−RI(w,w′) ≥ n. Therefore, infw′∈∆I max{1−R\nI(w,w′), CI(w′)} ≥ n, i.e. I satisfies 〈w:∀R.C ≥ n〉.\nThe cases 〈w:∀R.C > n〉, 〈w:∃R.C ≤ n〉 and 〈w:∃R.C < n〉 can be shown similarly.\nCase 〈w:∃R.C ≥ n〉: Since S′ is complete, both 〈(w,w′):R ≥ n〉 and 〈w′:C ≥ n〉 are in S′. By induction, I satisfies both 〈(w,w′):R ≥ n〉 and 〈w′:C ≥ n〉. As a consequence, min{RI(w,w′), CI(w′)} ≥ n follows and, thus, supw′∈∆I min{R\nI(w,w′), CI(w′)} ≥ n, i.e. I satisfies 〈w:∃R.C ≥ n〉.\nThe cases 〈w:∃R.C > n〉, 〈w:∀R.C ≤ n〉 and 〈w:∀R.C < n〉 can be shown similarly. ✷ The following example shows how such an interpretation is build.\nExample 8 Let us consider Example 6 and the fuzzy assertion ψ′. We have shown that Σ 6|≈ψ′ by constructing two clash-free completions from S. Let us consider the clash-free completion S1 in branch Ω1:\nS1 = Σ ∪ { 〈a:∃R.(D ⊓ C) < 0.5〉, 〈(a, x):R ≥ 0.7〉, 〈x:D ≥ 0.7〉, 〈x:C ≥ 0.4〉, 〈b:D ⊓ C < 0.5〉, 〈x:D ⊓ C < 0.5〉, 〈b:D < 0.5〉, 〈x:C < 0.5〉}\nWe show that S1 is satisfiable by building an interpretation as described in the proof of Proposition 3. Accordingly, for ǫi > 0,"
    }, {
      "heading" : null,
      "text" : "glb[(a, b):R, ǫ1] = 0.5 glb[b:C, ǫ2] = 0.2 glb[b:D, ǫ3] = 0.3 glb[(a, x):R, ǫ4] = 0.7 glb[x:D, ǫ5] = 0.7 glb[x:C, ǫ6] = 0.4\nlub[(a, b):R, ǫ1] = 1 lub[b:C, ǫ2] = 1 lub[b:D, ǫ3] = 0.5 − ǫ3 lub[(a, x):R, ǫ4] = 1 lub[x:D, ǫ5] = 1 lub[x:C, ǫ6] = 0.5 − ǫ6.\nTherefore, we can freely choose ǫ2, ǫ4 and ǫ5, whereas ǫ3 and ǫ6 have to be such that 0.3 ≤ 0.5 − ǫ3 and 0.4 ≤ 0.5 − ǫ6. As both 〈(a, b):R ≥ 0.5〉 and 〈a:∀R.C ≥ 0.4〉 are in S1, while 〈b:C ≥ 0.4〉 6∈ S1, we have the additional restriction on the choice of ǫ1 (see Equation 24) that glb[(a, b):R, ǫ1] ≤ 0.6. But, glb[(a, b):R, ǫ1] = 0.5 ≤ 0.6, for every ǫ1 and, thus, the choice of ǫ1 is also free. A solution to the ǫi is e.g. ǫi = 0.1 and, thus, let I be the following interpretation:\n1. the domain ∆I is the set {a, b, x};\n2. wI = w, for all w ∈ ∆I ;\n3. ⊤I(wI) = 1 and ⊥I(wI) = 0, for all w ∈ ∆I ;\n4. CI(b) = 0.2, DI(b) = 0.3, DI(x) = 0.7 and CI(x) = 0.4 (in all other cases, AI(w) = 0); and\n5. RI(a, b) = 0.5 and RI(a, x) = 0.7 (in all other cases, R′I(w,w′) = 0).\nNow, it is easily verified that I satisfies S1 and S. ✷\nFrom a computational complexity point of view, the fuzzy entailment problem can be proven to be a PSPACE-complete problem, as is the classical entailment problem.\nProposition 4 Let Σ be a fuzzy KB and let ψ be a fuzzy assertion. Determining whether Σ|≈ψ is a PSPACE-complete problem. ⊣\nProof: We have seen that termination of the above algorithm is guaranteed. Additionally, for a crisp KB K, define ΣK = {〈α ≥ 1〉 : α ∈ K}. By definition, each ψ ∈ ΣK is KBnormalised and 〈α ≥ 0.5〉 is query-normalised. Then from Proposition 2 it follows that K |= α iff ΣK |≈〈α ≥ 0.5〉. From the PSPACE-completeness of the entailment problem in crisp ALC (Schmidt-Schauß & Smolka, 1991), PSPACE-hardness of the fuzzy entailment problem follows. Unfortunately, our algorithm, as it is, requires exponential space due a well know problem inherited from the crisp case. Indeed, it easily verified that a completion of S = {x:C}, where C is the concept\n(∃R.A11) ⊓ (∃R.A12) ⊓ ∀R.((∃R.A21) ⊓ (∃R.A22) ⊓ . . .∀R.((∃R.An1) ⊓ (∃R.An2)) . . .)\ncontains at least 2n + 1 variables. In order to require polynomial space, Schmidt-Schauß and Smolka (1991) introduced the so-called trace rule (T∃) for the ∃ operator. The (T∃) rule modifies the (∃) rule as shown below."
    }, {
      "heading" : null,
      "text" : "(∃) w:∃R.C → (w, x):R, x:C if x new variable and there is no w′ such that both (w,w′):R and w′:C are already in the actual constraint set\n(T∃) w:∃R.C → (w, x):R, x:C if x new variable and no (w,w′):R′ is already in the actual set of constraints.\nThe difference between the (∃) rule and the (T∃) is that the latter is applied only once for an object w. We are thus compelled to make a nondeterministic choice amongst the constraints of the form w:∃R.C. Furthermore, it is convenient to apply a trace rule only if none of the other (⊓), (⊔), (¬) and (∀) rules are applicable.\nWe say that a set of constraints S′ is a trace of a set S if S′ obtained from S by application of the rules where the (∃) has been replaced by (T∃). Schmidt-Schauß and Smolka (1991) have shown that a set of constraints S = {x:C} is satisfiable iff no trace S′\nof S contains a clash. As the size of a trace S′ of S is bounded polynomially by the size of S, polynomial space is sufficient to prove satisfiability.\nThe above trace rule works if we start from a constraint set of the form {x:C}. In the general case, we have to rely on so-called pre-completions (Baader & Hollunder, 1991b; Donini et al., 1994). A set of constraints S′ is said to be a pre-completion of a given set of constraints S, if it is obtained from S by the application of the (⊓), (⊔), (¬) and (∀) rules, and none of these rules is applicable to S′ (the size of S′ is polynomially bounded by the size of S). As a consequence of this “pre-processing” step, all role relationships (w,w′):R ∈ S′ can be ignored, i.e. removed from S′, because they no longer carry any additional information. Now, in a second step we can apply the method above by checking whether no trace from S′ contains a clash. In summary, a set of constraints S is satisfiable iff there is a pre-completion S′ of S such that no trace S′′ of S′ contains a clash.\nIn the fuzzy case, similar trace rules can easily be defined. For instance, the correspondent trace rule of the (∃≥) rule is\n(T∃≥) 〈w:∃R.C ≥ n〉 → 〈(w, x):R ≥ n〉, 〈x:C ≥ n〉 if x new variable and no 〈(w,w′):R′ ≥ m〉 is already in the actual set of fuzzy constraints.\nThe trace rules correspondent to the rules (∃>), (∀≤) and (∀<) are defined similarly. By proceeding as for the crisp case, it can be shown that (i) a set of fuzzy constraints S is satisfiable iff there is a pre-completion S′ of S such that no trace S′′ of S′ contains a clash; and (ii) the size of a trace S′′ of S is bounded polynomially by the size of S. As a consequence, the satisfiability problem is in PSPACE, which completes the proof. ✷\nThis result establishes an important property about our fuzzy DL. In effect, it says that no additional computational cost has to be paid for the major expressive power.\n5.2 A Decision Procedure for the Subsumption Problem\nIn this section we address the subsumption problem, i.e. deciding whether C ¹ΣT D, where C and D are two concepts and Σ is a fuzzy terminology. As we have seen (see Example 4),"
    }, {
      "heading" : null,
      "text" : "C ¹ΣT D can be reduced to the case of an empty terminology by applying the KB expansion process. So, without loss of generality, we can limit our attention to the case C ¹∅ D.\nAt first, an analogue to relation (12) holds. In fact, it can easily be shown that\nProposition 5 Let C and D be two concepts. It follows that C ¹∅ D iff for all n > 0 〈a:C ≥ n〉|≈〈a:D ≥ n〉, where a is a new individual. ⊣\nProof: ⇒ .) Assume that C ¹∅ D holds. Suppose to the contrary that ∃n > 0 such that\n〈a:C ≥ n〉 6|≈〈a:D ≥ n〉. Therefore, there is an interpretation I and an n > 0 such that CI(aI) ≥ n and DI(aI) < n. But, from the hypothesis n ≤ CI(aI) ≤ DI(aI) < n follows. Absurd.\n⇐ .) Assume that for all n > 0, 〈a:C ≥ n〉|≈〈a:D ≥ n〉 holds. Suppose to the contrary that C 6¹∅ D holds. Therefore, there is an interpretation I and d ∈ ∆\nI such that CI(d) > DI(d) ≥ 0. Let us extent I to a such that aI = d and consider n = CI(d) > 0. Of course, I satisfies 〈a:C ≥ n〉. Therefore, from the hypothesis it follows that I satisfies 〈a:D ≥ n〉, i.e. DI(d) ≥ n = CI(d) > DI(d). Absurd. ✷ How can we check whether for all n > 0 〈a:C ≥ n〉|≈〈a:D ≥ n〉 holds? A solution to this problem, restricted to the propositional case, is given by Straccia (2000a). Indeed, it is shown that\nProposition 6 (Straccia, 2000a) Let p and q be two propositions, 0 < n1 ≤ 0.5 and 1 ≥ n2 > 0.5. It follows that for all n > 0, 〈p ≥ n〉|≈〈q ≥ n〉 iff for both m ∈ {n1, n2}, 〈p ≥ m〉|≈〈q ≥ m〉 holds. ⊣\nThe above proposition establishes that, at the propositional level, in order to check whether 〈p ≥ n〉|≈〈q ≥ n〉 holds for all n, it is sufficient to check the entailment relation with respect to two values n1, n2. The first being less or equal than 0.5, while the second being greater than 0.5, respectively. This is due to the fact that for given values n, n′ ≤ 0.5, any proof of 〈p ≥ n〉|≈〈q ≥ n〉 can be converted into a proof for 〈p ≥ n′〉|≈〈q ≥ n′〉 and vice-versa. The case where n, n′ > 0.5 is similar.\nThe above proposition can be extended to our fuzzy DL as well.\nLemma 1 Let C and D be two concepts, 0 < n, n′ ≤ 0.5 and let a be an individual. It follows that 〈a:C ≥ n〉|≈〈a:D ≥ n〉 iff 〈a:C ≥ n′〉|≈〈a:D ≥ n′〉. ⊣\nProof: It is enough to show that S = {〈a:C ≥ n〉, 〈a:D < n〉} is satisfiable iff S′ = {〈a:C ≥ n′〉, 〈a:D < n′〉} is satisfiable.\n⇒ .) Assume that S is satisfiable. So, there is a clash-free completion S̃ of S. With S̃[n/n′] we indicate the set of fuzzy constraints obtained from S̃, by replacing any value n in S̃ with n′ and any value 1 − n in S̃ with 1 − n′, respectively. We will show that S̃[n/n′] is a clash-free completion of S′ and, thus, S′ is satisfiable.\nLet r1, . . . , rk, k ≥ 0 be the sequence of inference rule applications, which applied to S get S̃. Let S̃0 = S, let S̃k = S̃ and for 1 ≤ i ≤ k let S̃i be the set of fuzzy constraints obtained from S̃i−1 by the application of the ri rule to S̃i−1.\nBy induction on k, we show that (i) the sequence of inference rules r1, . . . , rk can be applied to S′ as well; (ii) for S̃′0 = S\n′, S̃′k = S̃′ and S̃′i the set of fuzzy constraints obtained"
    }, {
      "heading" : null,
      "text" : "from S̃′i−1 by the application of the ri rule to S̃′i−1, we have that S̃′i = S̃i[n/n ′] and, thus,\nS̃′ = S̃′k = S̃k[n/n ′] = S̃[n/n′]; and (iii) if S̃k is a clash-free completion of S then S̃′k is a\nclash-free completion of S′ as well.\ncase k = 0: No rule is applicable to S and S̃0 = S is a completion of S. By case analysis, (i) it is easily verified that no rule is applicable to S′ and (ii) S′ = S̃′0 = S̃0[n/n\n′] = S[n/n′]. (iii) So, S̃′0 is a completion of S ′. We show that S̃′0 is clash-\nfree. Assume to the contrary that S̃′0, i.e. S ′ contains a clash. As a consequence,\nS′ = {〈a:C ≥ n′〉, 〈a:C < n′〉}. But then, S is {〈a:C ≥ n〉, 〈a:C < n〉}, contrary to the assumption that S is clash-free.\ninduction step: by case analysis on the rule rk. We limit our presentation to the (∀≥) rule as for the other the proof is similar.\nIf rk is (∀≥) then it can be verified that there are 〈w:∀R.C ′ ≥ n〉 and 〈(w,w′):R > 1 − n〉\nin S̃k−1 such that 〈w ′:C ′ ≥ n〉 6∈ S̃k−1 and 〈w\n′:C ′ ≥ n〉 ∈ S̃k. By induction, S̃k−1[n/n ′] =\nS̃′k−1 and, thus, both 〈w:∀R.C ′ ≥ n′〉 and 〈(w,w′):R > 1 − n′〉 are in S̃′k−1, while\n〈w′:C ′ ≥ n′〉 6∈ S̃′k−1. Therefore, (i) rule rk is applicable to S̃′k−1 and 〈w ′:C ′ ≥ n′〉 ∈\nS̃′k; (ii) so, S̃′k = S̃k[n/n ′]; (iii) from S̃′k = S̃k[n/n\n′] and, as S̃k is a completion of S, by case analysis, it is easily verified that no rule is further applicable to S̃′k. Therefore, S̃′k is a completion of S\n′. Let us show that S̃′k is clash free. Assume to the contrary that S̃′k contains a clash. If one of the cases in Table 1 holds, then from S̃′k = S̃k[n/n\n′] it follows easily that there is a clash in S̃k as well, which is contrary to assumption that S̃k is clash-free. On the other hand, if there is a conjugated pair of fuzzy constraints in S̃′k (see Table 2), then one of the following three pairs is in S̃′k: (a) 〈α ≥ n′〉 and 〈α < n′〉; (b) 〈α ≤ 1 − n′〉 and 〈α > 1 − n′〉; and (c) 〈α < n′〉 and 〈α > 1 − n′〉 (note that n, n′ ≤ 0.5). Again, as S̃′k = S̃k[n/n\n′], it follows that there is a conjugated pair in S̃k as well, which is contrary to assumption that S̃k is clash-free.\n⇐ .) Can be proven similarly to ⇒ .). ✷\nBy proceeding as for Lemma 1 it can be shown that\nLemma 2 Let C and D be two concepts, 1 ≥ n, n′ > 0.5 and let a be an individual. It follows that 〈a:C ≥ n〉|≈〈a:D ≥ n〉 iff 〈a:C ≥ n′〉|≈〈a:D ≥ n′〉. ⊣\nFrom Lemma 1 and Lemma 2 it follows that\nProposition 7 Let C and D be two concepts, 0 < n1 ≤ 0.5, 1 ≥ n2 > 0.5 and let a be an individual. It follows that for all n > 0 〈a:C ≥ n〉|≈〈a:D ≥ n〉 iff for both m ∈ {n1, n2}, 〈a:C ≥ m〉|≈〈a:D ≥ m〉 holds. ⊣\nAs a consequence, the subsumption problem can be reduced to the entailment problem for which we have a decision algorithm."
    }, {
      "heading" : null,
      "text" : "5.3 A Decision Procedure for the BTVB Problem\nWe address now the problem of determining glb(Σ, α) and lub(Σ, α). This is important, as computing, e.g. glb(Σ, α), is in fact the way to answer a query of type “to which degree is α (at least) true, given the (imprecise) facts in Σ?”.\nWithout loss of generality, we will assume that all concepts are in NNF (Negation Normal Form). Straccia (2000b) has shown that, in case of fuzzy propositional logic, from a set Σ of fuzzy propositions of the form 〈p ≥ n〉 and 〈p ≤ n〉, where p is a proposition, it is possible to determine a finite set NΣ ⊂ [0, 1], where |NΣ| is O(|Σ|), such that glb(Σ, q) ∈ NΣ, i.e. the greatest lower bound of a proposition q w.r.t. Σ has to be an element of NΣ. Therefore, glb(Σ, q) can be determined by computing the greatest value n ∈ NΣ such that Σ|≈〈q ≥ n〉. An easy way to search for this n is to order the elements of NΣ and then to perform a binary search among these values by successive entailment tests. Dually, as lub(Σ, q) = 1 − glb(Σ,¬q) holds, the lub can either be computed from the glb or, as lub(Σ, q) ∈ 1 −NΣ, where 1 −NΣ = {1 − n : n ∈ NΣ}, we can compute it by determining the smallest value in 1 −NΣ.\nProposition 8 (Straccia, 2000b) Let Σ be a set of fuzzy propositions in NNF and let q be a proposition. Then glb(Σ, q) ∈ NΣ and lub(Σ, q) ∈ 1 −NΣ, where\nNΣ = {0, 0.5, 1} ∪ {n : 〈p ≥ n〉 ∈ Σ} ∪ {1 − n : 〈p ≤ n〉 ∈ Σ}\n1 −NΣ = {1 − n : n ∈ NΣ}.\n⊣\nThe above Proposition 8 can easily be extended our fuzzy description logic case. Essentially, the quantifiers do not change the possible values of glb(Σ, F ) and lub(Σ, F ).\nProposition 9 Let Σ be a set of fuzzy assertions in NNF and let α be an assertion. Then glb(Σ, α) ∈ NΣ and lub(Σ, α) ∈ 1 −NΣ, where\nNΣ = {0, 0.5, 1} ∪ {n : 〈α ≥ n〉 ∈ Σ} ∪ {1 − n : 〈α ≤ n〉 ∈ Σ}\n1 −NΣ = {1 − n : n ∈ NΣ}.\n⊣\nProof: Let us show that glb(Σ, α) ∈ NΣ. Let m be glb(Σ, α). By definition, if m = 0 then S = Σ∪ {〈α < n〉} is satisfiable for any n > 0 and 0 ∈ NΣ. Otherwise, m > 0 is the largest value such that S = Σ∪ {〈α < m〉} is not satisfiable. Let us mark each sub-expression in α with a ∗, so that we can trace the components of the query assertion α during a deduction."
    }, {
      "heading" : null,
      "text" : "Consider a completion S′ of S. Starting from 〈α < m〉, by applying the rules of inference, only ∗ marked expressions of type 〈α′ < m〉 or 〈α′ > 1 −m〉 can appear in S′. Furthermore, as S is not satisfiable, S′ contains a clash, i.e. the value m is the largest value such that all completions S′ of S contain a clash. Let us analyse S′. As S′ contains a clash, then either (i) there is a clash according to Table 1, or (ii) there is a clash according to Table 2. If (i) is the case, i.e. there is ψ ∈ S′ which is a clash, then we have to distinguish between two cases: (a) ψ is not marked with ∗ and (b) ψ is marked with ∗. In the former case, S′\ncontains a clash independently of the value m and, thus, the largest possible value m for which S′ contains a clash is 1. In the latter case, as m > 0, either ψ = 〈w:⊥ > 1 −m〉 or ψ = 〈w:⊤ < m〉 which are both clashes for any value of m. As a consequence, the largest possible value m for which S′ contains a clash according to Table 1 is 1. Assume (ii) is the case, i.e. a conjugated pair of fuzzy constraints ψ and ψ′ is in S′. Similarly to the previous case, we have to distinguish the cases for which ψ and ψ′ are marked with ∗. There are four cases:\n(a) ψ = 〈α ≥ k〉 and ψ′ = 〈α′ ≤ k′〉 are in S′, none is marked with ∗ and k > k′. Therefore, S′ contains a clash for any value of m and, thus, the largest choice is 1;\n(b) ψ = 〈α ≥ k〉 and ψ′ = 〈α′ < m〉 are in S′, only ψ′ is marked with ∗ and k ≥ m. Therefore, S′ contains a clash for any value of m ≤ k and, thus, the largest choice for m is k. It is easily verified by case analysis on the rules that from ψ ∈ S′, k ∈ NΣ follows;\n(c) ψ = 〈α ≤ k〉 and ψ′ = 〈α′ > 1 −m〉 are in S′, only ψ′ is marked with ∗ and k ≤ 1−m. Therefore, S′ contains a clash for any value of m ≤ 1 − k and, thus, the largest choice for m is 1 − k. It is easily verified by case analysis on the rules that from ψ ∈ S′, 1 − k ∈ NΣ\nfollows;\n(d) ψ = 〈α < m〉 and ψ′ = 〈α′ > 1 −m〉 are in S′, both are marked with ∗ and m ≤ 1−m. Therefore, S′ contains a clash for any value of m ≤ 0.5 and, thus, the largest choice for m is 0.5.\nSumming up, we have proved that the largest possible value for m is such that m ∈ NΣ. ✷\nThe algorithms computing glb(Σ, α) and lub(Σ, α) are described in Table 3. For instance, by a binary search on NΣ, the value of glb(Σ, α) can be determined in at most log |NΣ| fuzzy entailment tests.\n6. Conclusions and Future Work\nIn this work, we have presented a quite general fuzzy extension of the DL ALC, a significant and expressive representative of the various DLs. Our fuzzy DL enables us to reason in presence of imprecise ALC concepts, i.e. fuzzy ALC concepts. From a semantics point of view, fuzzy concepts are interpreted as fuzzy sets i.e. given a concept C and an individual a, C(a) is interpreted as the truth-value of the sentence “a is C”. From a syntax point of view, we allow to specify lower and upper bounds of the truth-value of C(a). Complete algorithms for reasoning in it have been presented, that is, we have devised algorithms for solving the entailment problem, the subsumption problem as well as the best truth-value bound problem."
    }, {
      "heading" : null,
      "text" : "Algorithm Max(Σ, α) Set Min := 0 and Max := 2.\n1. Pick n ∈ NΣ \\ {0} such that Min < n < Max. If there is no such n, then set glb(Σ, α) := Min and exit.\n2. If Σ|≈〈α ≥ n〉 then set Min = n, else set Max = n. Go to Step 1.\nAlgorithm Min(Σ, α) Set Min := 0 and Max := 2.\n1. Pick n ∈ (1 −NΣ) \\ {0} such that Min < n < Max. If there is no such n, then set lub(Σ, α) := min{Max, 1} and exit.\n2. If Σ|≈〈α ≤ n〉 then set Max = n, else set Min = n. Go to Step 1.\nTable 3: Algorithms Max(Σ, α) and Min(Σ, α)\nAn important point concerns computational complexity. The complexity result shows that the additional expressive power has no impact from a computational complexity point of view.\nThe extension of DLs to the management of vagueness is not new (Tresp & Molitor, 1998; Yen, 1991). Yen was the first, to the best of my knowledge, introducing vagueness into a simple DL. His language has two interesting points not included into our language. Firstly, it allows the definition of vague concepts by means of explicit membership functions over a domain, e.g. LowPressure:≈ domain(AirPressure);membershipfx(λp.low(p)). Here the domain over p ranges is given by AirPressure. λp.low(p) determines the membership degree of being a pressure p low. Secondly, the language allows concept modifiers, like Very or Slightly, by means of which concepts like “very low pressure” can be defined through VeryLowPressure:≈ Very(LowPressure). This last idea has been generalised to ALC by Tresp and Molitor (1998) where a certain type of concept modifiers are allowed. Strictly speaking, the language defined by Tresp and Molitor is more expressive, as we do not consider concept modifiers. From a semantics point of view, the extension to Tresp and Molitor’s language is quite straightforward. But, the cost that we have to pay for this increasing expressive power is that, from a computational complexity and algorithms point of view, things changes radically. Indeed, according to Tresp and Molitor for each “completion” a linear optimisation problem is generated (set of inequations of the form op1(t1)Rop2(t2) or op1(t1)Rf(op2(t2)), where ti is a truth-value variable, R ∈ {≤,≥,=, opi ∈ {id,mi}, with id(t) the identity and mi(t) is a modifier function over truth-value variables, respectively, and f ∈ {min,max}-derived from the semantics of the connectors ⊓,⊔) and then solved for the best value. Then, the minimum among all computed solutions is taken. The solutions can be computed by relying on methods from the domain of linear programming, e.g. the"
    }, {
      "heading" : null,
      "text" : "simplex method (Papadimitriou & Steiglitz, 1982). While it is possible to devise a similar approach for our fuzzy DL as well, we have seen that this is not necessary.\nBoth aspects considered by Tresp and Molitor and by Yen, although interesting, are not crucial w.r.t. how we model logic-based multimedia information retrieval, where underlaying text, image and video analysis tools provide us fuzzy assertions e.g. of the form 〈a:∃About.C ≥ n〉 from which we may infer 〈a:∃About.D ≥ m〉.\nThis work can be used as a basis both for extending existing DL based systems and for further research. In this latter case, there are several open points. For instance, it is not clear yet how to reason both in case of fuzzy specialisation of the general form C≺·D and in the case cycles are allowed in a fuzzy KB. Another interesting topic for further research concerns the semantics of fuzzy connectives. Of course several other choices for the semantics of the connectives ⊓,⊔,¬,∃,∀ can be considered. While for a huge number of proposals given in the literature their impact from a semantics point of view is well understood, the question how they impact from a computational complexity and algorithms point of view remains still open.\nAcknowledgements\nI would like to thank the three anonymous reviewers for their helpful comments on an early version of this paper. This is an extension and revision of the paper appeared in AAAI-98.\nReferences\nBaader, F., & Hollunder, B. (1991a). KRIS: Knowledge representation and inference system, system description. ACM SIGART Bulletin, 2, 8–14.\nBaader, F., & Hollunder, B. (1991b). A terminological knowledge representation system with complete inference algorithm. In Proc. of the Workshop on Processing Declarative Knowledge, PDK-91, No. 567 in Lecture Notes in Artificial Intelligence, pp. 67–86. Springer-Verlag.\nBacchus, F. (1990). Representing and Reasoning with Probabilistic Knowledge. The MIT Press.\nBellman, R., & Giertz, M. (1973). On the analytic formalism of the theory of fuzzy sets. Information Sciences, 5, 149–156.\nBrachman, R. J. (1992). “reducing” CLASSIC to practice: Knowledge representation meets reality. In Proc. of the 3rd Int. Conf. on the Principles of Knowledge Representation and Reasoning (KR-92), pp. 247–258. Morgan Kaufmann, Los Altos.\nBuchheit, M., Donini, F. M., & Schaerf, A. (1993a). Decidable reasoning in terminological knowledge representation systems. In Proc. of the 13th Int. Joint Conf. on Artificial Intelligence (IJCAI-93), pp. 704–709 Chambery, France. Morgan Kaufmann, Los Altos."
    }, {
      "heading" : null,
      "text" : "Buchheit, M., Donini, F. M., & Schaerf, A. (1993b). Decidable reasoning in terminological knowledge representation systems. Journal of Artificial Intelligence Research, 1, 109– 138.\nChen, J., & Kundu, S. (1996). A sound and complete fuzzy logic system using Zadeh’s implication operator. In Ras, Z. W., & Maciek, M. (Eds.), Proc. of the 9th Int. Sym. on Methodologies for Intelligent Systems (ISMIS-96), No. 1079 in Lecture Notes in Artificial Intelligence, pp. 233–242. Springer-Verlag.\nda Silva, R. M., Pereira, A. E. C., & Netto, M. A. (1994). A system of knowledge representation based on formulae of predicate calculus whose variables are annotated by expressions of a fuzzy terminological logic. In Proc. of the 5th Int. Conf. on Information Processing and Managment of Uncertainty in Knowledge-Based Systems, (IPMU-94), No. 945 in Lecture Notes in Computer Science. Springer-Verlag.\nDonini, F. M., Lenzerini, M., Nardi, D., & Schaerf, A. (1994). Deduction in concept languages: From subsumption to instance checking. Journal of Logic and Computation, 4 (4), 423–452.\nDubois, D., & Prade, H. (1980). Fuzzy Sets and Systems. Academic Press, New York, NJ.\nDubois, D., & Prade, H. (1994). Can we enforce full compositionality in uncertainty calculi?. In Proc. of the 11th Nat. Conf. on Artificial Intelligence (AAAI-94), pp. 149–154 Seattle, Washington.\nDubois, D., & Prade, H. (1996). Approximate and commonsense reasoning: From theory to practice. In Ras, Z. W., & Maciek, M. (Eds.), Proc. of the 9th Int. Sym. on Methodologies for Intelligent Systems (ISMIS-96), No. 1079 in Lecture Notes in Artificial Intelligence, pp. 19–33. Springer-Verlag.\nHalpern, J. Y. (1990). An analysis of first-order logics of probability. Artificial Intelligence Journal, 46, 311–350.\nHeinsohn, J. (1994). Probabilistic description logics. In de Mantara, R. L., & Pool, D. (Eds.), Proceedings of the 10th Conference on Uncertainty in Artificila Intelligence, pp. 311–318.\nHollunder, B. (1994). An alternative proof method for possibilistic logic and its application to terminological logics. In 10th Annual Conference on Uncertainty in Artificial Intelligence Seattle, Washington. R. Lopez de Mantaras and D. Pool.\nHorrocks, I. (1998). Using an expressive description logic: Fact or fiction?. In Proc. of the 8th Int. Conf. on the Principles of Knowledge Representation and Reasoning (KR-98).\nJäger, M. (1994). Probabilistic reasoning in terminological logics. In Proceedings of KR94, 5-th International Conference on Principles of Knowledge Representation and Reasoning, pp. 305–316 Bonn, FRG."
    }, {
      "heading" : null,
      "text" : "Koller, D., Levy, A., & Pfeffer, A. (1997). P-CLASSIC: A tractable probabilistic description logic. In Proc. of the 14th Nat. Conf. on Artificial Intelligence (AAAI-97), pp. 390– 397.\nKruse, R., Schwecke, E., & Heinsohn, J. (1991). Uncertainty and Vagueness in Knowledge Based Systems. Springer-Verlag, Berlin, Germany.\nLee, R. C. T. (1972). Fuzzy logic and the resolution principle. Journal of the ACM, 19 (1), 109–119.\nMeghini, C., Sebastiani, F., & Straccia, U. (1997). Modelling the retrieval of structured documents containing texts and images. In Proceedings of the First European Conference on Research and Advanced Technology for Digital Libraries, No. 1324 in Lecture Notes in Computer Science, pp. 325–344 Pisa, Italy.\nMeghini, C., Sebastiani, F., & Straccia, U. (1998). Mirlog: A logic for multimedia information retrieval. In Crestani, F., Lalmas, M., & van Rijsbergen, C. (Eds.), Logic and Uncertainty in Information Retrieval: Advanced models for the representation and retrieval of information, Vol. 4 of The Kluwer International Series On Information Retrieval, chap. 7, pp. 151–185. Kluwer Academic Publishers, Boston, USA.\nMeghini, C., & Straccia, U. (1996). A relevance terminological logic for information retrieval. In Proceedings of the 19th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval (ACM SIGIR-96), pp. 197–205 Zurich, Switzerland.\nNebel, B. (1988). Computational complexity of terminological reasoning in BACK. Artificial Intelligence, 34, 371–383.\nNebel, B. (1990). Reasoning and revision in hybrid representation systems. Springer, Heidelberg, FRG.\nPapadimitriou, C. H., & Steiglitz, K. (1982). Combinatorial Optimization: Algorithms and Complexity. Prentice-Hall, Englewood Cliffs, New Jersey.\nPearl, J. (1988). Probabilistic Reasoning in Intelligent Systems: Networks of Plausible Inference. Morgan Kaufmann, Los Altos.\nPeltason, C. (1991). The BACK system – an overview. SIGART Bulletin, 2 (3), 114–119.\nRoth, D. (1996). On the hardness of approximate reasoning. Artificial Intelligence Journal, 82, 273–302.\nSchmidt-Schauß, M., & Smolka, G. (1991). Attributive concept descriptions with complements. Artificial Intelligence, 48, 1–26.\nSebastiani, F. (1994). A probabilistic terminological logic for modelling information retrieval. In Proceedings of SIGIR-94, 17th ACM International Conference on Research and Development in Information Retrieval, pp. 122–130 Dublin, IRL. Published by Springer Verlag, Heidelberg, FRG."
    }, {
      "heading" : null,
      "text" : "Straccia, U. (1998). A fuzzy description logic. In Proc. of the 15th Nat. Conf. on Artificial Intelligence (AAAI-98), pp. 594–599 Madison, USA.\nStraccia, U. (2000a). A note on the relationship between fuzzy logic and four-valued logic. Technical report B4-22-10-2000, Istituto di Elaborazione dell’Informazione, Consiglio Nazionale delle Ricerche, Pisa, Italy.\nStraccia, U. (2000b). Reasoning and experimenting within Zadeh’s fuzzy propositional logic. Technical report 2000-b4-011, Istituto di Elaborazione dell’Informazione, Consiglio Nazionale delle Ricerche, Pisa, Italy.\nTresp, C., & Molitor, R. (1998). A description logic for vague knowledge. In Proc. of the 13th European Conf. on Artificial Intelligence (ECAI-98) Brighton (England).\nXiachun, C., Yunfei, J., & Xuhua, L. (1995). The rationality and decidability of fuzzy implications. In Proc. of the 14th Int. Joint Conf. on Artificial Intelligence (IJCAI95), pp. 1910–1911 Montreal, Canada. MK.\nYen, J. (1991). Generalizing term subsumption languages to fuzzy logic. In Proc. of the 12th Int. Joint Conf. on Artificial Intelligence (IJCAI-91), pp. 472–477 Sydney, Australia.\nZadeh, L. A. (1965). Fuzzy sets. Information and Control, 8 (3), 338–353."
    } ],
    "references" : [ {
      "title" : "KRIS: Knowledge representation and inference system, system description",
      "author" : [ "F. Baader", "B. Hollunder" ],
      "venue" : "ACM SIGART Bulletin,",
      "citeRegEx" : "Baader and Hollunder,? \\Q1991\\E",
      "shortCiteRegEx" : "Baader and Hollunder",
      "year" : 1991
    }, {
      "title" : "A terminological knowledge representation system with complete inference algorithm",
      "author" : [ "F. Baader", "B. Hollunder" ],
      "venue" : "In Proc. of the Workshop on Processing Declarative Knowledge,",
      "citeRegEx" : "Baader and Hollunder,? \\Q1991\\E",
      "shortCiteRegEx" : "Baader and Hollunder",
      "year" : 1991
    }, {
      "title" : "Representing and Reasoning with Probabilistic Knowledge",
      "author" : [ "F. Bacchus" ],
      "venue" : "The MIT Press.",
      "citeRegEx" : "Bacchus,? 1990",
      "shortCiteRegEx" : "Bacchus",
      "year" : 1990
    }, {
      "title" : "On the analytic formalism of the theory of fuzzy sets",
      "author" : [ "R. Bellman", "M. Giertz" ],
      "venue" : "Information Sciences,",
      "citeRegEx" : "Bellman and Giertz,? \\Q1973\\E",
      "shortCiteRegEx" : "Bellman and Giertz",
      "year" : 1973
    }, {
      "title" : "reducing” CLASSIC to practice: Knowledge representation meets reality",
      "author" : [ "R.J. Brachman" ],
      "venue" : "Proc. of the 3rd Int. Conf. on the Principles of Knowledge Representation and Reasoning (KR-92), pp. 247–258. Morgan Kaufmann, Los Altos.",
      "citeRegEx" : "Brachman,? 1992",
      "shortCiteRegEx" : "Brachman",
      "year" : 1992
    }, {
      "title" : "Decidable reasoning in terminological knowledge representation systems",
      "author" : [ "M. Buchheit", "F.M. Donini", "A. Schaerf" ],
      "venue" : "In Proc. of the 13th Int. Joint Conf. on Artificial Intelligence",
      "citeRegEx" : "Buchheit et al\\.,? \\Q1993\\E",
      "shortCiteRegEx" : "Buchheit et al\\.",
      "year" : 1993
    }, {
      "title" : "Decidable reasoning in terminological knowledge representation systems",
      "author" : [ "M. Buchheit", "F.M. Donini", "A. Schaerf" ],
      "venue" : "Journal of Artificial Intelligence Research,",
      "citeRegEx" : "Buchheit et al\\.,? \\Q1993\\E",
      "shortCiteRegEx" : "Buchheit et al\\.",
      "year" : 1993
    }, {
      "title" : "A sound and complete fuzzy logic system using Zadeh’s implication operator",
      "author" : [ "J. Chen", "S. Kundu" ],
      "venue" : "In Ras,",
      "citeRegEx" : "Chen and Kundu,? \\Q1996\\E",
      "shortCiteRegEx" : "Chen and Kundu",
      "year" : 1996
    }, {
      "title" : "A system of knowledge representation based on formulae of predicate calculus whose variables are annotated by expressions of a fuzzy terminological logic",
      "author" : [ "R.M. da Silva", "A.E.C. Pereira", "M.A. Netto" ],
      "venue" : "In Proc. of the 5th Int. Conf. on Information Processing and Managment of Uncertainty in Knowledge-Based Systems,",
      "citeRegEx" : "Silva et al\\.,? \\Q1994\\E",
      "shortCiteRegEx" : "Silva et al\\.",
      "year" : 1994
    }, {
      "title" : "Deduction in concept languages: From subsumption to instance checking",
      "author" : [ "F.M. Donini", "M. Lenzerini", "D. Nardi", "A. Schaerf" ],
      "venue" : "Journal of Logic and Computation,",
      "citeRegEx" : "Donini et al\\.,? \\Q1994\\E",
      "shortCiteRegEx" : "Donini et al\\.",
      "year" : 1994
    }, {
      "title" : "Fuzzy Sets and Systems",
      "author" : [ "D. Dubois", "H. Prade" ],
      "venue" : null,
      "citeRegEx" : "Dubois and Prade,? \\Q1980\\E",
      "shortCiteRegEx" : "Dubois and Prade",
      "year" : 1980
    }, {
      "title" : "Can we enforce full compositionality in uncertainty calculi",
      "author" : [ "D. Dubois", "H. Prade" ],
      "venue" : "In Proc. of the 11th Nat. Conf. on Artificial Intelligence",
      "citeRegEx" : "Dubois and Prade,? \\Q1994\\E",
      "shortCiteRegEx" : "Dubois and Prade",
      "year" : 1994
    }, {
      "title" : "Approximate and commonsense reasoning: From theory to practice",
      "author" : [ "D. Dubois", "H. Prade" ],
      "venue" : "In Ras,",
      "citeRegEx" : "Dubois and Prade,? \\Q1996\\E",
      "shortCiteRegEx" : "Dubois and Prade",
      "year" : 1996
    }, {
      "title" : "An analysis of first-order logics of probability",
      "author" : [ "J.Y. Halpern" ],
      "venue" : "Artificial Intelligence Journal, 46, 311–350.",
      "citeRegEx" : "Halpern,? 1990",
      "shortCiteRegEx" : "Halpern",
      "year" : 1990
    }, {
      "title" : "Probabilistic description logics",
      "author" : [ "J. Heinsohn" ],
      "venue" : "de Mantara, R. L., & Pool, D. (Eds.), Proceedings of the 10th Conference on Uncertainty in Artificila Intelligence, pp. 311–318.",
      "citeRegEx" : "Heinsohn,? 1994",
      "shortCiteRegEx" : "Heinsohn",
      "year" : 1994
    }, {
      "title" : "An alternative proof method for possibilistic logic and its application to terminological logics",
      "author" : [ "B. Hollunder" ],
      "venue" : "10th Annual Conference on Uncertainty in Artificial Intelligence Seattle, Washington. R. Lopez de Mantaras and D. Pool.",
      "citeRegEx" : "Hollunder,? 1994",
      "shortCiteRegEx" : "Hollunder",
      "year" : 1994
    }, {
      "title" : "Using an expressive description logic: Fact or fiction",
      "author" : [ "I. Horrocks" ],
      "venue" : "Proc. of the 8th Int. Conf. on the Principles of Knowledge Representation and Reasoning (KR-98).",
      "citeRegEx" : "Horrocks,? 1998",
      "shortCiteRegEx" : "Horrocks",
      "year" : 1998
    }, {
      "title" : "Probabilistic reasoning in terminological logics",
      "author" : [ "M. Jäger" ],
      "venue" : "Proceedings of KR94, 5-th International Conference on Principles of Knowledge Representation and Reasoning, pp. 305–316 Bonn, FRG. 164",
      "citeRegEx" : "Jäger,? 1994",
      "shortCiteRegEx" : "Jäger",
      "year" : 1994
    }, {
      "title" : "P-CLASSIC: A tractable probabilistic description logic",
      "author" : [ "D. Koller", "A. Levy", "A. Pfeffer" ],
      "venue" : "In Proc. of the 14th Nat. Conf. on Artificial Intelligence",
      "citeRegEx" : "Koller et al\\.,? \\Q1997\\E",
      "shortCiteRegEx" : "Koller et al\\.",
      "year" : 1997
    }, {
      "title" : "Uncertainty and Vagueness in Knowledge Based Systems",
      "author" : [ "R. Kruse", "E. Schwecke", "J. Heinsohn" ],
      "venue" : null,
      "citeRegEx" : "Kruse et al\\.,? \\Q1991\\E",
      "shortCiteRegEx" : "Kruse et al\\.",
      "year" : 1991
    }, {
      "title" : "Fuzzy logic and the resolution principle",
      "author" : [ "R.C.T. Lee" ],
      "venue" : "Journal of the ACM, 19 (1), 109–119.",
      "citeRegEx" : "Lee,? 1972",
      "shortCiteRegEx" : "Lee",
      "year" : 1972
    }, {
      "title" : "Modelling the retrieval of structured documents containing texts and images",
      "author" : [ "C. Meghini", "F. Sebastiani", "U. Straccia" ],
      "venue" : "In Proceedings of the First European Conference on Research and Advanced Technology for Digital Libraries,",
      "citeRegEx" : "Meghini et al\\.,? \\Q1997\\E",
      "shortCiteRegEx" : "Meghini et al\\.",
      "year" : 1997
    }, {
      "title" : "Mirlog: A logic for multimedia information retrieval",
      "author" : [ "C. Meghini", "F. Sebastiani", "U. Straccia" ],
      "venue" : "On Information Retrieval,",
      "citeRegEx" : "Meghini et al\\.,? \\Q1998\\E",
      "shortCiteRegEx" : "Meghini et al\\.",
      "year" : 1998
    }, {
      "title" : "A relevance terminological logic for information retrieval",
      "author" : [ "C. Meghini", "U. Straccia" ],
      "venue" : "In Proceedings of the 19th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval (ACM",
      "citeRegEx" : "Meghini and Straccia,? \\Q1996\\E",
      "shortCiteRegEx" : "Meghini and Straccia",
      "year" : 1996
    }, {
      "title" : "Computational complexity of terminological reasoning in BACK",
      "author" : [ "B. Nebel" ],
      "venue" : "Artificial Intelligence, 34, 371–383.",
      "citeRegEx" : "Nebel,? 1988",
      "shortCiteRegEx" : "Nebel",
      "year" : 1988
    }, {
      "title" : "Reasoning and revision in hybrid representation systems",
      "author" : [ "B. Nebel" ],
      "venue" : "Springer, Heidelberg, FRG.",
      "citeRegEx" : "Nebel,? 1990",
      "shortCiteRegEx" : "Nebel",
      "year" : 1990
    }, {
      "title" : "Combinatorial Optimization: Algorithms and Complexity",
      "author" : [ "C.H. Papadimitriou", "K. Steiglitz" ],
      "venue" : null,
      "citeRegEx" : "Papadimitriou and Steiglitz,? \\Q1982\\E",
      "shortCiteRegEx" : "Papadimitriou and Steiglitz",
      "year" : 1982
    }, {
      "title" : "Probabilistic Reasoning in Intelligent Systems: Networks of Plausible Inference",
      "author" : [ "J. Pearl" ],
      "venue" : "Morgan Kaufmann, Los Altos.",
      "citeRegEx" : "Pearl,? 1988",
      "shortCiteRegEx" : "Pearl",
      "year" : 1988
    }, {
      "title" : "The BACK system – an overview",
      "author" : [ "C. Peltason" ],
      "venue" : "SIGART Bulletin, 2 (3), 114–119.",
      "citeRegEx" : "Peltason,? 1991",
      "shortCiteRegEx" : "Peltason",
      "year" : 1991
    }, {
      "title" : "On the hardness of approximate reasoning",
      "author" : [ "D. Roth" ],
      "venue" : "Artificial Intelligence Journal, 82, 273–302.",
      "citeRegEx" : "Roth,? 1996",
      "shortCiteRegEx" : "Roth",
      "year" : 1996
    }, {
      "title" : "Attributive concept descriptions with complements",
      "author" : [ "M. Schmidt-Schauß", "G. Smolka" ],
      "venue" : "Artificial Intelligence,",
      "citeRegEx" : "Schmidt.Schauß and Smolka,? \\Q1991\\E",
      "shortCiteRegEx" : "Schmidt.Schauß and Smolka",
      "year" : 1991
    }, {
      "title" : "A probabilistic terminological logic for modelling information retrieval",
      "author" : [ "F. Sebastiani" ],
      "venue" : "Proceedings of SIGIR-94, 17th ACM International Conference on Research and Development in Information Retrieval, pp. 122–130 Dublin, IRL. Published by Springer Verlag, Heidelberg, FRG. 165",
      "citeRegEx" : "Sebastiani,? 1994",
      "shortCiteRegEx" : "Sebastiani",
      "year" : 1994
    }, {
      "title" : "A fuzzy description logic",
      "author" : [ "U. Straccia" ],
      "venue" : "Proc. of the 15th Nat. Conf. on Artificial Intelligence (AAAI-98), pp. 594–599 Madison, USA.",
      "citeRegEx" : "Straccia,? 1998",
      "shortCiteRegEx" : "Straccia",
      "year" : 1998
    }, {
      "title" : "A note on the relationship between fuzzy logic and four-valued logic",
      "author" : [ "U. Straccia" ],
      "venue" : "Technical report B4-22-10-2000, Istituto di Elaborazione dell’Informazione, Consiglio Nazionale delle Ricerche, Pisa, Italy.",
      "citeRegEx" : "Straccia,? 2000a",
      "shortCiteRegEx" : "Straccia",
      "year" : 2000
    }, {
      "title" : "Reasoning and experimenting within Zadeh’s fuzzy propositional logic",
      "author" : [ "U. Straccia" ],
      "venue" : "Technical report 2000-b4-011, Istituto di Elaborazione dell’Informazione, Consiglio Nazionale delle Ricerche, Pisa, Italy.",
      "citeRegEx" : "Straccia,? 2000b",
      "shortCiteRegEx" : "Straccia",
      "year" : 2000
    }, {
      "title" : "A description logic for vague knowledge",
      "author" : [ "C. Tresp", "R. Molitor" ],
      "venue" : "In Proc. of the 13th European Conf. on Artificial Intelligence (ECAI-98) Brighton (England)",
      "citeRegEx" : "Tresp and Molitor,? \\Q1998\\E",
      "shortCiteRegEx" : "Tresp and Molitor",
      "year" : 1998
    }, {
      "title" : "The rationality and decidability of fuzzy implications",
      "author" : [ "C. Xiachun", "J. Yunfei", "L. Xuhua" ],
      "venue" : "In Proc. of the 14th Int. Joint Conf. on Artificial Intelligence",
      "citeRegEx" : "Xiachun et al\\.,? \\Q1995\\E",
      "shortCiteRegEx" : "Xiachun et al\\.",
      "year" : 1995
    }, {
      "title" : "Generalizing term subsumption languages to fuzzy logic",
      "author" : [ "J. Yen" ],
      "venue" : "Proc. of the 12th Int. Joint Conf. on Artificial Intelligence (IJCAI-91), pp. 472–477 Sydney, Australia.",
      "citeRegEx" : "Yen,? 1991",
      "shortCiteRegEx" : "Yen",
      "year" : 1991
    }, {
      "title" : "Fuzzy sets",
      "author" : [ "L.A. Zadeh" ],
      "venue" : "Information and Control, 8 (3), 338–353. 166",
      "citeRegEx" : "Zadeh,? 1965",
      "shortCiteRegEx" : "Zadeh",
      "year" : 1965
    } ],
    "referenceMentions" : [ {
      "referenceID" : 2,
      "context" : "An impressive work has been carried out in the last decades, resulting in a number of concepts being investigated, a number of problems being identified and a number of solutions being developed (Bacchus, 1990; Dubois & Prade, 1996; Kruse, Schwecke, & Heinsohn, 1991; Pearl, 1988).",
      "startOffset" : 195,
      "endOffset" : 280
    }, {
      "referenceID" : 27,
      "context" : "An impressive work has been carried out in the last decades, resulting in a number of concepts being investigated, a number of problems being identified and a number of solutions being developed (Bacchus, 1990; Dubois & Prade, 1996; Kruse, Schwecke, & Heinsohn, 1991; Pearl, 1988).",
      "startOffset" : 195,
      "endOffset" : 280
    }, {
      "referenceID" : 28,
      "context" : "Nowadays, a whole family of knowledge representation systems has been build using DLs, which differ with respect to their expressiveness, their complexity and the completeness of their algorithms, and they have been used for building a variety of applications (Peltason, 1991; Brachman, 1992; Baader & Hollunder, 1991a; Horrocks, 1998).",
      "startOffset" : 260,
      "endOffset" : 335
    }, {
      "referenceID" : 4,
      "context" : "Nowadays, a whole family of knowledge representation systems has been build using DLs, which differ with respect to their expressiveness, their complexity and the completeness of their algorithms, and they have been used for building a variety of applications (Peltason, 1991; Brachman, 1992; Baader & Hollunder, 1991a; Horrocks, 1998).",
      "startOffset" : 260,
      "endOffset" : 335
    }, {
      "referenceID" : 16,
      "context" : "Nowadays, a whole family of knowledge representation systems has been build using DLs, which differ with respect to their expressiveness, their complexity and the completeness of their algorithms, and they have been used for building a variety of applications (Peltason, 1991; Brachman, 1992; Baader & Hollunder, 1991a; Horrocks, 1998).",
      "startOffset" : 260,
      "endOffset" : 335
    }, {
      "referenceID" : 37,
      "context" : "The choice of fuzzy set theory as a way of endowing a DL with the capability to deal with imprecision is not uncommon (da Silva, Pereira, & Netto, 1994; Tresp & Molitor, 1998; Yen, 1991) and can be motivated",
      "startOffset" : 118,
      "endOffset" : 186
    }, {
      "referenceID" : 20,
      "context" : "• from a proof theoretical point of view, as there exist well-known techniques for reasoning in fuzzy logics (Chen & Kundu, 1996; Lee, 1972; Xiachun, Yunfei, & Xuhua, 1995).",
      "startOffset" : 109,
      "endOffset" : 172
    }, {
      "referenceID" : 14,
      "context" : "probabilistic extension (Heinsohn, 1994; Jäger, 1994; Koller, Levy, & Pfeffer, 1997; Sebastiani, 1994) with some exceptions like shown by Hollunder (1994) where a possibilistic DL has been considered.",
      "startOffset" : 24,
      "endOffset" : 102
    }, {
      "referenceID" : 17,
      "context" : "probabilistic extension (Heinsohn, 1994; Jäger, 1994; Koller, Levy, & Pfeffer, 1997; Sebastiani, 1994) with some exceptions like shown by Hollunder (1994) where a possibilistic DL has been considered.",
      "startOffset" : 24,
      "endOffset" : 102
    }, {
      "referenceID" : 31,
      "context" : "probabilistic extension (Heinsohn, 1994; Jäger, 1994; Koller, Levy, & Pfeffer, 1997; Sebastiani, 1994) with some exceptions like shown by Hollunder (1994) where a possibilistic DL has been considered.",
      "startOffset" : 24,
      "endOffset" : 102
    }, {
      "referenceID" : 14,
      "context" : "probabilistic extension (Heinsohn, 1994; Jäger, 1994; Koller, Levy, & Pfeffer, 1997; Sebastiani, 1994) with some exceptions like shown by Hollunder (1994) where a possibilistic DL has been considered.",
      "startOffset" : 25,
      "endOffset" : 155
    }, {
      "referenceID" : 13,
      "context" : "Moreover, reasoning in a probabilistic framework is generally a harder task, from a computational point of view, than the relative non probabilistic case and in most cases a complete axiomatization is missing (Halpern, 1990; Roth, 1996).",
      "startOffset" : 209,
      "endOffset" : 236
    }, {
      "referenceID" : 29,
      "context" : "Moreover, reasoning in a probabilistic framework is generally a harder task, from a computational point of view, than the relative non probabilistic case and in most cases a complete axiomatization is missing (Halpern, 1990; Roth, 1996).",
      "startOffset" : 209,
      "endOffset" : 236
    }, {
      "referenceID" : 18,
      "context" : "As a consequence, the computational problems have to be addressed carefully (Koller et al., 1997).",
      "startOffset" : 76,
      "endOffset" : 97
    }, {
      "referenceID" : 25,
      "context" : "It is well known (Buchheit, Donini, & Schaerf, 1993a; Donini, Lenzerini, Nardi, & Schaerf, 1994; Nebel, 1990) that in ALC",
      "startOffset" : 17,
      "endOffset" : 109
    }, {
      "referenceID" : 25,
      "context" : "The expansion of a KB K works as follows (Nebel, 1990).",
      "startOffset" : 41,
      "endOffset" : 54
    }, {
      "referenceID" : 24,
      "context" : "While this allows us to restrict our attention to purely assertional KBs only, it is worth noting that the expansion process can be exponential (Nebel, 1988).",
      "startOffset" : 144,
      "endOffset" : 157
    }, {
      "referenceID" : 9,
      "context" : "There exists a well known technique based on constraint propagation solving this problem (Schmidt-Schauß & Smolka, 1991; Buchheit, Donini, & Schaerf, 1993b; Donini et al., 1994).",
      "startOffset" : 89,
      "endOffset" : 177
    }, {
      "referenceID" : 38,
      "context" : "Our fuzzy extension directly relates to Zadeh’s work on fuzzy sets (Zadeh, 1965).",
      "startOffset" : 67,
      "endOffset" : 80
    }, {
      "referenceID" : 3,
      "context" : "A justification of the choice of the min and the max was given by Bellman and Giertz (1973), which have shown that under certain reasonable conditions min and max are the unique possible choice for set intersection and set union, respectively.",
      "startOffset" : 66,
      "endOffset" : 92
    }, {
      "referenceID" : 32,
      "context" : "Note that in the work of Straccia (1998), no fuzzy assertion of the form 〈α ≤ n〉 is allowed.",
      "startOffset" : 25,
      "endOffset" : 41
    }, {
      "referenceID" : 38,
      "context" : "From a semantics point of view, we consider the natural extension of classical set inclusion to the fuzzy case (Zadeh, 1965).",
      "startOffset" : 111,
      "endOffset" : 124
    }, {
      "referenceID" : 32,
      "context" : "Note that in the work of Straccia (1998) a fuzzy specialisation is “non-standard”.",
      "startOffset" : 25,
      "endOffset" : 41
    }, {
      "referenceID" : 32,
      "context" : "Note that in the work of Straccia (1998) a fuzzy specialisation is “non-standard”. Indeed, Straccia (1998) considered fuzzy specialisations of the form 〈A → C ≥ n〉 where (A → C) = mind∈∆I{max{1 − A (d), C(d)}}.",
      "startOffset" : 25,
      "endOffset" : 107
    }, {
      "referenceID" : 32,
      "context" : "Several properties described by Straccia (2000b) for the propositional case are easily extended to our first order case too.",
      "startOffset" : 32,
      "endOffset" : 49
    }, {
      "referenceID" : 32,
      "context" : "Note that, according to Straccia (1998)",
      "startOffset" : 24,
      "endOffset" : 40
    }, {
      "referenceID" : 20,
      "context" : "Once we restrict the attention to normalised fuzzy assertions, a converse relation follows immediately (Lee, 1972; Straccia, 2000b).",
      "startOffset" : 103,
      "endOffset" : 131
    }, {
      "referenceID" : 34,
      "context" : "Once we restrict the attention to normalised fuzzy assertions, a converse relation follows immediately (Lee, 1972; Straccia, 2000b).",
      "startOffset" : 103,
      "endOffset" : 131
    }, {
      "referenceID" : 20,
      "context" : "The following proposition follows from (Lee, 1972; Straccia, 2000b) and relies on the fact that 〈α ≥ n〉 and 〈α ≤ m〉 are together inconsistent, if n > 0.",
      "startOffset" : 39,
      "endOffset" : 67
    }, {
      "referenceID" : 34,
      "context" : "The following proposition follows from (Lee, 1972; Straccia, 2000b) and relies on the fact that 〈α ≥ n〉 and 〈α ≤ m〉 are together inconsistent, if n > 0.",
      "startOffset" : 39,
      "endOffset" : 67
    }, {
      "referenceID" : 20,
      "context" : "The following proposition follows from (Lee, 1972; Straccia, 2000b) and relies on the fact that 〈α ≥ n〉 and 〈α ≤ m〉 are together inconsistent, if n > 0.5 and m < 0.5. In particular, Straccia (2000b) shows that if Σ and ψ are a normalised fuzzy propositional KB and a query-normalised fuzzy proposition, then Then Σ|≈ψ iff ♯Σ |= ♯ψ.",
      "startOffset" : 40,
      "endOffset" : 199
    }, {
      "referenceID" : 5,
      "context" : "We will develop a calculus in the style of the constraint propagation method, as this method is usually proposed in the context of DLs (Buchheit et al., 1993a). The calculus extends the fuzzy propositional calculus described by Chen and Kundu (1996) and by Straccia (2000b) to our fuzzy DL case.",
      "startOffset" : 136,
      "endOffset" : 250
    }, {
      "referenceID" : 5,
      "context" : "We will develop a calculus in the style of the constraint propagation method, as this method is usually proposed in the context of DLs (Buchheit et al., 1993a). The calculus extends the fuzzy propositional calculus described by Chen and Kundu (1996) and by Straccia (2000b) to our fuzzy DL case.",
      "startOffset" : 136,
      "endOffset" : 274
    }, {
      "referenceID" : 30,
      "context" : "In order to require polynomial space, Schmidt-Schauß and Smolka (1991) introduced the so-called trace rule (T∃) for the ∃ operator.",
      "startOffset" : 38,
      "endOffset" : 71
    }, {
      "referenceID" : 9,
      "context" : "In the general case, we have to rely on so-called pre-completions (Baader & Hollunder, 1991b; Donini et al., 1994).",
      "startOffset" : 66,
      "endOffset" : 114
    }, {
      "referenceID" : 28,
      "context" : "Schmidt-Schauß and Smolka (1991) have shown that a set of constraints S = {x:C} is satisfiable iff no trace S of S contains a clash.",
      "startOffset" : 0,
      "endOffset" : 33
    }, {
      "referenceID" : 32,
      "context" : "✷ How can we check whether for all n > 0 〈a:C ≥ n〉|≈〈a:D ≥ n〉 holds? A solution to this problem, restricted to the propositional case, is given by Straccia (2000a). Indeed, it is shown that",
      "startOffset" : 147,
      "endOffset" : 164
    }, {
      "referenceID" : 33,
      "context" : "Proposition 6 (Straccia, 2000a) Let p and q be two propositions, 0 < n1 ≤ 0.",
      "startOffset" : 14,
      "endOffset" : 31
    }, {
      "referenceID" : 32,
      "context" : "Straccia (2000b) has shown that, in case of fuzzy propositional logic, from a set Σ of fuzzy propositions of the form 〈p ≥ n〉 and 〈p ≤ n〉, where p is a proposition, it is possible to determine a finite set NΣ ⊂ [0, 1], where |NΣ| is O(|Σ|), such that glb(Σ, q) ∈ NΣ, i.",
      "startOffset" : 0,
      "endOffset" : 17
    }, {
      "referenceID" : 34,
      "context" : "Proposition 8 (Straccia, 2000b) Let Σ be a set of fuzzy propositions in NNF and let q be a proposition.",
      "startOffset" : 14,
      "endOffset" : 31
    }, {
      "referenceID" : 37,
      "context" : "The extension of DLs to the management of vagueness is not new (Tresp & Molitor, 1998; Yen, 1991).",
      "startOffset" : 63,
      "endOffset" : 97
    }, {
      "referenceID" : 35,
      "context" : "This last idea has been generalised to ALC by Tresp and Molitor (1998) where a certain type of concept modifiers are allowed.",
      "startOffset" : 46,
      "endOffset" : 71
    } ],
    "year" : 2011,
    "abstractText" : "Description Logics (DLs) are suitable, well-known, logics for managing structured knowledge. They allow reasoning about individuals and well defined concepts, i.e. set of individuals with common properties. The experience in using DLs in applications has shown that in many cases we would like to extend their capabilities. In particular, their use in the context of Multimedia Information Retrieval (MIR) leads to the convincement that such DLs should allow the treatment of the inherent imprecision in multimedia object content representation and retrieval. In this paper we will present a fuzzy extension of ALC, combining Zadeh’s fuzzy logic with a classical DL. In particular, concepts becomes fuzzy and, thus, reasoning about imprecise concepts is supported. We will define its syntax, its semantics, describe its properties and present a constraint propagation calculus for reasoning in it.",
    "creator" : "(Textures\\250: LaserWriter 8 8.6.5)"
  }
}